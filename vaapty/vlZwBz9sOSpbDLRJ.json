{
  "createdAt": "2025-03-20T06:27:56.183Z",
  "updatedAt": "2025-04-03T08:28:31.059Z",
  "id": "vlZwBz9sOSpbDLRJ",
  "name": "Project | Vaal-AI | SDR",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        900,
        580
      ],
      "id": "e0673ab3-2c7e-4786-82ae-50ceba624fad",
      "name": "Postgres",
      "disabled": true
    },
    {
      "parameters": {
        "content": "### Cria tabela documentos",
        "height": 240,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        840,
        520
      ],
      "typeVersion": 1,
      "id": "d0b56d3a-50fd-452c-b796-21974b269957",
      "name": "Sticky Note31",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        620,
        580
      ],
      "id": "fdf6cf9a-1962-4a17-a30a-ee12fe29e1ce",
      "name": "Postgres1",
      "disabled": true
    },
    {
      "parameters": {
        "content": "### Cria tabela dados_cliente",
        "height": 240,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        560,
        520
      ],
      "typeVersion": 1,
      "id": "a6976a56-1987-400b-b86f-17ae9a3bad03",
      "name": "Sticky Note33",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        340,
        580
      ],
      "id": "2aab18e7-1b9e-4902-b13c-d89e698f1a49",
      "name": "Postgres5",
      "credentials": {
        "postgres": {
          "id": "ZaC2FzQI2843ua9k",
          "name": "conn-postgres-codai"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "### Cria função pesquisa R.A.G",
        "height": 240,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        280,
        520
      ],
      "typeVersion": 1,
      "id": "8b991738-ddad-4a9a-b168-b88d4e2ad441",
      "name": "Sticky Note48",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create extension vector;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        60,
        580
      ],
      "id": "b119488c-77e6-4e72-ad94-fc9fb9bde8d3",
      "name": "Postgres6",
      "disabled": true
    },
    {
      "parameters": {
        "content": "### Cria Extensão Vector",
        "height": 240,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        520
      ],
      "typeVersion": 1,
      "id": "1d3b5c32-4c91-4110-a9e0-2d801e756850",
      "name": "Sticky Note50",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Pausa para Atendimento Humano",
        "height": 440,
        "width": 1440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        820
      ],
      "typeVersion": 1,
      "id": "70c889fa-ac89-4814-9f53-238c413fec99",
      "name": "Sticky Note29"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "vaal-ai-sdr",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        40,
        920
      ],
      "id": "78a84084-60a6-4966-b214-803dd0d3cd40",
      "name": "Webhook",
      "webhookId": "a287b2e0-3d79-434c-9b04-46f3a58acb43"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now.setLocale('pt-BR').setZone(\"America/Sao_Paulo\") }}",
        "format": "custom",
        "customFormat": "EEEE, dd 'de' MMMM 'de' yyyy 'às' HH:mm",
        "outputFieldName": "=formattedDate",
        "options": {
          "includeInputFields": false,
          "timezone": true
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        200,
        920
      ],
      "id": "89594482-cbc7-4a7c-a441-b5a2a59c555c",
      "name": "Date & Time1",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Registro de Cliente no Supabase",
        "height": 440,
        "width": 1220,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1500,
        820
      ],
      "typeVersion": 1,
      "id": "c6cfbb2c-1aee-4b4a-8a96-fd8c04ea345e",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "## Classifica Mensagens",
        "height": 440,
        "width": 720,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2780,
        820
      ],
      "typeVersion": 1,
      "id": "7798221e-1df8-4045-af22-51a3fe769c16",
      "name": "Sticky Note28",
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('payload_handler').item.json.data.msgType }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d8c1d47a-0014-4d4c-8c43-c68df3a99df2",
                    "leftValue": "={{ $('payload_handler').item.json.data.msgType }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2840,
        880
      ],
      "id": "f90e04cb-1598-4888-b274-4ea0a9c91d5c",
      "name": "message-type"
    },
    {
      "parameters": {
        "url": "={{ $('payload_handler').item.json.data.audioURL }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3020,
        1060
      ],
      "id": "6355c1c5-b3ee-4ab4-b81b-204b7a3b5e0d",
      "name": "get-audio"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "pt"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        3240,
        1060
      ],
      "id": "054bfff5-bff8-47ea-9c3c-113bd94a3879",
      "name": "openai-transcribe-audio",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.data.phone }}_msg_buffer",
        "messageData": "={{ $('payload_handler').item.json.data.message }}",
        "tail": true
      },
      "id": "09d532f5-3fc0-447e-84e5-ec6e0f0f3203",
      "name": "Text Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3240,
        860
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.data.phone }}_msg_buffer",
        "messageData": "={{ $('openai-transcribe-audio').item.json.text }}",
        "tail": true
      },
      "id": "07b00a87-4941-4d7f-8ea8-5485ef0478c2",
      "name": "Audio Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3620,
        1060
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $item(0).$node[\"Compara Get Memory\"].json[\"Redis2\"]; // Obtém o valor de Redis2 do nó \"If\"\n\n// Verifica se o dado é uma string que representa um array, e converte se necessário\nlet array = Array.isArray(data) ? data : JSON.parse(data);\n\n// Junta os elementos do array com um espaço entre eles\nconst mensagem_completa = array.join(\" \");\n\n// Retorna o resultado com o nome da variável \"mensagem_completa\"\nreturn [{ json: { mensagem_completa } }];\n"
      },
      "id": "9e520f03-6651-4aec-9f28-6a5d17f415aa",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4860,
        960
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.data.phone }}_msg_buffer",
        "options": {}
      },
      "id": "a0b016fd-50f4-4da9-9c28-9433cedea4fe",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4180,
        980
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "content": "## Mensagem Picotada",
        "height": 440,
        "width": 1180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3560,
        820
      ],
      "typeVersion": 1,
      "id": "16ac96cc-66c4-4bc1-b5f3-dcff850ccac7",
      "name": "Sticky Note24",
      "disabled": true
    },
    {
      "parameters": {},
      "id": "070e5841-74b4-4334-ad33-900648a14f22",
      "name": "Wait 5 seg",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4020,
        980
      ],
      "webhookId": "7508fa49-bc87-45fc-bc55-e92f0d00664a"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.data.phone }}_msg_buffer",
        "options": {}
      },
      "id": "2154ac3c-1f92-4523-8d19-d05ba7086838",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3840,
        980
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $('Edit Redis Memory').item.json.Redis2 }}",
              "rightValue": "={{ $('Edit Redis Memory').item.json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e53cba7a-841d-47e4-a664-2efeda82e216",
      "name": "Compara Get Memory",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4500,
        980
      ]
    },
    {
      "parameters": {
        "content": "## Atendente Vaal",
        "height": 700,
        "width": 1140,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4800,
        820
      ],
      "typeVersion": 1,
      "id": "351fee7c-346c-4e5c-bf3b-9c672965abcd",
      "name": "Sticky Note4",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4840,
        1220
      ],
      "id": "79c1527f-e1af-435f-af54-660161cf15ec",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('payload_handler').item.json.data.phone }}_chat_memory",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        5000,
        1220
      ],
      "id": "30f18fed-f8c1-4c52-8e28-e9a40300abd4",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "ZaC2FzQI2843ua9k",
          "name": "conn-postgres-codai"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        160,
        1500
      ],
      "id": "5da2a229-643e-44c3-afef-c3da4533847d",
      "name": "When clicking ‘Test workflow’",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=5511967362820_msg_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        340,
        300
      ],
      "id": "fcb13791-ba49-4008-b355-b24b17c88c7d",
      "name": "redis-clear-messages-buffer",
      "disabled": true
    },
    {
      "parameters": {
        "content": "Clear Redis Messages Buffer & Memory",
        "height": 260,
        "width": 820,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        240
      ],
      "typeVersion": 1,
      "id": "debd6aad-05a6-46f8-bab1-530c4a01536f",
      "name": "Sticky Note1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f805cbf0-fa5c-438b-85ee-4927f61aa79a",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        5800,
        1140
      ],
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "amount": 4
      },
      "id": "be5e38f2-403e-4431-a122-87823b42365b",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6740,
        1060
      ],
      "webhookId": "2cc53c9a-b7bd-4844-a9c1-76dc1365a0a9"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=message to be splitted: {{ $('vaal-agente-principal').item.json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n\n```json\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n```\n\nAs mensagens devem ser divididas de forma natural e legível, considerando que estamos nos comunicando com um humano.\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo colchetes, aspas e a formatação do texto.\n\nRegras de Formatação:\n  Negrito: Use *palavra* em vez de **palavra**.\n  Tachado: Para indicar texto excluído ou alterado.\n  Itálico: Utilize apenas em casos extremamente raros.\n  link: Sempre usar essa formatação para todos os links.\n\nRegras para separação das mensagens:\nMensagem de introdução: Deve ser uma mensagem separada.\nDetalhes do agendamento: Devem ser mantidos juntos em uma única mensagem, usando \\n para quebras de linha.\nMensagem final de suporte: Deve ser separada.\n\nExemplo de saída esperada:\n```json\n{\n  \"messages\": [\n    \"João, eu verifiquei as informações e você já tem um agendamento confirmado para a avaliação do seu veículo.\",\n    \"*Aqui estão os detalhes:*\\n\\n📅 *Data:* 03/03/2025\\n⏰ *Hora:* 09:00\\n📍 *Unidade:* São Paulo (Santana)\\n🚗 *Veículo:* Cobalt\",\n    \"Se precisar de mais alguma coisa ou desejar alterar algum detalhe, é só me avisar! 😊\"\n  ]\n}\n```"
            }
          ]
        }
      },
      "id": "383c27e7-ae6d-4dff-8147-dfc96e5f7390",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        5800,
        960
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('payload_handler').item.json.data.phone }}_msg_buffer"
      },
      "id": "3ed9bd1d-c9cf-4804-b1a6-d55900347920",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        6540,
        900
      ],
      "credentials": {
        "redis": {
          "id": "arV6HkUHrkkP7yt4",
          "name": "conn-redis-cloud"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "vaapty_documents",
          "mode": "list",
          "cachedResultName": "vaapty_documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        4960,
        1760
      ],
      "id": "42ed6c50-ac0b-4851-84b2-be79d885fa36",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "VsqrwGucgRNjLoIu",
          "name": "conn-supabase-codai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        4860,
        1900
      ],
      "id": "43abd6a7-58fa-421b-a561-3c738aa52353",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=5511967362820_block"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        620,
        300
      ],
      "id": "3b8231cb-6265-4b39-8af9-3af5e2eb2df5",
      "name": "redis-clear-messages-buffer1",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "  return $('Webhook').all().map(item => {\n  let msgType = \"unknown\";\n\n  // Verifica se há uma mensagem de texto\n  if (item.json.body.body.text && item.json.body.body.text.message) {\n    msgType = \"text\";\n  }\n\n  // Verifica se há um áudio\n  if (item.json.body.body.audio && item.json.body.body.audio.audioUrl) {\n    msgType = \"audio\";\n  }\n\n  // Verifica se há uma imagem\n  if (item.json.body.body.image && item.json.body.body.image.imageUrl) {\n    msgType = \"image\";\n  }\n\n  \n  // Adiciona o tipo de mensagem ao JSON\n  item.json.body.body.msgType = msgType;\n\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        360,
        920
      ],
      "id": "23b1625d-aa38-4f32-aab1-dd296b4e61ef",
      "name": "code-normalizer"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "TELEFONE",
              "lookupValue": "={{ $('payload_handler').item.json.data.phone }}"
            },
            {
              "lookupColumn": "STATUS",
              "lookupValue": "AGENDADO"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        5380,
        1340
      ],
      "id": "b6e9ea7a-9c5e-426c-b9af-812ee7eb3620",
      "name": "consulta_agendamentos",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "VMcFCbN41WNNgtef",
          "name": "conn-google-sheets-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "TELEFONE": "={{ $('payload_handler').item.json.data.phone }}",
            "STATUS": "CANCELADO_LEAD"
          },
          "matchingColumns": [
            "TELEFONE"
          ],
          "schema": [
            {
              "id": "FOLLOW_UP",
              "displayName": "FOLLOW_UP",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA",
              "displayName": "DIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA",
              "displayName": "HORA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA_SEMANA",
              "displayName": "DIA_SEMANA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRE_VENDA",
              "displayName": "PRE_VENDA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CLIENTE",
              "displayName": "CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CARRO",
              "displayName": "CARRO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "TELEFONE",
              "displayName": "TELEFONE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ORIGEM",
              "displayName": "ORIGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "OBSERVACAO",
              "displayName": "OBSERVACAO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "UNIDADE",
              "displayName": "UNIDADE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "VEIO",
              "displayName": "VEIO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DESFECHO",
              "displayName": "DESFECHO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "MOTIVO",
              "displayName": "MOTIVO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        5540,
        1340
      ],
      "id": "de107007-6a10-4577-a699-d81de99aad26",
      "name": "cancelar_agendamentos",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "VMcFCbN41WNNgtef",
          "name": "conn-google-sheets-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "vaapty_leads",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('payload_handler').item.json.data.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_msg",
              "fieldValue": "={{ $now.minus() }}"
            },
            {
              "fieldId": "follow_up_times",
              "fieldValue": "0"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2560,
        880
      ],
      "id": "38c47c26-1a7d-4210-b98f-44f89bc11d50",
      "name": "supabase-update-last-msg",
      "credentials": {
        "supabaseApi": {
          "id": "VsqrwGucgRNjLoIu",
          "name": "conn-supabase-codai"
        }
      }
    },
    {
      "parameters": {
        "tableId": "vaapty_leads",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "id",
              "fieldValue": "={{ $('payload_handler').item.json.data.phone.toNumber() }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $('payload_handler').item.json.data.fullName }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2140,
        1100
      ],
      "id": "d820a8f5-c6d1-4578-af2c-b5cec6eb5afe",
      "name": "supabase-create-lead",
      "credentials": {
        "supabaseApi": {
          "id": "VsqrwGucgRNjLoIu",
          "name": "conn-supabase-codai"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $('supabase-get-lead').item.json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1940,
        900
      ],
      "id": "56490a42-501a-42bb-90de-c4e2d2c6337d",
      "name": "if-existing-lead"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "vaapty_leads",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $('payload_handler').item.json.data.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1760,
        900
      ],
      "id": "1ce56a74-ffb3-4d35-875a-43ac217e79b5",
      "name": "supabase-get-lead",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "VsqrwGucgRNjLoIu",
          "name": "conn-supabase-codai"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vaal Ativa"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vaal Desativada"
            }
          ]
        },
        "options": {}
      },
      "id": "3e85ae67-6b4f-4a5a-8ebe-e1d7533fedcb",
      "name": "switch-block-ai",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1540,
        1080
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $('payload_handler').item.json.data.phone }}_block",
        "options": {}
      },
      "id": "77af4f61-20db-4295-b274-186ad3ebc073",
      "name": "verifica-intervencao-humana",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1160,
        1080
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1760,
        1100
      ],
      "id": "e5843dfc-3fd7-49cd-9a59-ad51ee66d575",
      "name": "Não faz nada - AI Pausada"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4bee2c7b-e8fa-420c-9d5e-6140002eca91",
                    "leftValue": "={{ $('payload_handler').item.json.data.fromMe && !$('payload_handler').item.json.data.fromApi && !$('payload_handler').item.json.data.message.includes(\"VAAPTY agradece seu contato. Como podemos ajudar?\") }}",
                    "rightValue": "eventN8n",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "eventMe"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ !$('payload_handler').item.json.data.fromMe && !$('payload_handler').item.json.data.fromApi }}",
                    "rightValue": "fromClient",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "eventUser"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "338e5d93-a032-4e47-a04f-2ab56effa1b2",
                    "leftValue": "={{ $('payload_handler').item.json.data.fromMe && $('payload_handler').item.json.data.fromApi }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "eventN8n"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0d221047-e00d-470e-882a-73ce09c5b4cc",
                    "leftValue": "={{ $('payload_handler').item.json.data.fromMe && $('payload_handler').item.json.data.message.includes(\"VAAPTY agradece seu contato. Como podemos ajudar?\") }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "eventAutoMsg"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        680,
        920
      ],
      "id": "9214d45c-14c8-4bf3-bfc4-cfa4dbc00af7",
      "name": "switch-msg-from"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 15
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        3140,
        1620
      ],
      "id": "25b38dbb-f8bc-45de-9054-7a122d7f0673",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT *\nFROM vaapty_leads\nWHERE \n    status = 'QUALIFICACAO'\nAND (\n    (follow_up_times = 0 AND last_msg <= NOW() - INTERVAL '30 minutes' AND last_msg > NOW() - INTERVAL '24 hours')\n    OR\n    (follow_up_times = 1 AND last_msg <= NOW() - INTERVAL '24 hours' AND last_msg > NOW() - INTERVAL '72 hours')\n    OR\n    (follow_up_times = 2 AND last_msg <= NOW() - INTERVAL '72 hours')\n    OR\n    (follow_up_times = 3 AND last_msg <= NOW() - INTERVAL '96 hours')\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3320,
        1620
      ],
      "id": "44175f52-d42f-4863-be2a-1f7b21aac0ff",
      "name": "postgres-get-lead-follow-up",
      "credentials": {
        "postgres": {
          "id": "ZaC2FzQI2843ua9k",
          "name": "conn-postgres-codai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3520,
        1620
      ],
      "id": "c89f5675-d06b-4bc9-8587-1b5010cba4f6",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3760,
        1420
      ],
      "id": "a6a00972-76ed-4c0e-b949-a776640cc8d7",
      "name": "Não faz nada - FIM"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "vaapty_leads",
          "mode": "list",
          "cachedResultName": "vaapty_leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Loop Over Items').item.json.id }}",
            "follow_up_times": "={{ $('Loop Over Items').item.json.follow_up_times.toNumber() + 1 }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_msg",
              "displayName": "last_msg",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "follow_up_times",
              "displayName": "follow_up_times",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3240,
        1860
      ],
      "id": "f1894640-9504-4af7-aec6-04eeb7c9c060",
      "name": "postgres-update-lead-follow-up",
      "credentials": {
        "postgres": {
          "id": "ZaC2FzQI2843ua9k",
          "name": "conn-postgres-codai"
        }
      }
    },
    {
      "parameters": {
        "content": "## Follow-UP",
        "height": 840,
        "width": 1680,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3060,
        1320
      ],
      "typeVersion": 1,
      "id": "0dc42f01-68a3-4a58-b933-0b6dc074799c",
      "name": "Sticky Note3",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## R.A.G",
        "height": 460,
        "width": 740
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4800,
        1580
      ],
      "typeVersion": 1,
      "id": "1fb72968-2548-4a53-8ab4-b7cd63c8f9b9",
      "name": "Sticky Note5",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        900,
        1100
      ],
      "id": "440c16ed-10d7-4156-83c2-30717f30bbd3",
      "name": "Não faz nada - Workflow"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "TELEFONE": "={{ $('payload_handler').item.json.data.phone }}",
            "CLIENTE": "={{ $('payload_handler').item.json.data.fullName }}",
            "PRE_VENDA": "VAAL - IA",
            "STATUS": "QUALIFICACAO"
          },
          "matchingColumns": [
            "TELEFONE"
          ],
          "schema": [
            {
              "id": "FOLLOW_UP",
              "displayName": "FOLLOW_UP",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA",
              "displayName": "DIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA",
              "displayName": "HORA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA_SEMANA",
              "displayName": "DIA_SEMANA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRE_VENDA",
              "displayName": "PRE_VENDA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CLIENTE",
              "displayName": "CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CARRO",
              "displayName": "CARRO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "TELEFONE",
              "displayName": "TELEFONE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ORIGEM",
              "displayName": "ORIGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "OBSERVACAO",
              "displayName": "OBSERVACAO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "UNIDADE",
              "displayName": "UNIDADE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "VEIO",
              "displayName": "VEIO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DESFECHO",
              "displayName": "DESFECHO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "MOTIVO",
              "displayName": "MOTIVO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2360,
        1100
      ],
      "id": "5c293fd0-a8a1-43be-8800-533dcd96d3c4",
      "name": "google-sheets-create-update",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "VMcFCbN41WNNgtef",
          "name": "conn-google-sheets-codai"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d4768288-0024-47c6-b9c6-3dcc9e18c2e0",
              "name": "data.msgType",
              "value": "={{ $('code-normalizer').item.json.body.body.msgType }}",
              "type": "string"
            },
            {
              "id": "a463122b-5ce3-4d97-ad1a-7573e3eafb7b",
              "name": "data.message",
              "value": "={{ $('Webhook').item.json.body.body.text.message }}",
              "type": "string"
            },
            {
              "id": "bc9d5b3f-d26c-4a16-b325-fda776c672c4",
              "name": "data.audioURL",
              "value": "={{ $('Webhook').item.json.body.body.audio.audioUrl }}",
              "type": "string"
            },
            {
              "id": "241f7861-5a2b-44c2-ba11-f6c6864fd51e",
              "name": "data.imageURL",
              "value": "={{ $('Webhook').item.json.body.body.image.imageUrl }}",
              "type": "string"
            },
            {
              "id": "877887ea-c7df-4c1e-b6a9-4ec573256127",
              "name": "data.firstName",
              "value": "={{ $('Webhook').item.json.body.body.chatName.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "5e484ddf-832f-4447-822e-8609bbe364a7",
              "name": "data.fullName",
              "value": "={{ $('Webhook').item.json.body.body.chatName }}",
              "type": "string"
            },
            {
              "id": "3c159587-cd22-45df-aac7-82add1c9992e",
              "name": "data.status",
              "value": "={{ $('Webhook').item.json.body.body.status }}",
              "type": "string"
            },
            {
              "id": "5e3e579f-f9dd-4fb0-9c4b-d2c56b151c55",
              "name": "data.phone",
              "value": "={{ $('Webhook').item.json.body.body.phone }}",
              "type": "string"
            },
            {
              "id": "9eabba9a-fda7-4b3e-a389-988b09f49be5",
              "name": "data.messageId",
              "value": "={{ $('Webhook').item.json.body.body.messageId }}",
              "type": "string"
            },
            {
              "id": "45910fc1-affe-44d1-9834-0e19bba63fdb",
              "name": "data.isGroup",
              "value": "={{ $('Webhook').item.json.body.body.isGroup }}",
              "type": "boolean"
            },
            {
              "id": "cc95a725-d953-433d-a8ee-aa903f515ca5",
              "name": "data.timestamp",
              "value": "={{  DateTime.fromMillis($('Webhook').item.json.body.body.momment)}}",
              "type": "string"
            },
            {
              "id": "9ceae977-4e4f-46af-81c3-d6d84541e068",
              "name": "data.senderName",
              "value": "={{ $('Webhook').item.json.body.body.senderName }}",
              "type": "string"
            },
            {
              "id": "d65f9d80-5f16-4c29-965b-fc8832fe13eb",
              "name": "data.fromMe",
              "value": "={{ $('Webhook').item.json.body.body.fromMe }}",
              "type": "boolean"
            },
            {
              "id": "0d26bc8e-177c-41ef-86bd-6f0caeca8f7e",
              "name": "data.fromApi",
              "value": "={{ $('Webhook').item.json.body.body.fromApi }}",
              "type": "boolean"
            },
            {
              "id": "0d409c70-6488-4f4f-8681-5bb552563957",
              "name": "zapi.originURL",
              "value": "={{ $('Webhook').item.json.body.headers.origin }}",
              "type": "string"
            },
            {
              "id": "426fd288-5a66-4687-9fcf-ce46fbdd4ab7",
              "name": "zapi.token",
              "value": "={{ $('Webhook').item.json.body.headers['z-api-token'] }}",
              "type": "string"
            },
            {
              "id": "e9343465-8006-4136-9211-93cb0bec4dab",
              "name": "zapi.instanceId",
              "value": "={{ $('Webhook').item.json.body.body.instanceId }}",
              "type": "string"
            },
            {
              "id": "4ae67c6f-3fba-45c0-ade2-1fa3731b93e8",
              "name": "zapi.phone",
              "value": "={{ $('Webhook').item.json.body.body.connectedPhone }}",
              "type": "string"
            },
            {
              "id": "6e253dad-0fbf-4a74-b6a4-618c79bb3460",
              "name": "zapi.clientToken",
              "value": "Fa958f5973f0d448783b0cfc5907bcbcfS",
              "type": "string"
            },
            {
              "id": "ecc3073f-8c25-41bb-abfe-402c385c6031",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        520,
        920
      ],
      "id": "6bb5d2cc-e5b1-4f4f-afa5-ea7b4b2a0ce4",
      "name": "payload_handler"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $('Get Memory 2').item.json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "eb07c7ce-d02c-4cc8-8e22-55c7431f8de8",
      "name": "Edit Redis Memory",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4340,
        980
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "d69505fc-04a4-4aed-a244-54f4daa1d947",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        6060,
        1140
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code').item.json.mensagem_completa }}",
        "options": {
          "systemMessage": "=<instrucoes>\nNome do cliente é {{ $('payload_handler').item.json.data.firstName }}\nHoje é dia {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n\n- SUA OBRIGAÇÃO MAIOR É SEMPRE BUSCAR INFORMAÇÕES DA VAAPTY OU SOBRE SEU PROCESSO NA TOOL [get_vaapty_info] SEMPRE QUE FOR QUESTIONA OU SOLICITADA EXPLICAÇÃO DO PROCESSO OU DÚVIDAS.\n\n- **OBRIGATORIAMENTE** DEVE IR ENVIANDO AS INFORMAÇÕES DO AGENDAMENTO PARA A TOOL [agenda_sheet_tool] A MEDIDA QUE O CLIENTE FOR INFORMANDO, PARA EVITAR SALVAR TD NO FINAL.\n\n- *SEMPRE* QUE FOR UM NOVO AGENDAMENTO PARA O MESMO CLIENTE, CONSIDERE A NOVA DATA QUE ELE ESCOLHER COM BASE NA DATA ATUAL E NÃO NA DO AGENDAMENTO OU CONVERSA ANTERIOR.\n\nNUNCA DEDUZA NENHUMA INFORMAÇÃO DE DIA, HORA OU DIA DA SEMANA, SEMPRE ESPERE O CLIENTE DEFINIR E NÃO USE O DIA DE HOJE COMO DATA PARA O AGENDAMENTO A NÃO SER QUE O CLIENTE ESCOLHA.\n\nSEMPRE QUE FOR TRABALHAR COM DATAS USE OBRIGATORIAMENTE a tool [validate_date] para verificar se é uma data válida e para consultar o dia da semana use a tool [getWeekDay] e sempre usar padrão pt-BR e America/Sao_Paulo\n\nSEMPRE USE A TOOL [validate_date] combinada com a tool [getWeekDay] para sempre explicar para o cliente(caso data inválida) o porque a data é inválida, considerando a regra abaixo:\n\n - CASO A DATA ESCOLHIDA SEJA DIA DA SEMANA DE SEGUNDA A SEXTA FEIRA, SÓ PERMITA AGENDAMENTOS ENTRE 09:00 DA MANHÃ ATÉ AS 18:00 DA TARDE.\n\n - CASO A DATA ESCOLHIDA SEJA SÁBADO, SÓ PERMITA AGENDAMENTOS ENTRE 09:00 DA MANHÃ ATÉ AS 13:00 DA TARDE.\n\n - NUNCA AGENDE PARA DOMINGOS.\n\n\n\n<validacao_e_formatacao>\n1 **Hora**: Sempre no formato `HH:mm` (24 horas).  \n   - Exemplos:  \n     - \"11h\" → \"11:00\"  \n     - \"3 PM\" → \"15:00\"  \n     - \"9:30 AM\" → \"09:30\"  \n\n2 **Unidade**: Sempre no formato `\"Cidade (Bairro)\"`.  \n\t- Se for **\"Guarulhos Vila Galvão\"**, salve como `\"Guarulhos (Vila Galvão)\"`.  \n\t- Se for **\"São Paulo Santana\"**, salve como `\"São Paulo (Santana)\"`.  \n\n3 **Dia da Semana**: Sempre no formato abreviado.  \n\t- \"Segunda-feira\" → \"SEG\"\n\t- \"Terça-feira\" → \"TER\"\n\t- \"Quarta-feira\" → \"QUA\"\n\t- \"Quinta-feira\" → \"QUI\"\n\t- \"Sexta-feira\" → \"SEX\"\n\t- \"Sábado\" → \"SAB\"\n\t- \"Domingo\" → \"DOM\"\n</validacao_e_formatacao>\n\n\nSEMPRE QUE O CLIENTE QUISER CONSULTAR AGENDAMENTOS USE a tool [consulta_agendamentos] para retornar as informações.\n\nSEMPRE QUE O CLIENTE QUISER CANCELAR AGENDAMENTOS USE a tool [cancelar_agendamentos] para alterar o status do agendamento para CANCELADO_LEAD.\n\nSEMPRE QUE O CLIENTE TIVER DÚVIDAS OU QUISER INFORMAÇÕES DE COMO A VAAPTY FUNCIONA OU DÚVIDAS FREQUENTES USE OBRIGATORIAMENTE a TOOL [get_vaapty_info].\n\nSEMPRE QUE O CLIENTE QUESTIONAR SOBRE VALORES, CUSTOS, SOBRE DOCUMENTAÇÃO, SEMPRE FALE SOBRE A COMISSÃO DE \"4.2% + custo da perícia cautelar\" QUE ESTÁ DETALHADA NA TOOL [get_vaapty_info]\n\nSOBRE VISTORIA CAUTELAR EXPLIQUE QUE TEM O CUSTO PARA O CLIENTE OU PODE SER BRINDE DEPENDENDO DA NEGOCIAÇÃO, MAS MESMO NÃO SENDO APROVADA A VISTORIA O CLIENTE É QUEM DEVE PAGAR.\n\nLEVANDO EM CONSIDERAÇÃO AS INFORMAÇÕES DA TOOL [get_vaapty_info] leve essa ordem dos processo em consideração \"após aceitar proposta é chamada a cautelar \ne os documentos seram recolhidos para dar início a produção da documentação. Depois que a cautelar é aprovada mandamos os documentos para o cartório para reconhecer firma da documentação. assim que os documentos chegarem até nós e estando tudo finalizado, pagamos os débitos que tiver no carro e depois o pagamento ao cliente. \n\"\n\nCASO O CLIENTE QUESTIONE SOBRE  COMO FUNCIONA SE ELE DESISTIR DA VENDA APÓS A VISTORIA APROVADA, EXPLIQUE QUE CASO ISSO ACONTECER O CLIENTE TERÁ QUE PAGAR O VALOR DA CAUTELAR + UMA MULTA DE 10%.\n\nCASO O CLIENTE QUESTIONE SOBRE QUAIS TIPOS DE CARROS ESTÃO APTOS, EXPLIQUE QUE A VAAPTY ACEITA QUALQUER TIPO DE CARRO, POIS TEMOS TODOS OS TIPOS DE COMPRADORES E QUE INCLUSIVE TBM VENDEMOS MOTOS E DEIXE CLARO QUE VENDEMOS TODO TIPO DE VEÍCULO, VAN, CAMINHÃO, MASTER.\n\nCASO HAJA DÚVIDAS SOBRE O DUT, TRABALHAMOS DE DUAS FORMAS, PROCURAÇÃO OU DUT, DEPENDE DA NEGOCIAÇÃO COM QUEM COMPROU O CARRO.\n\nCASO SEJA DÚVIDAS SOBRE MULTAS APARECEREM DEPOIS DA VENDA, EXPLIQUE QUE EXISTEM DUAS SITUAÇÕES, SE AS MULTAS QUE SURGIREM FOREM DE *ANTES* DA VENDA, AS MULTAS SÃO DE REPONSÁBILIDADE DO ANTIGO PROPIETÁRIO, CASO AS MULTAS SURGIREM *DEPOIS* DA VENDA, DEVEM SER COMUNICADAS A VAAPTY PARA QUE ENTREMOS EM CONTATO COM O NOVO PROPRIETÁRIO.\n</instrucoes>\n\n<objetivo>\nO seu principal objetivo é agendar uma avaliação do carro do cliente. Sua missão é quebrar todas as objeções consultando todas as informações sobre a Vaapty na tool [get_vaapty_info] e garantir que o cliente veja valor no serviço .\n</objetivo>\n\n<persona>\nVocê é a Vaal, a assistente especializada nos processos da Vaapty. Seu papel é guiar os clientes de maneira natural, fornecendo informações precisas e incentivando-os a concluir o agendamento. Seu tom deve ser:\n- Amigável e humanizado, como uma amiga dando uma recomendação personalizada.\n- Profissional, mas sem parecer robótico.\n- Confiante e persuasivo para quebrar objeções.\n- Simples e direto ao ponto, evitando jargões técnicos.\n- Sempre personalize a conversa com base nas informações fornecidas pelo cliente, reforçando confiança no processo.\n- **Se perceber que o cliente está demorando para responder ou demonstrar dificuldade em digitar, ofereça a opção de enviar um áudio.**  \n  - Exemplo: *\"Ah, e pode ficar à vontade! Se for mais fácil, me manda um áudio que eu entendo também. 🎙️😊\"*\n</persona>\n\n<fluxo_de_atendimento>\n1.Abertura e conexão\n- Cumprimente o cliente pelo primeiro nome e estimule sua curiosidade perguntando se ele sabe como a Vaapty funciona.\n- Sempre que necessário explique de forma simples e amigável o processo da Vaapty.\n- Caso detecte insegurança, reforce que o processo é seguro e transparente.\n- **Se quiser, pode me mandar um áudio também! Assim, eu entendo direitinho e fica mais fácil para você. 🎙️😊\"**\n\n2. Validação das informações antes do agendamento\n- SEMPRE que o cliente fornecer uma nova informação (data, hora, unidade ou carro), atualize imediatamente a planilha usando a tool [agenda_sheet_tool]. Nunca aguarde o final da conversa para registrar os dados.\n- Após obter cada nova informação, chame a tool [agenda_sheet_tool] para salvar o dado. evitamos assim perda de informações e garantimos que o agendamento estará sempre atualizado.\n- Se o cliente alterar alguma informação já coletada, atualize imediatamente o registro no com a tool [agenda_sheet_tool] para evitar inconsistências.\"\n- **Se perceber que o cliente está demorando para responder ou se mostrando inseguro para digitar, incentive o uso de áudios:**  \n  - *\"Se for mais fácil, pode me mandar um áudio explicando! Assim, eu já pego todos os detalhes rapidinho. 🚀🎧\"*\n- Quando todos os dados forem coletados, use a tool [validateInfos] para confirmar que todas as informações estão presentes.\n  - Se faltar algum dado, informe ao cliente:  \n    *\"Ótimo! Mas ainda preciso de [dados faltantes] para finalizar seu agendamento. Me passa esses detalhes por favor? 🙏🚗\"*\n  - Quando estiver tudo certo, confirme com o cliente e finalize o agendamento.\n\n3. Negociação e quebra de objeções\n- Se o cliente pronto para agendar, siga normalmente.\n- Se ele tiver dúvidas ou objeções, consulte as informações com a tool [get_vaapty_info] e forneça informações claras e persuasivas.\n- Sempre finalize suas respostas com uma pergunta de conversão, por exemplo:\n\t- \"Podemos finalizar seu agendamento? Assim, você já garante sua avaliação sem compromisso.\"\n\n4. Fechamento\n- Se o horario escolhido pelo cliente, estiver dentro dos horario de atendimento das lojas de acordo com [dados_das_unidades], confirme exatamente como foi solicitado pelo cliente.\n- Se o horário solicitado não estiver dentro dos horarios de atendimento das lojas de acordo com [dados_das_unidades], sugira o mais próximo dia e horarios válidos.\n- Informe que os documentos do carro e o do cliente são obrigatórios e é mt importante caso tenha chave reserva e manual é levar para ajuda na negociação.\n</fluxo_de_atendimento>\n\n\n\n<dados_das_unidades>\n📌 Guarulhos (Vila Galvão)\n📍 Endereço: Av. Dr. Timóteo Penteado, 4043 - Vila Galvão, Guarulhos - SP, 07061-002\n📞 Telefone: (11) 99622-0483\n🌍 Site: vaaptyguarulhosvilagalvao.com\n📷 Instagram: @vaaptyguarulhos.vilagalvao\n📘 Facebook: @vaaptyguarulhosvilagalvao\nlink de avaliações no google: https://goo.su/U05DpZb\nhorários de atendimento: de segunda a Sexta: 09:00 até 18:00, sábados: de 09:00 até 13h00 e domingos: fechados\n\n📌 São Paulo (Santana)\n📍 Endereço: R. Dr. Artur Guimarães, 178 - Santana, São Paulo - SP, 02038-070\n📞 Telefone: (11) 4327-8223\n🌍 Site: vaaptysantana.com\n📷 Instagram: @vaaptysantana2\n📘 Facebook: @vaaptysantana\nlink de avaliações no google: https://goo.su/v41K\nhorários de atendimento: de segunda a Sexta: 09:00 até 18:00, sábados: de 09:00 até 13h00 e domingos: fechados\n</dados_das_unidades>\n\n<regras para agendamento>\n- O agendamento pode ser feito em qualquer horário dentro do intervalo de atendimento, sem restrição a horários redondos.\n- Se o horário solicitado pelo cliente estiver dentro do horário de atendimento, CONFIRME SEM ALTERAÇÕES.\n- NUNCA ajuste automaticamente ou obrigue a escolha do cliente ser para horários redondos.\n- **Antes de confirmar qualquer horário, valide se ele está dentro do horário permitido para aquele dia da semana, conforme os horários de atendimento da unidade escolhida.**\n</regras para agendamento>\n\n<formatacao_de_mensagens>\nSempre que enviar mensagens ao cliente, utilize emojis Unicode para tornar a comunicação mais clara e visual. Diretrizes formato de mensagens:\n\nEndereços → 📍\nTelefones → 📞\nSites → 🌍\nInstagram → 📷\nFacebook → 📘\nHorários de atendimento → ⏰\nDatas e calendário → 📅\nCarros e veículos → 🚗\nDúvidas e informações → ❓\nConfirmações → ✅\nAlertas ou restrições → ⚠️\n\n**Exemplo de mensagem formatada corretamente:**  \n📌 **Endereço da unidade:** 📍 Av. Dr. Timóteo Penteado, 4043 - Vila Galvão, Guarulhos - SP.  \n📞 **Contato:** (11) 99622-0483  \n🌍 **Site:** [vaaptyguarulhosvilagalvao.com](https://vaaptyguarulhosvilagalvao.com)  \n📅 **Data do agendamento:** Segunda-feira, 11 de Março de 2025.  \n⏰ **Horário:** 10:30 da manhã.  \n🚗 **Veículo:** Honda Civic 2019 - Prata  \n✅ **Status:** Agendamento confirmado.  \n⚠️ **Importante:** Não se esqueça de levar os documentos do carro e chave reserva.  \n\nSempre use esse padrão para tornar as mensagens mais organizadas e profissionais.\n</formatacao_de_mensagens>\n\n<regras_obrigatorias>\n1. Antes de responder perguntas sobre como a Vaapty funciona ou fornecer qualquer informação ao usuário, **você deve obrigatoriamente consultar os dados no RAG**. Use a tool [get_vaapty_info] para recuperar informações caso o cliente manifeste interesse em entender sobre a Vaapty.  \n2. Se a consulta ao RAG não retornar informações úteis, peça mais detalhes ao usuário antes de responder.  \n3. **Nunca faça suposições ou gere respostas sem validar primeiro com a ferramenta.**  \n4. Sempre adapte a resposta com base nas informações recuperadas, garantindo que o cliente perceba o valor do serviço.  \n5. Consulte o dia da semana para a data solicitada, valide se está dentro dos dias e horarios de funcionamento das lojas.\n6. SEMPRE antes de confirmar o agendamento para o cliente, use a tool [validateInfos] passando os dados atuais do agendamento.  \n   - Se a tool retornar \"ok - todos os campos presentes\", prossiga com a confirmação do agendamento.  \n   - Se retornar \"faltando - [campos]\", informe o cliente que ainda faltam esses dados e solicite que ele os envie para concluir o agendamento.\n</regras_obrigatorias>"
        }
      },
      "id": "be06f31f-8d83-49e6-add3-72de2fcc48a0",
      "name": "vaal-agente-principal",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        5060,
        860
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "08ab4c83-67d0-4022-859a-e43ee46bccd7",
      "name": "Segmento de Msgs",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        6120,
        960
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cda1d1d1-6f6d-4848-a740-3486e2aa0692",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        6320,
        960
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.id }}_chat_memory",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4220,
        1940
      ],
      "id": "18810635-3668-4c46-b157-50e6b3d5e683",
      "name": "Postgres Chat Memory FollowUP",
      "credentials": {
        "postgres": {
          "id": "ZaC2FzQI2843ua9k",
          "name": "conn-postgres-codai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4060,
        1940
      ],
      "id": "53d02c33-2345-4c29-9c3f-64216f7dc276",
      "name": "OpenAI Chat Model FollowUP",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.z-api.io/instances/3DC9177A06D950511D6946C5E04D83E3/token/9E23909A8750EFB416D50B2F/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "Fa958f5973f0d448783b0cfc5907bcbcfS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Loop Over Items').item.json.id }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4560,
        1920
      ],
      "id": "a7eec699-8a11-4551-8e21-f3c435aa91b9",
      "name": "http-response-zAPI FollowUP"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Este é um follow-up para o cliente {{ $json.name.split(\" \")[0] }}, que demonstrou interesse, mas ainda não concluiu o agendamento.  \nO cliente está na **tentativa número {{ $json.follow_up_times }}**.  \nAdapte a abordagem de acordo com a etapa do follow-up.  \nSe houver informações de agendamento já fornecidas, continue a partir delas.  \nSe o cliente estiver indeciso, quebre as objeções e reforce os benefícios da Vaapty.  \nEvite repetir perguntas que já foram respondidas.  \nSe o cliente responder, siga com o fluxo normal.\n",
        "options": {
          "systemMessage": "=<instrucoes>\nNome do cliente é {{ $json.name.split(\" \")[0] }}.\nHoje é {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n\nEste cliente está em um processo de follow-up. Dependendo da tentativa atual, adapte sua abordagem:\n\n🔹 **Primeira tentativa (follow_up_times = 0):**\n   - O cliente demonstrou interesse recentemente (há cerca de 30 minutos), mas ainda não finalizou o agendamento.\n   - Seja leve e direto, lembrando-o da oportunidade, exemplo de mensagem:\n     **\"Oi {{ $json.name.split(\" \")[0] }}, vi que você mostrou interesse na avaliação do seu carro, mas ainda não finalizamos. Podemos concluir isso agora?\"**\n\n🔹 **Segunda tentativa (follow_up_times = 1):**\n   - O cliente não respondeu ao primeiro follow-up (passaram 24 horas).\n   - Destaque a importância de agendar o quanto antes, exemplo de mensagem:\n     **\"Oi {{ $json.name.split(\" \")[0] }}, espero que esteja bem! Tentamos falar sobre sua avaliação na Vaapty. Você ainda tem interesse? Posso te ajudar com alguma dúvida?\"**\n   - Se houver objeções, use a ferramenta [get_vaapty_info] para responder com segurança.\n\n🔹 **Terceira tentativa (follow_up_times = 2) - Última tentativa:**\n   - O cliente ignorou duas tentativas anteriores e passaram 72 horas.\n   - Tente um fechamento direto, exemplo de mensagem:\n     **\"Oi {{ $json.name.split(\" \")[0] }}, Caso ainda tenha interesse na avaliação do seu carro, podemos reservar um horário para você. Se precisar de mais informações, estou aqui para ajudar!\"**\n\nObs.: Os exemplos de mensagem não precisam ser seguidos, adapte a mensagem ao cliente, com suas informações.\n\n🔹 **Regras Importantes:**\n- **Se houver informações de agendamento já fornecidas**, continue a partir delas.\n- **Não repita perguntas desnecessárias.** Sempre consulte o histórico antes de perguntar.\n- **Se o cliente quiser informações sobre a Vaapty**, use [get_vaapty_info].\n- **Se o cliente responder, siga para o fluxo normal.**\n</instrucoes>\n\n<objetivo>\nSeu objetivo é reativar a conversa com o cliente e incentivá-lo a concluir o agendamento, sem ser insistente.\n</objetivo>\n\n<persona>\nVocê é a Vaal, assistente da Vaapty. Seu tom deve ser:\n- Amigável e humanizado.\n- Profissional, mas sem parecer robótico.\n- Confiante e persuasivo.\n- Direto ao ponto, sem insistir desnecessariamente.\n</persona>\n"
        }
      },
      "id": "3fb51e07-a8f8-4ef9-9393-d49dde4e2a87",
      "name": "vaal-agente-follow-up",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        4220,
        1680
      ]
    },
    {
      "parameters": {
        "name": "get_vaapty_info",
        "description": "Use essa ferramenta para explicar ao cliente como a Vaapty funciona CASO ele questione ou solicite informações do processo.",
        "topK": "=100"
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        5160,
        1620
      ],
      "id": "32ea5f93-d3c4-4d24-a149-b252e4e8c40e",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5380,
        1760
      ],
      "id": "0838f94a-16ab-4ed6-be9f-88c2b1f8f9bd",
      "name": "OpenAI Chat Model RAG",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('payload_handler').item.json.zapi.originURL }}/instances/{{ $('payload_handler').item.json.zapi.instanceId }}/token/{{ $('payload_handler').item.json.zapi.token }}/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Client-Token",
              "value": "={{ $('payload_handler').item.json.zapi.clientToken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('payload_handler').item.json.data.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $('Loop Over Items1').item.json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6540,
        1060
      ],
      "id": "f62b9ffa-92c4-4225-8f5f-a2a2fdfac6b9",
      "name": "http-response-zAPI"
    },
    {
      "parameters": {
        "content": "## Scan Google Drive para o Banco de Dados Vetorial.",
        "height": 720,
        "width": 1940,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        1340
      ],
      "typeVersion": 1,
      "id": "35c37df1-6e3a-460c-8513-69a67d93f705",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1180,
        1740
      ],
      "id": "985f7948-e6d6-488d-b709-799fb16330c9",
      "name": "Embeddings OpenAI3",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 500,
        "chunkOverlap": 100,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1500,
        1880
      ],
      "id": "9f10140f-e8be-4a04-aceb-bd913aad114d",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        700,
        1500
      ],
      "id": "3db26221-7eec-4303-b8b3-28863706d934",
      "name": "loop-files"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "vaapty_documents",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "gt",
              "keyValue": "0"
            }
          ]
        }
      },
      "id": "e4b2b4ee-1381-49e3-a502-fdbd94a22651",
      "name": "delete-all-docs",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        300,
        1500
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "VsqrwGucgRNjLoIu",
          "name": "conn-supabase-codai"
        }
      }
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1-PkPmZfj-dJJ1vHtmefqEqa7HQKsbOuC",
            "mode": "list",
            "cachedResultName": "Vaapty Documents",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1-PkPmZfj-dJJ1vHtmefqEqa7HQKsbOuC"
          }
        },
        "options": {
          "fields": [
            "id"
          ]
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        500,
        1500
      ],
      "id": "be281982-c008-49db-9b32-ead0b8c14110",
      "name": "get-all-files",
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "wUm55fvzdXg6mPZ6",
          "name": "conn-google-drive-codai"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        920,
        1360
      ],
      "id": "107f09f8-1432-46d7-8dab-15c74e1a449b",
      "name": "The End"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "1439e285-850d-4d03-9d55-4f520d874e8a",
      "name": "download-file",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        920,
        1520
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "wUm55fvzdXg6mPZ6",
          "name": "conn-google-drive-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1120,
        1520
      ],
      "id": "b24dd642-df81-4c46-9a1c-3666827a5f12",
      "name": "extract-from-file"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "vaapty_documents",
          "mode": "list",
          "cachedResultName": "vaapty_documents"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1340,
        1520
      ],
      "id": "9aa823bc-9c1c-4fa4-bd56-1193069fcb01",
      "name": "insert-doc-into-vector-store",
      "credentials": {
        "supabaseApi": {
          "id": "VsqrwGucgRNjLoIu",
          "name": "conn-supabase-codai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1340,
        1720
      ],
      "id": "c420c7f0-8b92-4378-befd-90509aab8767",
      "name": "data-loader"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": ">>>",
      "typeVersion": 1,
      "position": [
        1740,
        1840
      ],
      "id": "764f02e8-950d-41c9-aced-47008a3cbef4"
    },
    {
      "parameters": {
        "content": "## Resposta humanizada",
        "height": 460,
        "width": 1180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5780,
        820
      ],
      "typeVersion": 1,
      "id": "a7f4a934-a56d-4ea6-ad77-4a6a49cdece4",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "TELEFONE": "={{ $('payload_handler').item.json.data.phone }}",
            "STATUS": "QUALIFICACAO-LOJA"
          },
          "matchingColumns": [
            "TELEFONE"
          ],
          "schema": [
            {
              "id": "FOLLOW_UP",
              "displayName": "FOLLOW_UP",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA",
              "displayName": "DIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA",
              "displayName": "HORA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA_SEMANA",
              "displayName": "DIA_SEMANA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRE_VENDA",
              "displayName": "PRE_VENDA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CLIENTE",
              "displayName": "CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CARRO",
              "displayName": "CARRO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "TELEFONE",
              "displayName": "TELEFONE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ORIGEM",
              "displayName": "ORIGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "OBSERVACAO",
              "displayName": "OBSERVACAO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "UNIDADE",
              "displayName": "UNIDADE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "VEIO",
              "displayName": "VEIO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DESFECHO",
              "displayName": "DESFECHO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "MOTIVO",
              "displayName": "MOTIVO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1080,
        860
      ],
      "id": "7a7fb0f2-b0f4-4223-93b1-ff0875d71a1e",
      "name": "google-sheets-discart-lead",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "VMcFCbN41WNNgtef",
          "name": "conn-google-sheets-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "vaapty_leads",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('payload_handler').item.json.data.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "QUALIFICACAO-LOJA"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1260,
        860
      ],
      "id": "672f66f3-ba52-446c-87f4-f027d10933bf",
      "name": "supabase-atualiza-agendamento1",
      "credentials": {
        "supabaseApi": {
          "id": "VsqrwGucgRNjLoIu",
          "name": "conn-supabase-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('payload_handler').item.json.data.phone }}_block",
        "value": "true",
        "keyType": "string"
      },
      "id": "b64602dc-c075-43f3-a584-d9bb55e9670a",
      "name": "block-lead",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        900,
        860
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "name": "agenda_sheet_tool",
        "description": "Chame essa tool para realizando o agendamento, sempre usando padrão pt-BR e America/Sao_Paulo",
        "workflowId": {
          "__rl": true,
          "value": "3rt9wDw4xNqB8Vmx",
          "mode": "list",
          "cachedResultName": "Project | Vaal-AI | Agenda Sheet"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "telefone": "={{ $('payload_handler').item.json.data.phone }}",
            "dia": "={{ $fromAI('dia', `dia do agendamento | format('dd/MM/yyyy')`, 'string') }}",
            "hora": "={{ $fromAI('hora', `hora do agendamento | format('HH:mm') `, 'string') }}",
            "dia_semana": "={{ $fromAI('dia_semana', `dia da semana do agendamento | format('EEE') `, 'string') }}",
            "cliente": "={{ $('payload_handler').item.json.data.fullName }}",
            "carro": "={{ $fromAI('carro', `carro do cliente que será avaliado`, 'string') || \"\" }}",
            "unidade": "={{ $fromAI('unidade', `unidade escolhida pelo  cliente para o agendamento`, 'string') || \"\" }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "dia",
              "displayName": "dia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "hora",
              "displayName": "hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "dia_semana",
              "displayName": "dia_semana",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "cliente",
              "displayName": "cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "carro",
              "displayName": "carro",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "unidade",
              "displayName": "unidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        5140,
        1220
      ],
      "id": "e5ac3c63-630f-4fed-a85a-01b62cb61303",
      "name": "Call n8n Workflow"
    },
    {
      "parameters": {
        "name": "agenda_sheet_tool",
        "description": "Chame essa tool para realizando o agendamento, sempre usando padrão pt-BR e America/Sao_Paulo",
        "workflowId": {
          "__rl": true,
          "value": "3rt9wDw4xNqB8Vmx",
          "mode": "list",
          "cachedResultName": "Project | Vaal-AI | Agenda Sheet"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "telefone": "={{ $json.id }}",
            "dia": "={{ $fromAI('dia', `dia do agendamento | format('dd/MM/yyyy')`, 'string') }}",
            "hora": "={{ $fromAI('hora', `hora do agendamento | format('HH:mm') `, 'string') }}",
            "dia_semana": "={{ $fromAI('dia_semana', `dia da semana do agendamento | format('EEE') `, 'string') }}",
            "cliente": "={{ $json.name }}",
            "carro": "={{ $fromAI('carro', `carro do cliente que será avaliado`, 'string') || \"\" }}",
            "unidade": "={{ $fromAI('unidade', `unidade escolhida pelo  cliente para o agendamento`, 'string') || \"\" }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "dia",
              "displayName": "dia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "hora",
              "displayName": "hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "dia_semana",
              "displayName": "dia_semana",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "cliente",
              "displayName": "cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "carro",
              "displayName": "carro",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "unidade",
              "displayName": "unidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        4400,
        1940
      ],
      "id": "45920292-53a8-4e52-8729-660d42a2a509",
      "name": "Call n8n Workflow - FollowUp"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bdab41ed-7b55-4da9-a3c7-e0c00d23dd81",
              "leftValue": "={{ $json.follow_up_times.toNumber() }}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3760,
        1760
      ],
      "id": "5877da4a-46a2-445f-8e46-fadbcff41f02",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "vaapty_leads",
          "mode": "list",
          "cachedResultName": "vaapty_leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Loop Over Items').item.json.id }}",
            "status": "SEM_INTERESSE"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_msg",
              "displayName": "last_msg",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "follow_up_times",
              "displayName": "follow_up_times",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3960,
        1580
      ],
      "id": "a60a8a31-8f28-4783-8286-7c086fb88e20",
      "name": "postgres-update-status-lead-follow",
      "credentials": {
        "postgres": {
          "id": "ZaC2FzQI2843ua9k",
          "name": "conn-postgres-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "TELEFONE": "={{ $('postgres-get-lead-follow-up').item.json.id }}",
            "STATUS": "SEM_INTERESSE"
          },
          "matchingColumns": [
            "TELEFONE"
          ],
          "schema": [
            {
              "id": "FOLLOW_UP",
              "displayName": "FOLLOW_UP",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA",
              "displayName": "DIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA",
              "displayName": "HORA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA_SEMANA",
              "displayName": "DIA_SEMANA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRE_VENDA",
              "displayName": "PRE_VENDA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CLIENTE",
              "displayName": "CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CARRO",
              "displayName": "CARRO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "TELEFONE",
              "displayName": "TELEFONE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ORIGEM",
              "displayName": "ORIGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "OBSERVACAO",
              "displayName": "OBSERVACAO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "UNIDADE",
              "displayName": "UNIDADE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "VEIO",
              "displayName": "VEIO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DESFECHO",
              "displayName": "DESFECHO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "MOTIVO",
              "displayName": "MOTIVO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4220,
        1380
      ],
      "id": "02a8c84b-d319-437c-b94a-537485fda7ba",
      "name": "google-sheets-update-status-lead",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "VMcFCbN41WNNgtef",
          "name": "conn-google-sheets-codai"
        }
      }
    },
    {
      "parameters": {
        "name": "validateDate",
        "description": "Use esta tool para validar se a data e hora escolhidas pelo cliente são válidas.\nParâmetro: data no formato 'DD/MM/YYYY HH:mm'\nRetorna um objeto com 'isValid' (booleano) e 'reason' (string explicativa)",
        "jsCode": "const [day, month, year, hour, minute] = query.split(/[/ :]/).map(Number);\nconst inputDate = new Date(year, month - 1, day, hour || 0, minute || 0);\nconst currentDate = new Date();\n\n// Verifica se a data é válida\nif (isNaN(inputDate.getTime())) {\n  return \"invalid date\";\n}\n\n// Verifica se a data já passou\nif (inputDate < currentDate) {\n  return \"invalid - retroactive date\";\n}\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado)\nconst dayOfWeek = inputDate.getDay();\nconst hours = inputDate.getHours();\n\n// Validação para dias de semana (Segunda a Sexta)\nif (dayOfWeek >= 1 && dayOfWeek <= 5) {\n  if (hours >= 9 && hours < 18) {\n    return \"valid date - inside working hours\";\n  } else {\n    return \"invalid date - outside working hours\";\n  }\n}\n\n// Validação para sábados\nif (dayOfWeek === 6) {\n  if (hours >= 9 && hours < 13) {\n    return \"valid date - inside working hours\";\n  } else {\n    return \"invalid date - outside working hours\";\n  }\n}\n\n// Domingos e outros dias não permitidos\nreturn \"invalid date - sunday\";"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [
        5580,
        1060
      ],
      "id": "108fd623-bb64-43d5-83d2-6e8ba98c4e7f",
      "name": "validateDate"
    },
    {
      "parameters": {
        "name": "getWeekDay",
        "description": "Use essa tool para consultar o dia da semana.\nForneça como paramentro uma data no formato dd/mm/yyyy",
        "jsCode": "const [day, month, year] = query.split('/').map(Number);\nconst date = new Date(year, month - 1, day);\nreturn date.toLocaleDateString('pt-BR', { weekday: 'long' });"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [
        5720,
        1340
      ],
      "id": "8abe8c03-a914-4422-a20a-54ef6cc9c8e1",
      "name": "getWeekDay"
    },
    {
      "parameters": {
        "name": "validateInfos",
        "description": "Use esta tool para validar se todas as informações necessárias para o agendamento foram preenchidas corretamente.\nParâmetro: objeto JSON em formato string com os campos [data, hora, diaSemana, cliente, carro, telefone, unidade]\nRetorna uma string:\n- Se estiver tudo preenchido: \"ok - todos os campos presentes\"\n- Se faltar algo: \"faltando - [lista de campos faltantes separada por ;]\"\n\n\n\nEssa função valida se os campos obrigatórios para concluir um agendamento estão preenchidos corretamente. Caso algum campo esteja ausente ou vazio, a função retorna quais campos ainda estão faltando.\nCampos obrigatórios:\n\nParâmetro: data (DIA, formato: YYYY-MM-DD), hora (formato HH:mm), diaSemana (SEG, TER, QUA, etc), cliente (nome), carro (modelo, ano)\nRetorna uma lista de campos faltante\n\n",
        "jsCode": "let data;\ntry {\n  data = JSON.parse(query);\n} catch (e) {\n  return \"invalid input - not a valid JSON\";\n}\n\nconst requiredFields = {\n  data: \"data\",\n  hora: \"hora\",\n  diaSemana: \"diaSemana\",\n  cliente: \"cliente\",\n  carro: \"carro\",\n  telefone: \"telefone\",\n  unidade: \"unidade\"\n};\n\nconst missing = [];\n\nfor (const key in requiredFields) {\n  const value = data[key];\n  if (!value || typeof value !== 'string' || value.trim() === '') {\n    missing.push(requiredFields[key]);\n  }\n}\n\nif (missing.length === 0) {\n  return \"ok - todos os campos presentes\";\n} else {\n  return `faltando - ${missing.join(\"; \")}`;\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [
        5640,
        860
      ],
      "id": "2bb6e17f-a73b-4523-9031-419bc0c74f2f",
      "name": "validateInfos"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "code-normalizer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message-type": {
      "main": [
        [
          {
            "node": "Text Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get-audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-audio": {
      "main": [
        [
          {
            "node": "openai-transcribe-audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "openai-transcribe-audio": {
      "main": [
        [
          {
            "node": "Audio Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Redis Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5 seg": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait 5 seg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "delete-all-docs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "redis-clear-messages-buffer": {
      "main": [
        [
          {
            "node": "redis-clear-messages-buffer1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmento de Msgs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "code-normalizer": {
      "main": [
        [
          {
            "node": "payload_handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "consulta_agendamentos": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "cancelar_agendamentos": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "supabase-update-last-msg": {
      "main": [
        [
          {
            "node": "message-type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-create-lead": {
      "main": [
        [
          {
            "node": "google-sheets-create-update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if-existing-lead": {
      "main": [
        [
          {
            "node": "supabase-update-last-msg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "supabase-create-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-get-lead": {
      "main": [
        [
          {
            "node": "if-existing-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch-block-ai": {
      "main": [
        [
          {
            "node": "supabase-get-lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - AI Pausada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "verifica-intervencao-humana": {
      "main": [
        [
          {
            "node": "switch-block-ai",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch-msg-from": {
      "main": [
        [
          {
            "node": "block-lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "verifica-intervencao-humana",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "postgres-get-lead-follow-up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "postgres-get-lead-follow-up": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Não faz nada - FIM",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "postgres-update-lead-follow-up": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "google-sheets-create-update": {
      "main": [
        [
          {
            "node": "supabase-update-last-msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "payload_handler": {
      "main": [
        [
          {
            "node": "switch-msg-from",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Redis Memory": {
      "main": [
        [
          {
            "node": "Compara Get Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "vaal-agente-principal": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Segmento de Msgs": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "http-response-zAPI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory FollowUP": {
      "ai_memory": [
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model FollowUP": {
      "ai_languageModel": [
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "http-response-zAPI FollowUP": {
      "main": [
        [
          {
            "node": "postgres-update-lead-follow-up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "vaal-agente-follow-up": {
      "main": [
        [
          {
            "node": "http-response-zAPI FollowUP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model RAG": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "http-response-zAPI": {
      "main": [
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI3": {
      "ai_embedding": [
        [
          {
            "node": "insert-doc-into-vector-store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "data-loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "loop-files": {
      "main": [
        [
          {
            "node": "The End",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "download-file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete-all-docs": {
      "main": [
        [
          {
            "node": "get-all-files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-all-files": {
      "main": [
        [
          {
            "node": "loop-files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download-file": {
      "main": [
        [
          {
            "node": "extract-from-file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract-from-file": {
      "main": [
        [
          {
            "node": "insert-doc-into-vector-store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert-doc-into-vector-store": {
      "main": [
        [
          {
            "node": ">>>",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "data-loader": {
      "ai_document": [
        [
          {
            "node": "insert-doc-into-vector-store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    ">>>": {
      "main": [
        [
          {
            "node": "loop-files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "block-lead": {
      "main": [
        [
          {
            "node": "google-sheets-discart-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "google-sheets-discart-lead": {
      "main": [
        [
          {
            "node": "supabase-atualiza-agendamento1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call n8n Workflow": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Call n8n Workflow - FollowUp": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "postgres-update-status-lead-follow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "postgres-update-status-lead-follow": {
      "main": [
        [
          {
            "node": "google-sheets-update-status-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "google-sheets-update-status-lead": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validateDate": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "getWeekDay": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "validateInfos": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": null,
  "pinData": {},
  "versionId": "f374b254-9bd6-44a2-8988-9cbfe857207d",
  "triggerCount": 2,
  "tags": [
    {
      "createdAt": "2025-03-30T03:14:44.699Z",
      "updatedAt": "2025-03-30T03:14:44.699Z",
      "id": "D178iir5EAbPpBLw",
      "name": "vaal-ai"
    },
    {
      "createdAt": "2025-03-30T03:14:53.388Z",
      "updatedAt": "2025-03-30T03:14:53.388Z",
      "id": "dWiBulvbiiwdTqrC",
      "name": "sdr"
    }
  ]
}