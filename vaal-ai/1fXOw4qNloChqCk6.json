{
  "data": {
    "createdAt": "2025-05-19T14:22:49.081Z",
    "updatedAt": "2025-06-27T14:24:48.418Z",
    "id": "1fXOw4qNloChqCk6",
    "name": "Vaal-AI | SDR",
    "active": true,
    "isArchived": false,
    "nodes": [
      {
        "parameters": {
          "content": "## Pausa para Atendimento Humano",
          "height": 440,
          "width": 1340,
          "color": 4
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          80,
          80
        ],
        "typeVersion": 1,
        "id": "370d1443-a188-4306-9b67-2129c8e78e7c",
        "name": "Sticky Note29"
      },
      {
        "parameters": {
          "operation": "formatDate",
          "date": "={{ $now.setLocale('pt-BR').setZone(\"America/Sao_Paulo\") }}",
          "format": "custom",
          "customFormat": "EEEE, dd 'de' MMMM 'de' yyyy 'às' HH:mm",
          "outputFieldName": "=formattedDate",
          "options": {
            "includeInputFields": false,
            "timezone": true
          }
        },
        "type": "n8n-nodes-base.dateTime",
        "typeVersion": 2,
        "position": [
          300,
          160
        ],
        "id": "78a53505-1d28-4e34-b0b8-8a25236a5259",
        "name": "Date & Time1",
        "alwaysOutputData": false,
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "operation": "get",
          "propertyName": "block",
          "key": "={{ $json.contact.phone }}_block",
          "options": {}
        },
        "id": "f6378636-c057-4835-8937-96e9d4893b0d",
        "name": "verifica-intervencao-humana",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [
          1240,
          340
        ],
        "credentials": {
          "redis": {
            "id": "TaZC13ehzqYrWltc",
            "name": "Redis account"
          }
        }
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          880,
          360
        ],
        "id": "2f62c8b5-4754-44fa-b7d4-c0d1802174d4",
        "name": "Não faz nada - Workflow"
      },
      {
        "parameters": {
          "authentication": "serviceAccount",
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
            "mode": "list",
            "cachedResultName": "Agendamentos Vaapty",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1983382654,
            "mode": "list",
            "cachedResultName": "LEADS - IA VAAL",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "TELEFONE": "={{ $('payload_handler').item.json.contact.phone }}",
              "STATUS": "QUALIFICACAO-LOJA"
            },
            "matchingColumns": [
              "TELEFONE"
            ],
            "schema": [
              {
                "id": "DATA_PRIMEIRO_CONTATO",
                "displayName": "DATA_PRIMEIRO_CONTATO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "HORA_PRIMEIRO_CONTATO",
                "displayName": "HORA_PRIMEIRO_CONTATO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DIA",
                "displayName": "DIA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "HORA",
                "displayName": "HORA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DIA_SEMANA",
                "displayName": "DIA_SEMANA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "PRE_VENDA",
                "displayName": "PRE_VENDA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "CLIENTE",
                "displayName": "CLIENTE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "CARRO",
                "displayName": "CARRO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "TELEFONE",
                "displayName": "TELEFONE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "ORIGEM",
                "displayName": "ORIGEM",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "OBSERVACAO",
                "displayName": "OBSERVACAO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "STATUS",
                "displayName": "STATUS",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "UNIDADE",
                "displayName": "UNIDADE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "VEIO",
                "displayName": "VEIO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DESFECHO",
                "displayName": "DESFECHO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "MOTIVO",
                "displayName": "MOTIVO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          1060,
          120
        ],
        "id": "f3bd7c3b-ef37-49d5-8794-73426c5a389f",
        "name": "google-sheets-discart-lead",
        "credentials": {
          "googleApi": {
            "id": "bxp0F5u0sPfGs6wB",
            "name": "Google Sheets account - Service Account"
          }
        }
      },
      {
        "parameters": {
          "operation": "update",
          "tableId": "vaapty_leads",
          "filters": {
            "conditions": [
              {
                "keyName": "id",
                "condition": "eq",
                "keyValue": "={{ $('payload_handler').item.json.contact.phone }}"
              }
            ]
          },
          "fieldsUi": {
            "fieldValues": [
              {
                "fieldId": "status",
                "fieldValue": "QUALIFICACAO-LOJA"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          1240,
          120
        ],
        "id": "b18b8ef2-9d1e-4a4b-ba79-81dc2c88cf60",
        "name": "supabase-atualiza-agendamento1",
        "credentials": {
          "supabaseApi": {
            "id": "Aypne3pGbGP17JRv",
            "name": "Supabase account Vaapty"
          }
        }
      },
      {
        "parameters": {
          "operation": "set",
          "key": "={{ $('payload_handler').item.json.contact.phone }}_block",
          "value": "true",
          "keyType": "string"
        },
        "id": "020ba815-6aa2-41bf-a3b5-573b67699df9",
        "name": "block-lead",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [
          880,
          120
        ],
        "credentials": {
          "redis": {
            "id": "TaZC13ehzqYrWltc",
            "name": "Redis account"
          }
        }
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "4bee2c7b-e8fa-420c-9d5e-6140002eca91",
                      "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                      "rightValue": "eventN8n",
                      "operator": {
                        "type": "boolean",
                        "operation": "true",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Me"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                      "rightValue": "fromClient",
                      "operator": {
                        "type": "boolean",
                        "operation": "false",
                        "singleValue": true
                      },
                      "id": "8d7d84f4-ab9f-4e1f-9b9a-e83cc4e9bc03"
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "User"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "40fbb4c3-f89c-4eab-8cbd-5ad683f756c6",
                      "leftValue": "={{ $('payload_handler').item.json.message.isGroup }}",
                      "rightValue": "",
                      "operator": {
                        "type": "boolean",
                        "operation": "true",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Group"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          660,
          160
        ],
        "id": "f7b05ede-5ff7-4dba-8a72-b5f89b4e8ef8",
        "name": "switch-msg-from"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "0d409c70-6488-4f4f-8681-5bb552563957",
                "name": "evolution.serverUrl",
                "value": "={{ $('Webhook').item.json.body.body.server_url }}",
                "type": "string"
              },
              {
                "id": "4ae67c6f-3fba-45c0-ade2-1fa3731b93e8",
                "name": "evolution.phone",
                "value": "={{ $('Webhook').item.json.body.body.sender.split('@')[0] }}",
                "type": "string"
              },
              {
                "id": "6e253dad-0fbf-4a74-b6a4-618c79bb3460",
                "name": "evolution.apiKey",
                "value": "={{ $('Webhook').item.json.body.body.apikey }}",
                "type": "string"
              },
              {
                "id": "5e3e579f-f9dd-4fb0-9c4b-d2c56b151c55",
                "name": "contact.phone",
                "value": "={{ $('Webhook').item.json.body.body.data.key.remoteJid.split('@')[0] }}",
                "type": "string"
              },
              {
                "id": "877887ea-c7df-4c1e-b6a9-4ec573256127",
                "name": "contact.firstName",
                "value": "={{ $('Webhook').item.json.body.body.data.pushName.split(' ')[0] }}",
                "type": "string"
              },
              {
                "id": "ecc3073f-8c25-41bb-abfe-402c385c6031",
                "name": "contact.fullName",
                "value": "={{ $('Webhook').item.json.body.body.data.pushName }}",
                "type": "string"
              },
              {
                "id": "d4768288-0024-47c6-b9c6-3dcc9e18c2e0",
                "name": "message.type",
                "value": "={{ !!$('Webhook').item.json.body.body.data.message.conversation && 'text' || \n   !!$('Webhook').item.json.body.body.data.message.audioMessage && 'audio'\n}}",
                "type": "string"
              },
              {
                "id": "20a86b71-c77f-4b4e-9db9-b9964276e67f",
                "name": "message.text.conversation",
                "value": "={{ $('Webhook').item.json.body.body.data.message.conversation }}",
                "type": "string"
              },
              {
                "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
                "name": "message.audio.base64",
                "value": "={{ $('Webhook').item.json.body.body.data.message.base64 }}",
                "type": "string"
              },
              {
                "id": "3c159587-cd22-45df-aac7-82add1c9992e",
                "name": "message.status",
                "value": "={{ $('Webhook').item.json.body.body.data.status }}",
                "type": "string"
              },
              {
                "id": "cc95a725-d953-433d-a8ee-aa903f515ca5",
                "name": "message.timestamp",
                "value": "={{ DateTime.fromMillis($('Webhook').item.json.body.body.data.messageTimestamp) }}",
                "type": "string"
              },
              {
                "id": "d65f9d80-5f16-4c29-965b-fc8832fe13eb",
                "name": "message.fromMe",
                "value": "={{ $('Webhook').item.json.body.body.data.key.fromMe }}",
                "type": "boolean"
              },
              {
                "id": "44cce600-ebb8-4242-8008-5da0951d16c5",
                "name": "message.isGroup",
                "value": "={{ $('Webhook').item.json.body.body.event != 'messages.upsert' }}",
                "type": "boolean"
              },
              {
                "id": "c3d798ea-378e-4f39-a764-82ff9733e36a",
                "name": "message.id",
                "value": "={{ $('Webhook').item.json.body.body.data.key.id }}",
                "type": "string"
              }
            ]
          },
          "includeOtherFields": "=",
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          480,
          160
        ],
        "id": "1669759c-a431-4306-802a-1807703ef596",
        "name": "payload_handler"
      },
      {
        "parameters": {
          "content": "## Registro de Cliente no Supabase",
          "height": 440,
          "width": 1220,
          "color": 5
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1460,
          80
        ],
        "typeVersion": 1,
        "id": "8fec7df8-0a90-4f7c-be34-f1654d778e2f",
        "name": "Sticky Note22"
      },
      {
        "parameters": {
          "operation": "update",
          "tableId": "vaapty_leads",
          "matchType": "allFilters",
          "filters": {
            "conditions": [
              {
                "keyName": "id",
                "condition": "eq",
                "keyValue": "={{ $('payload_handler').item.json.contact.phone }}"
              }
            ]
          },
          "fieldsUi": {
            "fieldValues": [
              {
                "fieldId": "last_msg",
                "fieldValue": "={{ $now.minus() }}"
              },
              {
                "fieldId": "follow_up_times",
                "fieldValue": "0"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          2520,
          140
        ],
        "id": "fd5ec98c-650d-4895-8d67-99d608d44831",
        "name": "supabase-update-last-msg",
        "credentials": {
          "supabaseApi": {
            "id": "Aypne3pGbGP17JRv",
            "name": "Supabase account Vaapty"
          }
        }
      },
      {
        "parameters": {
          "tableId": "vaapty_leads",
          "fieldsUi": {
            "fieldValues": [
              {
                "fieldId": "id",
                "fieldValue": "={{ $('payload_handler').item.json.contact.phone.toNumber() }}"
              },
              {
                "fieldId": "name",
                "fieldValue": "={{ $('payload_handler').item.json.contact.fullName }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          2100,
          360
        ],
        "id": "0883824f-068e-4fde-8bfa-754f02376cfe",
        "name": "supabase-create-lead",
        "credentials": {
          "supabaseApi": {
            "id": "Aypne3pGbGP17JRv",
            "name": "Supabase account Vaapty"
          }
        },
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
                "leftValue": "={{ $('supabase-get-lead').item.json.id }}",
                "rightValue": "",
                "operator": {
                  "type": "number",
                  "operation": "exists",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          1900,
          160
        ],
        "id": "50a1006d-cc33-49ea-99db-0b6b2bc3d964",
        "name": "if-existing-lead"
      },
      {
        "parameters": {
          "operation": "get",
          "tableId": "vaapty_leads",
          "filters": {
            "conditions": [
              {
                "keyName": "id",
                "keyValue": "={{ $('payload_handler').item.json.contact.phone }}"
              }
            ]
          }
        },
        "type": "n8n-nodes-base.supabase",
        "typeVersion": 1,
        "position": [
          1720,
          160
        ],
        "id": "a0466385-f8ab-4318-82b9-2a23f11bc5a6",
        "name": "supabase-get-lead",
        "alwaysOutputData": true,
        "credentials": {
          "supabaseApi": {
            "id": "Aypne3pGbGP17JRv",
            "name": "Supabase account Vaapty"
          }
        },
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 1
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json.block }}",
                      "rightValue": "",
                      "operator": {
                        "type": "string",
                        "operation": "empty",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Vaal Ativa"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 1
                  },
                  "conditions": [
                    {
                      "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                      "leftValue": "={{ $json.block }}",
                      "rightValue": "true",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Vaal Desativada"
              }
            ]
          },
          "options": {}
        },
        "id": "a49c08cc-57f6-48db-b801-99fdd5b2d307",
        "name": "switch-block-ai",
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3,
        "position": [
          1500,
          340
        ]
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          1720,
          360
        ],
        "id": "9512a0ba-1efb-4f42-a77e-26d5c004d6da",
        "name": "Não faz nada - AI Pausada"
      },
      {
        "parameters": {
          "authentication": "serviceAccount",
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
            "mode": "list",
            "cachedResultName": "Agendamentos Vaapty",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1983382654,
            "mode": "list",
            "cachedResultName": "LEADS - IA VAAL",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "TELEFONE": "={{ $('payload_handler').item.json.contact.phone }}",
              "CLIENTE": "={{ $('payload_handler').item.json.contact.fullName }}",
              "PRE_VENDA": "VAAL - IA",
              "STATUS": "QUALIFICACAO",
              "DATA_PRIMEIRO_CONTATO": "={{ $now.setZone('America/Sao_Paulo').format('dd/MM/yyyy') }}",
              "HORA_PRIMEIRO_CONTATO": "={{ $now.setZone('America/Sao_Paulo').format('HH:mm') }}"
            },
            "matchingColumns": [
              "TELEFONE"
            ],
            "schema": [
              {
                "id": "DATA_PRIMEIRO_CONTATO",
                "displayName": "DATA_PRIMEIRO_CONTATO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "HORA_PRIMEIRO_CONTATO",
                "displayName": "HORA_PRIMEIRO_CONTATO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "DIA",
                "displayName": "DIA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "HORA",
                "displayName": "HORA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DIA_SEMANA",
                "displayName": "DIA_SEMANA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "PRE_VENDA",
                "displayName": "PRE_VENDA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "CLIENTE",
                "displayName": "CLIENTE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "CARRO",
                "displayName": "CARRO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "TELEFONE",
                "displayName": "TELEFONE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "ORIGEM",
                "displayName": "ORIGEM",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "OBSERVACAO",
                "displayName": "OBSERVACAO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "STATUS",
                "displayName": "STATUS",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "UNIDADE",
                "displayName": "UNIDADE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "VEIO",
                "displayName": "VEIO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DESFECHO",
                "displayName": "DESFECHO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "MOTIVO",
                "displayName": "MOTIVO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          2320,
          360
        ],
        "id": "0095d801-7bd3-4e4b-8f3a-9490ce54033b",
        "name": "google-sheets-create-update",
        "credentials": {
          "googleApi": {
            "id": "bxp0F5u0sPfGs6wB",
            "name": "Google Sheets account - Service Account"
          }
        }
      },
      {
        "parameters": {
          "operation": "toBinary",
          "sourceProperty": "base64",
          "options": {
            "fileName": "=file_{{ $now.format('yyyyMMdd_HHmmss') }}.ogg"
          }
        },
        "type": "n8n-nodes-base.convertToFile",
        "typeVersion": 1.1,
        "position": [
          3100,
          360
        ],
        "id": "9b122948-ec5a-40e5-afe3-2ff0038aa228",
        "name": "Convert to File"
      },
      {
        "parameters": {
          "content": "## Classifica Mensagens",
          "height": 440,
          "width": 700,
          "color": 3
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          2720,
          80
        ],
        "typeVersion": 1,
        "id": "0faea11f-0a81-4598-92d4-58c090f7c92d",
        "name": "Sticky Note",
        "disabled": true
      },
      {
        "parameters": {
          "resource": "audio",
          "operation": "transcribe",
          "binaryPropertyName": "=data",
          "options": {
            "language": "pt"
          }
        },
        "type": "@n8n/n8n-nodes-langchain.openAi",
        "typeVersion": 1.8,
        "position": [
          3260,
          360
        ],
        "id": "0add0e49-2945-4d3f-b0d4-a9360d835a6a",
        "name": "openai-transcribe-audio",
        "credentials": {
          "openAiApi": {
            "id": "d0EynPkHQLqSswaA",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                      "rightValue": "text",
                      "operator": {
                        "type": "string",
                        "operation": "equals"
                      },
                      "id": "5babf18b-3925-426c-b907-e8f3e7936ffc"
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "text"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "d8c1d47a-0014-4d4c-8c43-c68df3a99df2",
                      "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                      "rightValue": "audio",
                      "operator": {
                        "type": "string",
                        "operation": "equals",
                        "name": "filter.operator.equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "audio"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          2780,
          140
        ],
        "id": "8055dbc4-c31e-445e-a412-aa0874d5a080",
        "name": "message-type"
      },
      {
        "parameters": {
          "operation": "push",
          "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer",
          "messageData": "={{ $('payload_handler').item.json.message.text.conversation }}",
          "tail": true
        },
        "id": "3ff64653-8ce4-4124-ba2c-1d11d4fa3173",
        "name": "Text Memory",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [
          3520,
          160
        ],
        "credentials": {
          "redis": {
            "id": "TaZC13ehzqYrWltc",
            "name": "Redis account"
          }
        }
      },
      {
        "parameters": {
          "operation": "push",
          "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer",
          "messageData": "={{ $('openai-transcribe-audio').item.json.text }}",
          "tail": true
        },
        "id": "8652613f-2088-41f9-b2c7-1e8a1ea6b4fa",
        "name": "Audio Memory",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [
          3520,
          360
        ],
        "credentials": {
          "redis": {
            "id": "TaZC13ehzqYrWltc",
            "name": "Redis account"
          }
        }
      },
      {
        "parameters": {
          "operation": "get",
          "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer",
          "options": {}
        },
        "id": "d1a20908-de5a-4139-aca8-56a585ff6da5",
        "name": "Get Memory 2",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [
          4100,
          260
        ],
        "credentials": {
          "redis": {
            "id": "TaZC13ehzqYrWltc",
            "name": "Redis account"
          }
        }
      },
      {
        "parameters": {
          "content": "## Mensagem Picotada",
          "height": 440,
          "width": 1180,
          "color": 6
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          3460,
          80
        ],
        "typeVersion": 1,
        "id": "8f171bde-ed6d-4fbf-864b-3b2c323ce0df",
        "name": "Sticky Note24",
        "disabled": true
      },
      {
        "parameters": {
          "operation": "get",
          "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer",
          "options": {}
        },
        "id": "5a6bd64c-9167-4dc3-94c9-9a27fe5cf659",
        "name": "Get Memory 1",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [
          3760,
          260
        ],
        "credentials": {
          "redis": {
            "id": "TaZC13ehzqYrWltc",
            "name": "Redis account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "d5a342e9-585b-42ea-be44-644adae10199",
                "leftValue": "={{ $('Edit Redis Memory').item.json.Redis2 }}",
                "rightValue": "={{ $('Edit Redis Memory').item.json.Redis1 }}",
                "operator": {
                  "type": "string",
                  "operation": "equals"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "id": "95d5bb4b-c5be-4ef5-8d14-dd739e4e927c",
        "name": "Compara Get Memory",
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          4440,
          260
        ]
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
                "name": "Redis2",
                "value": "={{ $('Get Memory 2').item.json.propertyName }}",
                "type": "string"
              },
              {
                "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
                "name": "Redis1",
                "value": "={{ $('Get Memory 1').item.json.propertyName }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "id": "8d75b75a-7ef1-419d-a06a-726616c0e6a0",
        "name": "Edit Redis Memory",
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          4260,
          260
        ]
      },
      {
        "parameters": {},
        "id": "1c65c248-0cd4-4952-a80b-5ba6e2777f89",
        "name": "Wait 5 seg",
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          3940,
          260
        ],
        "webhookId": "52441967-5a76-464a-98fd-c5f7e5d90e8a"
      },
      {
        "parameters": {
          "rule": {
            "interval": [
              {
                "field": "hours",
                "hoursInterval": 6
              }
            ]
          }
        },
        "type": "n8n-nodes-base.scheduleTrigger",
        "typeVersion": 1.2,
        "position": [
          3040,
          860
        ],
        "id": "78d19723-a4cc-4986-87f7-f458c7c26509",
        "name": "Schedule Trigger",
        "disabled": true
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "SELECT DISTINCT *\nFROM vaapty_leads\nWHERE \n    status = 'QUALIFICACAO'\nAND (\n    (follow_up_times = 0 AND last_msg <= NOW() - INTERVAL '24 hours' AND last_msg > NOW() - INTERVAL '72 hours')\n    OR\n    (follow_up_times = 1 AND last_msg <= NOW() - INTERVAL '72 hours')\n    OR\n    (follow_up_times = 2 AND last_msg <= NOW() - INTERVAL '96 hours')\n);",
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          3220,
          860
        ],
        "id": "38a19d38-5534-4f58-ba6a-9bff33733438",
        "name": "postgres-get-lead-follow-up",
        "credentials": {
          "postgres": {
            "id": "5ZF1HPtlbBIacazg",
            "name": "Postgres account Vaapty"
          }
        }
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.noOp",
        "typeVersion": 1,
        "position": [
          3660,
          660
        ],
        "id": "6f0a432a-d862-4ddb-a1a5-94b91bc29095",
        "name": "Não faz nada - FIM"
      },
      {
        "parameters": {
          "operation": "update",
          "schema": {
            "__rl": true,
            "value": "public",
            "mode": "list",
            "cachedResultName": "public"
          },
          "table": {
            "__rl": true,
            "value": "vaapty_leads",
            "mode": "list",
            "cachedResultName": "vaapty_leads"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "id": "={{ $('Loop Over Items1').item.json.id }}",
              "follow_up_times": "={{ $('Loop Over Items1').item.json.follow_up_times.toNumber() + 1 }}"
            },
            "matchingColumns": [
              "id"
            ],
            "schema": [
              {
                "id": "id",
                "displayName": "id",
                "required": false,
                "defaultMatch": true,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "created_at",
                "displayName": "created_at",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "last_msg",
                "displayName": "last_msg",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "name",
                "displayName": "name",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "status",
                "displayName": "status",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "follow_up_times",
                "displayName": "follow_up_times",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          3140,
          1100
        ],
        "id": "1390f85e-6243-4158-9d79-88fce206bb09",
        "name": "postgres-update-lead-follow-up",
        "credentials": {
          "postgres": {
            "id": "5ZF1HPtlbBIacazg",
            "name": "Postgres account Vaapty"
          }
        }
      },
      {
        "parameters": {
          "content": "## Follow-UP",
          "height": 860,
          "width": 1680,
          "color": 7
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          2960,
          560
        ],
        "typeVersion": 1,
        "id": "4dd7a53e-8b44-4393-85e0-f8f15467c7e9",
        "name": "Sticky Note3",
        "disabled": true
      },
      {
        "parameters": {
          "sessionIdType": "customKey",
          "sessionKey": "={{ $json.id }}_vaal_1_chat_memory",
          "contextWindowLength": 30
        },
        "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "typeVersion": 1.3,
        "position": [
          4120,
          1180
        ],
        "id": "e45c9c7f-6656-4063-bd54-542d9123de80",
        "name": "Postgres Chat Memory FollowUP",
        "credentials": {
          "postgres": {
            "id": "5ZF1HPtlbBIacazg",
            "name": "Postgres account Vaapty"
          }
        }
      },
      {
        "parameters": {
          "model": "gpt-4.1-nano",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "typeVersion": 1,
        "position": [
          3960,
          1180
        ],
        "id": "da7ff5db-f4bb-4378-a30a-63408f8fd839",
        "name": "OpenAI Chat Model FollowUP",
        "credentials": {
          "openAiApi": {
            "id": "d0EynPkHQLqSswaA",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=Este é um follow-up para o cliente {{ $json.clientName }}, que demonstrou interesse, mas ainda não concluiu o agendamento.  \nO cliente está na **tentativa número {{ $json.tentativa }}**.  \nAdapte a abordagem de acordo com a etapa do follow-up.  \nSe houver informações de agendamento já fornecidas, continue a partir delas.  \nSe o cliente estiver indeciso, quebre as objeções e reforce os benefícios da Vaapty.  \nEvite repetir perguntas que já foram respondidas.  \nSe o cliente responder, siga com o fluxo normal.\n",
          "options": {
            "systemMessage": "=<instrucoes>\nNome do cliente é {{ $json.clientName }}.\nHoje é {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n\nEste cliente está em um processo de follow-up. Dependendo da tentativa atual, adapte sua abordagem:\n\n🔹 **Primeira tentativa (follow_up_times = 0):**\n   - O cliente demonstrou interesse recentemente (há cerca de 30 minutos), mas ainda não finalizou o agendamento.\n   - Seja leve e direto, lembrando-o da oportunidade, exemplo de mensagem:\n     **\"Oi {{ $json.clientName }}, vi que você mostrou interesse na avaliação do seu carro, mas ainda não finalizamos. Podemos concluir isso agora?\"**\n\n🔹 **Segunda tentativa (follow_up_times = 1):**\n   - O cliente não respondeu ao primeiro follow-up (passaram 24 horas).\n   - Destaque a importância de agendar o quanto antes, exemplo de mensagem:\n     **\"Oi {{ $json.clientName }}, espero que esteja bem! Tentamos falar sobre sua avaliação na Vaapty. Você ainda tem interesse? Posso te ajudar com alguma dúvida?\"**\n   - Se houver objeções, use a ferramenta [get_vaapty_info] para responder com segurança.\n\n🔹 **Terceira tentativa (follow_up_times = 2) - Última tentativa:**\n   - O cliente ignorou duas tentativas anteriores e passaram 72 horas.\n   - Tente um fechamento direto, exemplo de mensagem:\n     **\"Oi {{ $json.clientName }}, Caso ainda tenha interesse na avaliação do seu carro, podemos reservar um horário para você. Se precisar de mais informações, estou aqui para ajudar!\"**\n\nObs.: Os exemplos de mensagem não precisam ser seguidos, adapte a mensagem ao cliente, com suas informações.\n\n🔹 **Regras Importantes:**\n- **Se houver informações de agendamento já fornecidas**, continue a partir delas.\n- **Não repita perguntas desnecessárias.** Sempre consulte o histórico antes de perguntar.\n- **Se o cliente quiser informações sobre a Vaapty**, use [get_vaapty_info].\n- **Se o cliente responder, siga para o fluxo normal.**\n</instrucoes>\n\n<objetivo>\nSeu objetivo é reativar a conversa com o cliente e incentivá-lo a concluir o agendamento, sem ser insistente.\n</objetivo>\n\n<persona>\nVocê é a Vaal, assistente da Vaapty. Seu tom deve ser:\n- Amigável e humanizado.\n- Profissional, mas sem parecer robótico.\n- Confiante e persuasivo.\n- Direto ao ponto, sem insistir desnecessariamente.\n</persona>\n"
          }
        },
        "id": "6cadf627-a634-4fec-9f85-e634a70889d9",
        "name": "vaal-agente-follow-up",
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 1.6,
        "position": [
          4120,
          920
        ]
      },
      {
        "parameters": {
          "name": "agenda_sheet_tool",
          "description": "Chame essa tool para realizando o agendamento, sempre usando padrão pt-BR e America/Sao_Paulo",
          "workflowId": {
            "__rl": true,
            "value": "ZpOvo8AmQzyVONiS",
            "mode": "list",
            "cachedResultName": "Vaal-AI | Agenda Sheet"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {
              "telefone": "={{ $json.id }}",
              "dia": "={{ $fromAI('dia', `dia do agendamento | format('dd/MM/yyyy')`, 'string') }}",
              "hora": "={{ $fromAI('hora', `hora do agendamento | format('HH:mm') `, 'string') }}",
              "dia_semana": "={{ $fromAI('dia_semana', `dia da semana do agendamento | format('EEE') `, 'string') }}",
              "cliente": "={{ $json.name }}",
              "carro": "={{ $fromAI('carro', `carro do cliente que será avaliado`, 'string') || \"\" }}",
              "unidade": "={{ $fromAI('unidade', `unidade escolhida pelo  cliente para o agendamento`, 'string') || \"\" }}"
            },
            "matchingColumns": [],
            "schema": [
              {
                "id": "telefone",
                "displayName": "telefone",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "dia",
                "displayName": "dia",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "hora",
                "displayName": "hora",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "dia_semana",
                "displayName": "dia_semana",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "cliente",
                "displayName": "cliente",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "carro",
                "displayName": "carro",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "unidade",
                "displayName": "unidade",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          }
        },
        "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
        "typeVersion": 2.1,
        "position": [
          4300,
          1180
        ],
        "id": "f2a81df5-2d97-41bd-8968-9b9244541d6d",
        "name": "Call n8n Workflow - FollowUp"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "bdab41ed-7b55-4da9-a3c7-e0c00d23dd81",
                "leftValue": "={{ $json.follow_up_times.toNumber() }}",
                "rightValue": 3,
                "operator": {
                  "type": "number",
                  "operation": "gte"
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          3660,
          1000
        ],
        "id": "dbc8ea07-a365-41aa-a4d5-e67c8372f37a",
        "name": "If"
      },
      {
        "parameters": {
          "operation": "update",
          "schema": {
            "__rl": true,
            "value": "public",
            "mode": "list",
            "cachedResultName": "public"
          },
          "table": {
            "__rl": true,
            "value": "vaapty_leads",
            "mode": "list",
            "cachedResultName": "vaapty_leads"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "id": "={{ $('Loop Over Items1').item.json.id }}",
              "status": "SEM_INTERESSE"
            },
            "matchingColumns": [
              "id"
            ],
            "schema": [
              {
                "id": "id",
                "displayName": "id",
                "required": true,
                "defaultMatch": true,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "created_at",
                "displayName": "created_at",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "name",
                "displayName": "name",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "status",
                "displayName": "status",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "last_msg",
                "displayName": "last_msg",
                "required": true,
                "defaultMatch": false,
                "display": true,
                "type": "dateTime",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "follow_up_times",
                "displayName": "follow_up_times",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "number",
                "canBeUsedToMatch": true,
                "removed": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.postgres",
        "typeVersion": 2.5,
        "position": [
          3860,
          820
        ],
        "id": "529b1d1b-0659-44aa-a40c-2b8b6222503d",
        "name": "postgres-update-status-lead-follow",
        "credentials": {
          "postgres": {
            "id": "5ZF1HPtlbBIacazg",
            "name": "Postgres account Vaapty"
          }
        }
      },
      {
        "parameters": {
          "authentication": "serviceAccount",
          "operation": "appendOrUpdate",
          "documentId": {
            "__rl": true,
            "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
            "mode": "list",
            "cachedResultName": "Agendamentos Vaapty",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1983382654,
            "mode": "list",
            "cachedResultName": "LEADS - IA VAAL",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "TELEFONE": "={{ $('postgres-get-lead-follow-up').item.json.id }}",
              "STATUS": "SEM_INTERESSE"
            },
            "matchingColumns": [
              "TELEFONE"
            ],
            "schema": [
              {
                "id": "DATA_PRIMEIRO_CONTATO",
                "displayName": "DATA_PRIMEIRO_CONTATO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "HORA_PRIMEIRO_CONTATO",
                "displayName": "HORA_PRIMEIRO_CONTATO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DIA",
                "displayName": "DIA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "HORA",
                "displayName": "HORA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DIA_SEMANA",
                "displayName": "DIA_SEMANA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "PRE_VENDA",
                "displayName": "PRE_VENDA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "CLIENTE",
                "displayName": "CLIENTE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "CARRO",
                "displayName": "CARRO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "TELEFONE",
                "displayName": "TELEFONE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "ORIGEM",
                "displayName": "ORIGEM",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "OBSERVACAO",
                "displayName": "OBSERVACAO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "STATUS",
                "displayName": "STATUS",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "UNIDADE",
                "displayName": "UNIDADE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "VEIO",
                "displayName": "VEIO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DESFECHO",
                "displayName": "DESFECHO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "MOTIVO",
                "displayName": "MOTIVO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          4120,
          620
        ],
        "id": "efbb576a-4285-4df1-aeab-d4410105d3e6",
        "name": "google-sheets-update-status-lead",
        "credentials": {
          "googleApi": {
            "id": "bxp0F5u0sPfGs6wB",
            "name": "Google Sheets account - Service Account"
          }
        }
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          3420,
          860
        ],
        "id": "8d6b5fbb-8e1c-4aa2-82ce-0db390df2d5f",
        "name": "Loop Over Items1"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "28cbec4d-2c89-4336-bf5f-0539beddbf66",
                "name": "clientName",
                "value": "={{ $('Loop Over Items1').item.json.name.split(' ')[0] }}",
                "type": "string"
              },
              {
                "id": "2a7d1d5a-f25a-41bf-aa3f-e35273f2f37a",
                "name": "tentativa",
                "value": "={{ $('Loop Over Items1').item.json.follow_up_times }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          3860,
          1000
        ],
        "id": "6ef78194-1e5b-4ed1-8509-4fc69c9183bf",
        "name": "Edit Fields"
      },
      {
        "parameters": {
          "resource": "messages-api",
          "instanceName": "vaal_1",
          "remoteJid": "={{ $('Loop Over Items1').item.json.id }}",
          "messageText": "={{ $json.output }}",
          "options_message": {
            "delay": 2000
          }
        },
        "type": "n8n-nodes-evolution-api.evolutionApi",
        "typeVersion": 1,
        "position": [
          4460,
          1200
        ],
        "id": "7559d0cb-bdaf-4543-b934-ac1c84a0b395",
        "name": "Evolution API1",
        "credentials": {
          "evolutionApi": {
            "id": "yF1mcU14BypsoPiB",
            "name": "Evolution account"
          }
        }
      },
      {
        "parameters": {
          "content": "## R.A.G",
          "height": 320,
          "width": 740
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          4680,
          760
        ],
        "typeVersion": 1,
        "id": "e6a50f72-f12d-424b-9154-912e8a9e91ae",
        "name": "Sticky Note5",
        "disabled": true
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
        "typeVersion": 1.2,
        "position": [
          5260,
          940
        ],
        "id": "b09597e6-2a3a-4b92-91c1-1226d857bc37",
        "name": "Embeddings OpenAI1",
        "credentials": {
          "openAiApi": {
            "id": "d0EynPkHQLqSswaA",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "mode": "retrieve-as-tool",
          "toolName": "get_vaapty_info",
          "toolDescription": "Use essa ferramenta para explicar ao cliente como a Vaapty funciona CASO ele questione ou solicite informações do processo.",
          "tableName": {
            "__rl": true,
            "value": "vaapty_documents",
            "mode": "list",
            "cachedResultName": "vaapty_documents"
          },
          "options": {
            "queryName": "match_documents"
          }
        },
        "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
        "typeVersion": 1.1,
        "position": [
          5120,
          800
        ],
        "id": "4b354493-1095-4a00-866a-36e63d0d8bee",
        "name": "Supabase Vector Store",
        "credentials": {
          "supabaseApi": {
            "id": "Aypne3pGbGP17JRv",
            "name": "Supabase account Vaapty"
          }
        }
      },
      {
        "parameters": {
          "model": {
            "__rl": true,
            "value": "gpt-4.1-mini",
            "mode": "list",
            "cachedResultName": "gpt-4.1-mini"
          },
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "typeVersion": 1.2,
        "position": [
          4780,
          360
        ],
        "id": "ce1d193f-e011-4456-bb16-8b3f2a576ded",
        "name": "OpenAI Chat Model",
        "credentials": {
          "openAiApi": {
            "id": "d0EynPkHQLqSswaA",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "sessionIdType": "customKey",
          "sessionKey": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_chat_memory",
          "contextWindowLength": 30
        },
        "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
        "typeVersion": 1.3,
        "position": [
          4940,
          360
        ],
        "id": "700f7955-7649-40e8-8597-5a9d8a9843aa",
        "name": "Postgres Chat Memory",
        "credentials": {
          "postgres": {
            "id": "5ZF1HPtlbBIacazg",
            "name": "Postgres account Vaapty"
          }
        }
      },
      {
        "parameters": {
          "authentication": "serviceAccount",
          "documentId": {
            "__rl": true,
            "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
            "mode": "list",
            "cachedResultName": "Agendamentos Vaapty",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1983382654,
            "mode": "list",
            "cachedResultName": "LEADS - IA VAAL",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
          },
          "filtersUI": {
            "values": [
              {
                "lookupColumn": "TELEFONE",
                "lookupValue": "={{ $('payload_handler').item.json.contact.phone }}"
              },
              {
                "lookupColumn": "STATUS",
                "lookupValue": "AGENDADO"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheetsTool",
        "typeVersion": 4.5,
        "position": [
          5140,
          560
        ],
        "id": "ce2fa7c5-c594-4383-8ca8-098b2f73d7fa",
        "name": "consulta_agendamentos",
        "credentials": {
          "googleApi": {
            "id": "bxp0F5u0sPfGs6wB",
            "name": "Google Sheets account - Service Account"
          }
        }
      },
      {
        "parameters": {
          "authentication": "serviceAccount",
          "operation": "update",
          "documentId": {
            "__rl": true,
            "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
            "mode": "list",
            "cachedResultName": "Agendamentos Vaapty",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": 1983382654,
            "mode": "list",
            "cachedResultName": "LEADS - IA VAAL",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "TELEFONE": "={{ $('payload_handler').item.json.contact.phone }}",
              "STATUS": "CANCELADO_LEAD"
            },
            "matchingColumns": [
              "TELEFONE"
            ],
            "schema": [
              {
                "id": "DATA_PRIMEIRO_CONTATO",
                "displayName": "DATA_PRIMEIRO_CONTATO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "HORA_PRIMEIRO_CONTATO",
                "displayName": "HORA_PRIMEIRO_CONTATO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DIA",
                "displayName": "DIA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "HORA",
                "displayName": "HORA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DIA_SEMANA",
                "displayName": "DIA_SEMANA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "PRE_VENDA",
                "displayName": "PRE_VENDA",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "CLIENTE",
                "displayName": "CLIENTE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "CARRO",
                "displayName": "CARRO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "TELEFONE",
                "displayName": "TELEFONE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "ORIGEM",
                "displayName": "ORIGEM",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "OBSERVACAO",
                "displayName": "OBSERVACAO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "STATUS",
                "displayName": "STATUS",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": false
              },
              {
                "id": "UNIDADE",
                "displayName": "UNIDADE",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "VEIO",
                "displayName": "VEIO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "DESFECHO",
                "displayName": "DESFECHO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "MOTIVO",
                "displayName": "MOTIVO",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "removed": true
              },
              {
                "id": "row_number",
                "displayName": "row_number",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "type": "string",
                "canBeUsedToMatch": true,
                "readOnly": true,
                "removed": true
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheetsTool",
        "typeVersion": 4.5,
        "position": [
          5320,
          560
        ],
        "id": "87c5af95-0f85-4910-9d97-4a2092902cd9",
        "name": "cancelar_agendamentos",
        "credentials": {
          "googleApi": {
            "id": "bxp0F5u0sPfGs6wB",
            "name": "Google Sheets account - Service Account"
          }
        }
      },
      {
        "parameters": {
          "name": "getWeekDay",
          "description": "Use essa tool para consultar o dia da semana.\nForneça como paramentro uma data no formato dd/mm/yyyy",
          "jsCode": "const [day, month, year] = query.split('/').map(Number);\nconst date = new Date(year, month - 1, day);\nreturn date.toLocaleDateString('pt-BR', { weekday: 'long' });"
        },
        "type": "@n8n/n8n-nodes-langchain.toolCode",
        "typeVersion": 1.1,
        "position": [
          5460,
          560
        ],
        "id": "6a4304b9-b591-4cfa-a14f-0ea1ae06793a",
        "name": "getWeekDay"
      },
      {
        "parameters": {
          "name": "validateDate",
          "description": "Use esta tool para validar se a data e hora escolhidas pelo cliente são válidas.\nParâmetro: data no formato 'DD/MM/YYYY HH:mm'\nRetorna um objeto com 'isValid' (booleano) e 'reason' (string explicativa)",
          "jsCode": "const [day, month, year, hour, minute] = query.split(/[/ :]/).map(Number);\nconst inputDate = new Date(year, month - 1, day, hour || 0, minute || 0);\nconst currentDate = new Date();\n\n// Verifica se a data é válida\nif (isNaN(inputDate.getTime())) {\n  return \"invalid date\";\n}\n\n// Verifica se a data já passou\nif (inputDate < currentDate) {\n  return \"invalid - retroactive date\";\n}\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado)\nconst dayOfWeek = inputDate.getDay();\nconst hours = inputDate.getHours();\n\n// Validação para dias de semana (Segunda a Sexta)\nif (dayOfWeek >= 1 && dayOfWeek <= 5) {\n  if (hours >= 9 && hours < 18) {\n    return \"valid date - inside working hours\";\n  } else {\n    return \"invalid date - outside working hours\";\n  }\n}\n\n// Validação para sábados\nif (dayOfWeek === 6) {\n  if (hours >= 9 && hours < 13) {\n    return \"valid date - inside working hours\";\n  } else {\n    return \"invalid date - outside working hours\";\n  }\n}\n\n// Domingos e outros dias não permitidos\nreturn \"invalid date - sunday\";"
        },
        "type": "@n8n/n8n-nodes-langchain.toolCode",
        "typeVersion": 1.1,
        "position": [
          5580,
          560
        ],
        "id": "6cba27a8-0a27-4830-9732-d55e9bc2eb51",
        "name": "validateDate"
      },
      {
        "parameters": {
          "name": "validateInfos",
          "description": "Use esta tool para validar se todas as informações necessárias para o agendamento foram preenchidas corretamente.\nParâmetro: objeto JSON em formato string com os campos [data, hora, diaSemana, cliente, unidade]\nRetorna uma string:\n- Se estiver tudo preenchido: \"ok - todos os campos presentes\"\n- Se faltar algo: \"faltando - [lista de campos faltantes separada por ;]\"\n\n\n\nEssa função valida se os campos obrigatórios para concluir um agendamento estão preenchidos corretamente. Caso algum campo esteja ausente ou vazio, a função retorna quais campos ainda estão faltando.\nCampos obrigatórios:\n\nParâmetro: data (DIA, formato: YYYY-MM-DD), hora (formato HH:mm), diaSemana (SEG, TER, QUA, etc)\n\nRetorna uma lista de campos faltante\n\n",
          "jsCode": "let data;\ntry {\n  data = JSON.parse(query);\n} catch (e) {\n  return \"invalid input - not a valid JSON\";\n}\n\nconst requiredFields = {\n  data: \"data\",\n  hora: \"hora\",\n  diaSemana: \"diaSemana\",\n  unidade: \"unidade\"\n};\n\nconst missing = [];\n\nfor (const key in requiredFields) {\n  const value = data[key];\n  if (!value || typeof value !== 'string' || value.trim() === '') {\n    missing.push(requiredFields[key]);\n  }\n}\n\nif (missing.length === 0) {\n  return \"ok - todos os campos presentes\";\n} else {\n  return `faltando - ${missing.join(\"; \")}`;\n}"
        },
        "type": "@n8n/n8n-nodes-langchain.toolCode",
        "typeVersion": 1.1,
        "position": [
          5500,
          300
        ],
        "id": "84d9631d-fe38-48cb-b369-c16c6bdbefca",
        "name": "validateInfos"
      },
      {
        "parameters": {
          "jsCode": "const results = [];\n\nfor (const item of $input.all()) {\n  const data = item.json[\"Redis2\"];\n  let array = Array.isArray(data) ? data : JSON.parse(data);\n  const mensagem_completa = array.join(\" \");\n  results.push({ json: { mensagem_completa } });\n}\n\nreturn results;\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          4780,
          160
        ],
        "id": "61a2894b-41e5-4d88-9daf-45e94df603fc",
        "name": "Code"
      },
      {
        "parameters": {
          "content": "## Atendente Vaal",
          "height": 640,
          "width": 1020,
          "color": 4
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          4680,
          80
        ],
        "typeVersion": 1,
        "id": "128be403-d697-4b2a-83a1-62e0092d8597",
        "name": "Sticky Note4",
        "disabled": true
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "6874b729-a2ba-4596-8011-62440f186a59",
        "name": "OpenAI3",
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "typeVersion": 1,
        "position": [
          5700,
          400
        ],
        "credentials": {
          "openAiApi": {
            "id": "d0EynPkHQLqSswaA",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "amount": 3
        },
        "id": "77c36d30-9b09-4c75-a577-7bca8d8c4d72",
        "name": "1,2s1",
        "type": "n8n-nodes-base.wait",
        "typeVersion": 1.1,
        "position": [
          6640,
          320
        ],
        "webhookId": "2cc53c9a-b7bd-4844-a9c1-76dc1365a0a9"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=message to be splitted: {{ $json.output }}{{ $('vaal-agente-principal').item.json.output }}",
          "hasOutputParser": true,
          "messages": {
            "messageValues": [
              {
                "message": "=Por favor, gere a saída no seguinte formato JSON:\n\n```json\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n```\n\nAs mensagens devem ser divididas de forma natural e legível, considerando que estamos nos comunicando com um humano.\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo colchetes, aspas e a formatação do texto.\n\nRegras de Formatação:\n  Negrito: Use *palavra* em vez de **palavra**.\n  Tachado: Para indicar texto excluído ou alterado.\n  Itálico: Utilize apenas em casos extremamente raros.\n  link: Sempre usar essa formatação para todos os links.\n\nRegras para separação das mensagens:\nMensagem de introdução: Deve ser uma mensagem separada.\nDetalhes do agendamento: Devem ser mantidos juntos em uma única mensagem, usando \\n para quebras de linha.\nMensagem final de suporte: Deve ser separada.\n\nExemplo de saída esperada:\n```json\n{\n  \"messages\": [\n    \"João, eu verifiquei as informações e você já tem um agendamento confirmado para a avaliação do seu veículo.\",\n    \"*Aqui estão os detalhes:*\\n\\n📅 *Data:* 03/03/2025\\n⏰ *Hora:* 09:00\\n📍 *Unidade:* São Paulo (Santana)\\n🚗 *Veículo:* Cobalt\",\n    \"Se precisar de mais alguma coisa ou desejar alterar algum detalhe, é só me avisar! 😊\"\n  ]\n}\n```"
              }
            ]
          }
        },
        "id": "0b949ed2-48fe-4031-8a66-4486f0fff8b4",
        "name": "Parser  Chain",
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "typeVersion": 1.4,
        "position": [
          5700,
          220
        ]
      },
      {
        "parameters": {
          "operation": "delete",
          "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer"
        },
        "id": "f9109169-bc7b-49ea-a81b-77ff94799835",
        "name": "Delete Memory",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [
          6440,
          160
        ],
        "credentials": {
          "redis": {
            "id": "TaZC13ehzqYrWltc",
            "name": "Redis account"
          }
        }
      },
      {
        "parameters": {
          "schemaType": "manual",
          "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
        },
        "id": "e96e8af4-6a6b-4cef-80b9-f5a548e0d6da",
        "name": "OutputParser",
        "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
        "typeVersion": 1.2,
        "position": [
          5860,
          400
        ]
      },
      {
        "parameters": {
          "fieldToSplitOut": "output.messages",
          "options": {
            "destinationFieldName": "output"
          }
        },
        "id": "b1acc085-598a-4d40-b160-bb98dbeb6adb",
        "name": "Segmento de Msgs",
        "type": "n8n-nodes-base.splitOut",
        "typeVersion": 1,
        "position": [
          6020,
          220
        ]
      },
      {
        "parameters": {
          "content": "## Resposta humanizada",
          "height": 460,
          "width": 1180,
          "color": 5
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          5660,
          80
        ],
        "typeVersion": 1,
        "id": "b4a1fe7f-205b-4c44-af85-84204ca285fa",
        "name": "Sticky Note2"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "={{ $('Code').item.json.mensagem_completa }}",
          "options": {
            "systemMessage": "=<instrucoes>\nNome do cliente é {{ $('payload_handler').item.json.contact.firstName }}\nHoje é dia {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n\n- Toda avaliação é feita **exclusivamente** em uma das unidades da Vaapty.\n- Se o cliente sugerir fazer a avaliação em outro endereço, como na própria casa ou local alternativo, a VAAL deve responder gentilmente explicando que **não oferecemos atendimento externo**, apenas presencial nas lojas.\n- Mesmo que o cliente insista ou diga que o carro está parado, a VAAL deve orientar que o ideal é providenciar guincho ou tentar uma forma de levar até uma das unidades e caso questionado, a Vaapty não arca com os custos do guincho.\n\n- SUA OBRIGAÇÃO MAIOR É SEMPRE BUSCAR INFORMAÇÕES DA VAAPTY OU SOBRE SEU PROCESSO NA TOOL [get_vaapty_info] SEMPRE QUE FOR QUESTIONA OU SOLICITADA EXPLICAÇÃO DO PROCESSO OU DÚVIDAS.\n\n- **OBRIGATORIAMENTE** DEVE IR ENVIANDO AS INFORMAÇÕES DO AGENDAMENTO PARA A TOOL [agenda_sheet_tool] A MEDIDA QUE O CLIENTE FOR INFORMANDO, PARA EVITAR SALVAR TD NO FINAL.\n\n- *SEMPRE* QUE FOR UM NOVO AGENDAMENTO PARA O MESMO CLIENTE, CONSIDERE A NOVA DATA QUE ELE ESCOLHER COM BASE NA DATA ATUAL E NÃO NA DO AGENDAMENTO OU CONVERSA ANTERIOR.\n\nNUNCA DEDUZA NENHUMA INFORMAÇÃO DE DIA, HORA OU DIA DA SEMANA, SEMPRE ESPERE O CLIENTE DEFINIR E NÃO USE O DIA DE HOJE COMO DATA PARA O AGENDAMENTO A NÃO SER QUE O CLIENTE ESCOLHA.\n\nSEMPRE QUE FOR TRABALHAR COM DATAS USE OBRIGATORIAMENTE a tool [validate_date] para verificar se é uma data válida e para consultar o dia da semana use a tool [getWeekDay] e sempre usar padrão pt-BR e America/Sao_Paulo\n\nSEMPRE USE A TOOL [validate_date] combinada com a tool [getWeekDay] para sempre explicar para o cliente(caso data inválida) o porque a data é inválida, considerando a regra abaixo:\n\n - CASO A DATA ESCOLHIDA SEJA DIA DA SEMANA DE SEGUNDA A SEXTA FEIRA, SÓ PERMITA AGENDAMENTOS ENTRE 09:00 DA MANHÃ ATÉ AS 18:00 DA TARDE.\n\n - CASO A DATA ESCOLHIDA SEJA SÁBADO, SÓ PERMITA AGENDAMENTOS ENTRE 09:00 DA MANHÃ ATÉ AS 13:00 DA TARDE.\n\n - NUNCA AGENDE PARA DOMINGOS.\n\n<validacao_e_formatacao>\n1 **Hora**: Sempre no formato `HH:mm` (24 horas).  \n   - Exemplos:  \n     - \"11h\" → \"11:00\"  \n     - \"3 PM\" → \"15:00\"  \n     - \"9:30 AM\" → \"09:30\"  \n\n2 **Unidade**: Sempre no formato `\"Cidade (Bairro)\"`.  \n\t- Se for **\"Guarulhos Vila Galvão\"**, salve como `\"Guarulhos (Vila Galvão)\"`.  \n\t- Se for **\"São Paulo Santana\"**, salve como `\"São Paulo (Santana)\"`.  \n\n3 **Dia da Semana**: Sempre no formato abreviado.  \n\t- \"Segunda-feira\" → \"SEG\"\n\t- \"Terça-feira\" → \"TER\"\n\t- \"Quarta-feira\" → \"QUA\"\n\t- \"Quinta-feira\" → \"QUI\"\n\t- \"Sexta-feira\" → \"SEX\"\n\t- \"Sábado\" → \"SAB\"\n\t- \"Domingo\" → \"DOM\"\n</validacao_e_formatacao>\n\n\nSEMPRE QUE O CLIENTE QUISER CONSULTAR AGENDAMENTOS USE a tool [consulta_agendamentos] para retornar as informações.\n\nSEMPRE QUE O CLIENTE QUISER CANCELAR AGENDAMENTOS USE a tool [cancelar_agendamentos] para alterar o status do agendamento para CANCELADO_LEAD.\n\nSEMPRE QUE O CLIENTE TIVER DÚVIDAS OU QUISER INFORMAÇÕES DE COMO A VAAPTY FUNCIONA OU DÚVIDAS FREQUENTES USE OBRIGATORIAMENTE a TOOL [get_vaapty_info].\n\nSEMPRE QUE O CLIENTE QUESTIONAR SOBRE VALORES, CUSTOS, SOBRE DOCUMENTAÇÃO, SEMPRE FALE SOBRE A COMISSÃO DE \"4.2% + custo da perícia cautelar\" QUE ESTÁ DETALHADA NA TOOL [get_vaapty_info]\n\nSOBRE VISTORIA CAUTELAR EXPLIQUE QUE TEM O CUSTO PARA O CLIENTE OU PODE SER BRINDE DEPENDENDO DA NEGOCIAÇÃO, MAS MESMO NÃO SENDO APROVADA A VISTORIA O CLIENTE É QUEM DEVE PAGAR.\n\nLEVANDO EM CONSIDERAÇÃO AS INFORMAÇÕES DA TOOL [get_vaapty_info] leve essa ordem dos processo em consideração \"após aceitar proposta é chamada a cautelar \ne os documentos seram recolhidos para dar início a produção da documentação. Depois que a cautelar é aprovada mandamos os documentos para o cartório para reconhecer firma da documentação. assim que os documentos chegarem até nós e estando tudo finalizado, pagamos os débitos que tiver no carro e depois o pagamento ao cliente. \n\"\n\nCASO O CLIENTE QUESTIONE SOBRE  COMO FUNCIONA SE ELE DESISTIR DA VENDA APÓS A VISTORIA APROVADA, EXPLIQUE QUE CASO ISSO ACONTECER O CLIENTE TERÁ QUE PAGAR O VALOR DA CAUTELAR + UMA MULTA DE 10%.\n\nCASO O CLIENTE QUESTIONE SOBRE QUAIS TIPOS DE CARROS ESTÃO APTOS, EXPLIQUE QUE A VAAPTY ACEITA QUALQUER TIPO DE CARRO, POIS TEMOS TODOS OS TIPOS DE COMPRADORES E QUE INCLUSIVE TBM VENDEMOS MOTOS E DEIXE CLARO QUE VENDEMOS TODO TIPO DE VEÍCULO, VAN, CAMINHÃO, MASTER.\n\nCASO HAJA DÚVIDAS SOBRE O DUT, TRABALHAMOS DE DUAS FORMAS, PROCURAÇÃO OU DUT, DEPENDE DA NEGOCIAÇÃO COM QUEM COMPROU O CARRO.\n\nCASO SEJA DÚVIDAS SOBRE MULTAS APARECEREM DEPOIS DA VENDA, EXPLIQUE QUE EXISTEM DUAS SITUAÇÕES, SE AS MULTAS QUE SURGIREM FOREM DE *ANTES* DA VENDA, AS MULTAS SÃO DE REPONSÁBILIDADE DO ANTIGO PROPIETÁRIO, CASO AS MULTAS SURGIREM *DEPOIS* DA VENDA, DEVEM SER COMUNICADAS A VAAPTY PARA QUE ENTREMOS EM CONTATO COM O NOVO PROPRIETÁRIO.\n</instrucoes>\n\n<objetivo>\nO seu principal objetivo é agendar uma avaliação do carro do cliente. Sua missão é quebrar todas as objeções consultando todas as informações sobre a Vaapty na tool [get_vaapty_info] e garantir que o cliente veja valor no serviço .\n</objetivo>\n\n<persona>\nVocê é a Vaal, a assistente especializada nos processos da Vaapty. Seu papel é guiar os clientes de maneira natural, fornecendo informações precisas e incentivando-os a concluir o agendamento. Seu tom deve ser:\n- Amigável e humanizado, como uma amiga dando uma recomendação personalizada.\n- Profissional, mas sem parecer robótico.\n- Confiante e persuasivo para quebrar objeções.\n- Simples e direto ao ponto, evitando jargões técnicos.\n- Sempre personalize a conversa com base nas informações fornecidas pelo cliente, reforçando confiança no processo.\n- **Se perceber que o cliente está demorando para responder ou demonstrar dificuldade em digitar, ofereça a opção de enviar um áudio.**  \n  - Exemplo: *\"Ah, e pode ficar à vontade! Se for mais fácil, me manda um áudio que eu entendo também. 🎙️😊\"*\n\n- Se o cliente pedir para agendar fora da unidade (como na casa dele), explique com empatia que **todas as avaliações são presenciais e feitas nas lojas da Vaapty**. Sugira que ele providencie um guincho, ou veja com alguém da família para ajudar a levar o carro.\n- **Nunca confirme agendamento fora das lojas.**\n</persona>\n\n<fluxo_de_atendimento>\n1.Abertura e conexão\n- Cumprimente o cliente pelo primeiro nome e estimule sua curiosidade perguntando se ele sabe como a Vaapty funciona.\n- Sempre que necessário explique de forma simples e amigável o processo da Vaapty.\n- Caso detecte insegurança, reforce que o processo é seguro e transparente.\n- **Se quiser, pode me mandar um áudio também! Assim, eu entendo direitinho e fica mais fácil para você. 🎙️😊\"**\n\n2. Validação das informações antes do agendamento\n- SEMPRE que o cliente fornecer uma nova informação (data, hora, unidade ou carro), atualize imediatamente a planilha usando a tool [agenda_sheet_tool]. Nunca aguarde o final da conversa para registrar os dados.\n- Após obter cada nova informação, chame a tool [agenda_sheet_tool] para salvar o dado. evitamos assim perda de informações e garantimos que o agendamento estará sempre atualizado.\n- Se o cliente alterar alguma informação já coletada, atualize imediatamente o registro no com a tool [agenda_sheet_tool] para evitar inconsistências.\"\n- **Se perceber que o cliente está demorando para responder ou se mostrando inseguro para digitar, incentive o uso de áudios:**  \n  - *\"Se for mais fácil, pode me mandar um áudio explicando! Assim, eu já pego todos os detalhes rapidinho. 🚀🎧\"*\n- Quando todos os dados forem coletados, use a tool [validateInfos] para confirmar que todas as informações estão presentes.\n  - Se faltar algum dado, informe ao cliente:  \n    *\"Ótimo! Mas ainda preciso de [dados faltantes] para finalizar seu agendamento. Me passa esses detalhes por favor? 🙏🚗\"*\n  - Quando estiver tudo certo, confirme com o cliente e finalize o agendamento.\n\n3. Negociação e quebra de objeções\n- Se o cliente pronto para agendar, siga normalmente.\n- Se ele tiver dúvidas ou objeções, consulte as informações com a tool [get_vaapty_info] e forneça informações claras e persuasivas.\n- Sempre finalize suas respostas com uma pergunta de conversão, por exemplo:\n\t- \"Podemos finalizar seu agendamento? Assim, você já garante sua avaliação sem compromisso.\"\n\n4. Fechamento\n- Se o horario escolhido pelo cliente, estiver dentro dos horario de atendimento das lojas de acordo com [dados_das_unidades], confirme exatamente como foi solicitado pelo cliente.\n- Se o horário solicitado não estiver dentro dos horarios de atendimento das lojas de acordo com [dados_das_unidades], sugira o mais próximo dia e horarios válidos.\n- Informe que os documentos do carro e o do cliente são obrigatórios e é mt importante caso tenha chave reserva e manual é levar para ajuda na negociação.\n</fluxo_de_atendimento>\n\n\n\n<dados_das_unidades>\n📌 Guarulhos (Vila Galvão)\n📍 Endereço: Av. Dr. Timóteo Penteado, 4043 - Vila Galvão, Guarulhos - SP, 07061-002\n📞 Telefone: (11) 99622-0483\n🌍 Site: vaaptyguarulhosvilagalvao.com\n📷 Instagram: @vaaptyguarulhos.vilagalvao\n📘 Facebook: @vaaptyguarulhosvilagalvao\nlink de avaliações no google: https://goo.su/U05DpZb\nhorários de atendimento: de segunda a Sexta: 09:00 até 18:00, sábados: de 09:00 até 13h00 e domingos: fechados\n</dados_das_unidades>\n\n<regras para agendamento>\n- O agendamento pode ser feito em qualquer horário dentro do intervalo de atendimento, sem restrição a horários redondos.\n- Se o horário solicitado pelo cliente estiver dentro do horário de atendimento, CONFIRME SEM ALTERAÇÕES.\n- NUNCA ajuste automaticamente ou obrigue a escolha do cliente ser para horários redondos.\n- **Antes de confirmar qualquer horário, valide se ele está dentro do horário permitido para aquele dia da semana, conforme os horários de atendimento da unidade escolhida.**\n</regras para agendamento>\n\n<formatacao_de_mensagens>\nSempre que enviar mensagens ao cliente, utilize emojis Unicode para tornar a comunicação mais clara e visual. Diretrizes formato de mensagens:\n\nEndereços → 📍\nTelefones → 📞\nSites → 🌍\nInstagram → 📷\nFacebook → 📘\nHorários de atendimento → ⏰\nDatas e calendário → 📅\nCarros e veículos → 🚗\nDúvidas e informações → ❓\nConfirmações → ✅\nAlertas ou restrições → ⚠️\n\n**Exemplo de mensagem formatada corretamente:**  \n📌 **Endereço da unidade:** 📍 Av. Dr. Timóteo Penteado, 4043 - Vila Galvão, Guarulhos - SP.  \n📞 **Contato:** (11) 99622-0483  \n🌍 **Site:** [vaaptyguarulhosvilagalvao.com](https://vaaptyguarulhosvilagalvao.com)  \n📅 **Data do agendamento:** Segunda-feira, 11 de Março de 2025.  \n⏰ **Horário:** 10:30 da manhã.  \n🚗 **Veículo:** Honda Civic 2019 - Prata  \n✅ **Status:** Agendamento confirmado.  \n⚠️ **Importante:** Não se esqueça de levar os documentos do carro e chave reserva.  \n\nSempre use esse padrão para tornar as mensagens mais organizadas e profissionais.\n</formatacao_de_mensagens>\n\n<regras_obrigatorias>\n1. Antes de responder perguntas sobre como a Vaapty funciona ou fornecer qualquer informação ao usuário, **você deve obrigatoriamente consultar os dados no RAG**. Use a tool [get_vaapty_info] para recuperar informações caso o cliente manifeste interesse em entender sobre a Vaapty.  \n2. Se a consulta ao RAG não retornar informações úteis, peça mais detalhes ao usuário antes de responder.  \n3. **Nunca faça suposições ou gere respostas sem validar primeiro com a ferramenta.**  \n4. Sempre adapte a resposta com base nas informações recuperadas, garantindo que o cliente perceba o valor do serviço.  \n5. Consulte o dia da semana para a data solicitada, valide se está dentro dos dias e horarios de funcionamento das lojas.\n6. SEMPRE antes de confirmar o agendamento para o cliente, use a tool [validateInfos] passando os dados atuais do agendamento.  \n   - Se a tool retornar \"ok - todos os campos presentes\", prossiga com a confirmação do agendamento.  \n   - Se retornar \"faltando - [campos]\", informe o cliente que ainda faltam esses dados e solicite que ele os envie para concluir o agendamento.\n</regras_obrigatorias>"
          }
        },
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 1.9,
        "position": [
          5020,
          120
        ],
        "id": "8b1969ed-45c2-4632-b324-2d3da269ed2d",
        "name": "vaal-agente-principal"
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "1771f030-2e2c-49aa-9183-2ce785b0a74e",
        "name": "Loop Over Items",
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 3,
        "position": [
          6220,
          220
        ]
      },
      {
        "parameters": {
          "resource": "messages-api",
          "instanceName": "vaal_1",
          "remoteJid": "={{ $('payload_handler').item.json.contact.phone }}",
          "messageText": "={{ $json.output }}",
          "options_message": {
            "delay": 2000
          }
        },
        "type": "n8n-nodes-evolution-api.evolutionApi",
        "typeVersion": 1,
        "position": [
          6440,
          320
        ],
        "id": "57db3bb0-f406-41bd-a4df-dc7ed8a15bc8",
        "name": "Evolution API",
        "credentials": {
          "evolutionApi": {
            "id": "yF1mcU14BypsoPiB",
            "name": "Evolution account"
          }
        }
      },
      {
        "parameters": {
          "name": "agenda_sheet_tool",
          "description": "Chame essa tool para realizando o agendamento, sempre usando padrão pt-BR e America/Sao_Paulo",
          "workflowId": {
            "__rl": true,
            "value": "ZpOvo8AmQzyVONiS",
            "mode": "list",
            "cachedResultName": "Vaal-AI | Agenda Sheet"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {
              "telefone": "={{ $('payload_handler').item.json.contact.phone }}",
              "dia": "={{ $fromAI('dia', `dia do agendamento | format('dd/MM/yyyy')`, 'string') }}",
              "hora": "={{ $fromAI('hora', `hora do agendamento | format('HH:mm') `, 'string') }}",
              "dia_semana": "={{ $fromAI('dia_semana', `dia da semana do agendamento | format('EEE') `, 'string') }}",
              "cliente": "={{ $('payload_handler').item.json.contact.fullName }}",
              "carro": "={{ $fromAI('carro', `carro do cliente que será avaliado`, 'string') || \"\" }}",
              "unidade": "={{ $fromAI('unidade', `unidade escolhida pelo  cliente para o agendamento`, 'string') || \"\" }}"
            },
            "matchingColumns": [],
            "schema": [
              {
                "id": "telefone",
                "displayName": "telefone",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "dia",
                "displayName": "dia",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "hora",
                "displayName": "hora",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "dia_semana",
                "displayName": "dia_semana",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "cliente",
                "displayName": "cliente",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "carro",
                "displayName": "carro",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              },
              {
                "id": "unidade",
                "displayName": "unidade",
                "required": false,
                "defaultMatch": false,
                "display": true,
                "canBeUsedToMatch": true,
                "type": "string"
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          }
        },
        "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
        "typeVersion": 2.1,
        "position": [
          5080,
          360
        ],
        "id": "70aa594e-b542-4ffe-ba39-af6b622494ee",
        "name": "Call n8n Workflow"
      },
      {
        "parameters": {
          "httpMethod": "POST",
          "path": "vaal-ai-sdr",
          "options": {}
        },
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 2,
        "position": [
          120,
          160
        ],
        "id": "b1abbfcc-58c7-4657-91fe-102659f9711c",
        "name": "Webhook",
        "webhookId": "17e1268a-2679-4bd2-a362-377c2b3bcab2"
      },
      {
        "parameters": {
          "resource": "chat-api",
          "operation": "get-media-base64",
          "instanceName": "vaal_1",
          "messageId": "={{ $('Webhook').item.json.body.body.data.key.id }}",
          "convertToMp4": true
        },
        "type": "n8n-nodes-evolution-api.evolutionApi",
        "typeVersion": 1,
        "position": [
          2780,
          360
        ],
        "id": "028598ff-540d-4858-8e20-6bdeeb1a643b",
        "name": "Evolution API2",
        "credentials": {
          "evolutionApi": {
            "id": "yF1mcU14BypsoPiB",
            "name": "Evolution account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
                "name": "base64",
                "value": "={{ $json.data.base64 }}",
                "type": "string"
              }
            ]
          },
          "includeOtherFields": "=",
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          2940,
          360
        ],
        "id": "ba85e3b7-e1c9-4b9a-9f13-f3dc8f6c4f08",
        "name": "Adapter"
      }
    ],
    "connections": {
      "Date & Time1": {
        "main": [
          [
            {
              "node": "payload_handler",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "google-sheets-discart-lead": {
        "main": [
          [
            {
              "node": "supabase-atualiza-agendamento1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "block-lead": {
        "main": [
          [
            {
              "node": "google-sheets-discart-lead",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "switch-msg-from": {
        "main": [
          [
            {
              "node": "block-lead",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "verifica-intervencao-humana",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Não faz nada - Workflow",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "payload_handler": {
        "main": [
          [
            {
              "node": "switch-msg-from",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "supabase-create-lead": {
        "main": [
          [
            {
              "node": "google-sheets-create-update",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "if-existing-lead": {
        "main": [
          [
            {
              "node": "supabase-update-last-msg",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "supabase-create-lead",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "supabase-get-lead": {
        "main": [
          [
            {
              "node": "if-existing-lead",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "switch-block-ai": {
        "main": [
          [
            {
              "node": "supabase-get-lead",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Não faz nada - AI Pausada",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "google-sheets-create-update": {
        "main": [
          [
            {
              "node": "supabase-update-last-msg",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "verifica-intervencao-humana": {
        "main": [
          [
            {
              "node": "switch-block-ai",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Convert to File": {
        "main": [
          [
            {
              "node": "openai-transcribe-audio",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "message-type": {
        "main": [
          [
            {
              "node": "Text Memory",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Evolution API2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "supabase-update-last-msg": {
        "main": [
          [
            {
              "node": "message-type",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Text Memory": {
        "main": [
          [
            {
              "node": "Get Memory 1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Audio Memory": {
        "main": [
          [
            {
              "node": "Get Memory 1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Memory 2": {
        "main": [
          [
            {
              "node": "Edit Redis Memory",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Memory 1": {
        "main": [
          [
            {
              "node": "Wait 5 seg",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Edit Redis Memory": {
        "main": [
          [
            {
              "node": "Compara Get Memory",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait 5 seg": {
        "main": [
          [
            {
              "node": "Get Memory 2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "openai-transcribe-audio": {
        "main": [
          [
            {
              "node": "Audio Memory",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Schedule Trigger": {
        "main": [
          [
            {
              "node": "postgres-get-lead-follow-up",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "postgres-get-lead-follow-up": {
        "main": [
          [
            {
              "node": "Loop Over Items1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "postgres-update-lead-follow-up": {
        "main": [
          [
            {
              "node": "Loop Over Items1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Postgres Chat Memory FollowUP": {
        "ai_memory": [
          [
            {
              "node": "vaal-agente-follow-up",
              "type": "ai_memory",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI Chat Model FollowUP": {
        "ai_languageModel": [
          [
            {
              "node": "vaal-agente-follow-up",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "vaal-agente-follow-up": {
        "main": [
          [
            {
              "node": "Evolution API1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Call n8n Workflow - FollowUp": {
        "ai_tool": [
          [
            {
              "node": "vaal-agente-follow-up",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "If": {
        "main": [
          [
            {
              "node": "postgres-update-status-lead-follow",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Edit Fields",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "postgres-update-status-lead-follow": {
        "main": [
          [
            {
              "node": "google-sheets-update-status-lead",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "google-sheets-update-status-lead": {
        "main": [
          [
            {
              "node": "Loop Over Items1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Items1": {
        "main": [
          [
            {
              "node": "Não faz nada - FIM",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "If",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Edit Fields": {
        "main": [
          [
            {
              "node": "vaal-agente-follow-up",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Evolution API1": {
        "main": [
          [
            {
              "node": "postgres-update-lead-follow-up",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Embeddings OpenAI1": {
        "ai_embedding": [
          [
            {
              "node": "Supabase Vector Store",
              "type": "ai_embedding",
              "index": 0
            }
          ]
        ]
      },
      "Supabase Vector Store": {
        "ai_tool": [
          [
            {
              "node": "vaal-agente-follow-up",
              "type": "ai_tool",
              "index": 0
            },
            {
              "node": "vaal-agente-principal",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI Chat Model": {
        "ai_languageModel": [
          [
            {
              "node": "vaal-agente-principal",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Postgres Chat Memory": {
        "ai_memory": [
          [
            {
              "node": "vaal-agente-principal",
              "type": "ai_memory",
              "index": 0
            }
          ]
        ]
      },
      "consulta_agendamentos": {
        "ai_tool": [
          [
            {
              "node": "vaal-agente-principal",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "cancelar_agendamentos": {
        "ai_tool": [
          [
            {
              "node": "vaal-agente-principal",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "getWeekDay": {
        "ai_tool": [
          [
            {
              "node": "vaal-agente-principal",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "validateDate": {
        "ai_tool": [
          [
            {
              "node": "vaal-agente-principal",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "validateInfos": {
        "ai_tool": [
          [
            {
              "node": "vaal-agente-principal",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Code": {
        "main": [
          [
            {
              "node": "vaal-agente-principal",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI3": {
        "ai_languageModel": [
          [
            {
              "node": "Parser  Chain",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "1,2s1": {
        "main": [
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Parser  Chain": {
        "main": [
          [
            {
              "node": "Segmento de Msgs",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OutputParser": {
        "ai_outputParser": [
          [
            {
              "node": "Parser  Chain",
              "type": "ai_outputParser",
              "index": 0
            }
          ]
        ]
      },
      "Segmento de Msgs": {
        "main": [
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "vaal-agente-principal": {
        "main": [
          [
            {
              "node": "Parser  Chain",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Items": {
        "main": [
          [
            {
              "node": "Delete Memory",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Evolution API",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Evolution API": {
        "main": [
          [
            {
              "node": "1,2s1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Call n8n Workflow": {
        "ai_tool": [
          [
            {
              "node": "vaal-agente-principal",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Compara Get Memory": {
        "main": [
          [
            {
              "node": "Code",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook": {
        "main": [
          [
            {
              "node": "Date & Time1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Evolution API2": {
        "main": [
          [
            {
              "node": "Adapter",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Adapter": {
        "main": [
          [
            {
              "node": "Convert to File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": {
      "node:Schedule Trigger": {
        "recurrenceRules": [
          0
        ]
      }
    },
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {},
    "versionId": "ad47b136-3fb7-4e24-b311-0e87e6389f1a",
    "triggerCount": 1,
    "tags": [
      {
        "createdAt": "2025-05-19T13:21:56.336Z",
        "updatedAt": "2025-05-19T13:21:56.336Z",
        "id": "GjahXidmM3aj0M5l",
        "name": "vaal-ai"
      }
    ]
  },
  "createdAt": "2025-05-19T14:22:49.081Z",
  "updatedAt": "2025-06-27T14:24:48.418Z",
  "id": "1fXOw4qNloChqCk6",
  "name": "Vaal-AI | SDR",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "content": "## Pausa para Atendimento Humano",
        "height": 440,
        "width": 1340,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        80
      ],
      "typeVersion": 1,
      "id": "370d1443-a188-4306-9b67-2129c8e78e7c",
      "name": "Sticky Note29"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now.setLocale('pt-BR').setZone(\"America/Sao_Paulo\") }}",
        "format": "custom",
        "customFormat": "EEEE, dd 'de' MMMM 'de' yyyy 'às' HH:mm",
        "outputFieldName": "=formattedDate",
        "options": {
          "includeInputFields": false,
          "timezone": true
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        300,
        160
      ],
      "id": "78a53505-1d28-4e34-b0b8-8a25236a5259",
      "name": "Date & Time1",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $json.contact.phone }}_block",
        "options": {}
      },
      "id": "f6378636-c057-4835-8937-96e9d4893b0d",
      "name": "verifica-intervencao-humana",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1240,
        340
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        880,
        360
      ],
      "id": "2f62c8b5-4754-44fa-b7d4-c0d1802174d4",
      "name": "Não faz nada - Workflow"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "TELEFONE": "={{ $('payload_handler').item.json.contact.phone }}",
            "STATUS": "QUALIFICACAO-LOJA"
          },
          "matchingColumns": [
            "TELEFONE"
          ],
          "schema": [
            {
              "id": "DATA_PRIMEIRO_CONTATO",
              "displayName": "DATA_PRIMEIRO_CONTATO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA_PRIMEIRO_CONTATO",
              "displayName": "HORA_PRIMEIRO_CONTATO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA",
              "displayName": "DIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA",
              "displayName": "HORA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA_SEMANA",
              "displayName": "DIA_SEMANA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRE_VENDA",
              "displayName": "PRE_VENDA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CLIENTE",
              "displayName": "CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CARRO",
              "displayName": "CARRO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "TELEFONE",
              "displayName": "TELEFONE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ORIGEM",
              "displayName": "ORIGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "OBSERVACAO",
              "displayName": "OBSERVACAO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "UNIDADE",
              "displayName": "UNIDADE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "VEIO",
              "displayName": "VEIO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DESFECHO",
              "displayName": "DESFECHO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "MOTIVO",
              "displayName": "MOTIVO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1060,
        120
      ],
      "id": "f3bd7c3b-ef37-49d5-8794-73426c5a389f",
      "name": "google-sheets-discart-lead",
      "credentials": {
        "googleApi": {
          "id": "bxp0F5u0sPfGs6wB",
          "name": "Google Sheets account - Service Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "vaapty_leads",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('payload_handler').item.json.contact.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "QUALIFICACAO-LOJA"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1240,
        120
      ],
      "id": "b18b8ef2-9d1e-4a4b-ba79-81dc2c88cf60",
      "name": "supabase-atualiza-agendamento1",
      "credentials": {
        "supabaseApi": {
          "id": "Aypne3pGbGP17JRv",
          "name": "Supabase account Vaapty"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_block",
        "value": "true",
        "keyType": "string"
      },
      "id": "020ba815-6aa2-41bf-a3b5-573b67699df9",
      "name": "block-lead",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        880,
        120
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4bee2c7b-e8fa-420c-9d5e-6140002eca91",
                    "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                    "rightValue": "eventN8n",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Me"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                    "rightValue": "fromClient",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    },
                    "id": "8d7d84f4-ab9f-4e1f-9b9a-e83cc4e9bc03"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "User"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "40fbb4c3-f89c-4eab-8cbd-5ad683f756c6",
                    "leftValue": "={{ $('payload_handler').item.json.message.isGroup }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Group"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        660,
        160
      ],
      "id": "f7b05ede-5ff7-4dba-8a72-b5f89b4e8ef8",
      "name": "switch-msg-from"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0d409c70-6488-4f4f-8681-5bb552563957",
              "name": "evolution.serverUrl",
              "value": "={{ $('Webhook').item.json.body.body.server_url }}",
              "type": "string"
            },
            {
              "id": "4ae67c6f-3fba-45c0-ade2-1fa3731b93e8",
              "name": "evolution.phone",
              "value": "={{ $('Webhook').item.json.body.body.sender.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "6e253dad-0fbf-4a74-b6a4-618c79bb3460",
              "name": "evolution.apiKey",
              "value": "={{ $('Webhook').item.json.body.body.apikey }}",
              "type": "string"
            },
            {
              "id": "5e3e579f-f9dd-4fb0-9c4b-d2c56b151c55",
              "name": "contact.phone",
              "value": "={{ $('Webhook').item.json.body.body.data.key.remoteJid.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "877887ea-c7df-4c1e-b6a9-4ec573256127",
              "name": "contact.firstName",
              "value": "={{ $('Webhook').item.json.body.body.data.pushName.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "ecc3073f-8c25-41bb-abfe-402c385c6031",
              "name": "contact.fullName",
              "value": "={{ $('Webhook').item.json.body.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "d4768288-0024-47c6-b9c6-3dcc9e18c2e0",
              "name": "message.type",
              "value": "={{ !!$('Webhook').item.json.body.body.data.message.conversation && 'text' || \n   !!$('Webhook').item.json.body.body.data.message.audioMessage && 'audio'\n}}",
              "type": "string"
            },
            {
              "id": "20a86b71-c77f-4b4e-9db9-b9964276e67f",
              "name": "message.text.conversation",
              "value": "={{ $('Webhook').item.json.body.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
              "name": "message.audio.base64",
              "value": "={{ $('Webhook').item.json.body.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "3c159587-cd22-45df-aac7-82add1c9992e",
              "name": "message.status",
              "value": "={{ $('Webhook').item.json.body.body.data.status }}",
              "type": "string"
            },
            {
              "id": "cc95a725-d953-433d-a8ee-aa903f515ca5",
              "name": "message.timestamp",
              "value": "={{ DateTime.fromMillis($('Webhook').item.json.body.body.data.messageTimestamp) }}",
              "type": "string"
            },
            {
              "id": "d65f9d80-5f16-4c29-965b-fc8832fe13eb",
              "name": "message.fromMe",
              "value": "={{ $('Webhook').item.json.body.body.data.key.fromMe }}",
              "type": "boolean"
            },
            {
              "id": "44cce600-ebb8-4242-8008-5da0951d16c5",
              "name": "message.isGroup",
              "value": "={{ $('Webhook').item.json.body.body.event != 'messages.upsert' }}",
              "type": "boolean"
            },
            {
              "id": "c3d798ea-378e-4f39-a764-82ff9733e36a",
              "name": "message.id",
              "value": "={{ $('Webhook').item.json.body.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        480,
        160
      ],
      "id": "1669759c-a431-4306-802a-1807703ef596",
      "name": "payload_handler"
    },
    {
      "parameters": {
        "content": "## Registro de Cliente no Supabase",
        "height": 440,
        "width": 1220,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1460,
        80
      ],
      "typeVersion": 1,
      "id": "8fec7df8-0a90-4f7c-be34-f1654d778e2f",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "vaapty_leads",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('payload_handler').item.json.contact.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_msg",
              "fieldValue": "={{ $now.minus() }}"
            },
            {
              "fieldId": "follow_up_times",
              "fieldValue": "0"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2520,
        140
      ],
      "id": "fd5ec98c-650d-4895-8d67-99d608d44831",
      "name": "supabase-update-last-msg",
      "credentials": {
        "supabaseApi": {
          "id": "Aypne3pGbGP17JRv",
          "name": "Supabase account Vaapty"
        }
      }
    },
    {
      "parameters": {
        "tableId": "vaapty_leads",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "id",
              "fieldValue": "={{ $('payload_handler').item.json.contact.phone.toNumber() }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $('payload_handler').item.json.contact.fullName }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2100,
        360
      ],
      "id": "0883824f-068e-4fde-8bfa-754f02376cfe",
      "name": "supabase-create-lead",
      "credentials": {
        "supabaseApi": {
          "id": "Aypne3pGbGP17JRv",
          "name": "Supabase account Vaapty"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $('supabase-get-lead').item.json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1900,
        160
      ],
      "id": "50a1006d-cc33-49ea-99db-0b6b2bc3d964",
      "name": "if-existing-lead"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "vaapty_leads",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $('payload_handler').item.json.contact.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1720,
        160
      ],
      "id": "a0466385-f8ab-4318-82b9-2a23f11bc5a6",
      "name": "supabase-get-lead",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "Aypne3pGbGP17JRv",
          "name": "Supabase account Vaapty"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vaal Ativa"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vaal Desativada"
            }
          ]
        },
        "options": {}
      },
      "id": "a49c08cc-57f6-48db-b801-99fdd5b2d307",
      "name": "switch-block-ai",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1500,
        340
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1720,
        360
      ],
      "id": "9512a0ba-1efb-4f42-a77e-26d5c004d6da",
      "name": "Não faz nada - AI Pausada"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "TELEFONE": "={{ $('payload_handler').item.json.contact.phone }}",
            "CLIENTE": "={{ $('payload_handler').item.json.contact.fullName }}",
            "PRE_VENDA": "VAAL - IA",
            "STATUS": "QUALIFICACAO",
            "DATA_PRIMEIRO_CONTATO": "={{ $now.setZone('America/Sao_Paulo').format('dd/MM/yyyy') }}",
            "HORA_PRIMEIRO_CONTATO": "={{ $now.setZone('America/Sao_Paulo').format('HH:mm') }}"
          },
          "matchingColumns": [
            "TELEFONE"
          ],
          "schema": [
            {
              "id": "DATA_PRIMEIRO_CONTATO",
              "displayName": "DATA_PRIMEIRO_CONTATO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "HORA_PRIMEIRO_CONTATO",
              "displayName": "HORA_PRIMEIRO_CONTATO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "DIA",
              "displayName": "DIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA",
              "displayName": "HORA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA_SEMANA",
              "displayName": "DIA_SEMANA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRE_VENDA",
              "displayName": "PRE_VENDA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CLIENTE",
              "displayName": "CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CARRO",
              "displayName": "CARRO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "TELEFONE",
              "displayName": "TELEFONE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ORIGEM",
              "displayName": "ORIGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "OBSERVACAO",
              "displayName": "OBSERVACAO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "UNIDADE",
              "displayName": "UNIDADE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "VEIO",
              "displayName": "VEIO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DESFECHO",
              "displayName": "DESFECHO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "MOTIVO",
              "displayName": "MOTIVO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2320,
        360
      ],
      "id": "0095d801-7bd3-4e4b-8f3a-9490ce54033b",
      "name": "google-sheets-create-update",
      "credentials": {
        "googleApi": {
          "id": "bxp0F5u0sPfGs6wB",
          "name": "Google Sheets account - Service Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "=file_{{ $now.format('yyyyMMdd_HHmmss') }}.ogg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        3100,
        360
      ],
      "id": "9b122948-ec5a-40e5-afe3-2ff0038aa228",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "content": "## Classifica Mensagens",
        "height": 440,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2720,
        80
      ],
      "typeVersion": 1,
      "id": "0faea11f-0a81-4598-92d4-58c090f7c92d",
      "name": "Sticky Note",
      "disabled": true
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "pt"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        3260,
        360
      ],
      "id": "0add0e49-2945-4d3f-b0d4-a9360d835a6a",
      "name": "openai-transcribe-audio",
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5babf18b-3925-426c-b907-e8f3e7936ffc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d8c1d47a-0014-4d4c-8c43-c68df3a99df2",
                    "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2780,
        140
      ],
      "id": "8055dbc4-c31e-445e-a412-aa0874d5a080",
      "name": "message-type"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer",
        "messageData": "={{ $('payload_handler').item.json.message.text.conversation }}",
        "tail": true
      },
      "id": "3ff64653-8ce4-4124-ba2c-1d11d4fa3173",
      "name": "Text Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3520,
        160
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer",
        "messageData": "={{ $('openai-transcribe-audio').item.json.text }}",
        "tail": true
      },
      "id": "8652613f-2088-41f9-b2c7-1e8a1ea6b4fa",
      "name": "Audio Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3520,
        360
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer",
        "options": {}
      },
      "id": "d1a20908-de5a-4139-aca8-56a585ff6da5",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4100,
        260
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Mensagem Picotada",
        "height": 440,
        "width": 1180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3460,
        80
      ],
      "typeVersion": 1,
      "id": "8f171bde-ed6d-4fbf-864b-3b2c323ce0df",
      "name": "Sticky Note24",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer",
        "options": {}
      },
      "id": "5a6bd64c-9167-4dc3-94c9-9a27fe5cf659",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3760,
        260
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $('Edit Redis Memory').item.json.Redis2 }}",
              "rightValue": "={{ $('Edit Redis Memory').item.json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "95d5bb4b-c5be-4ef5-8d14-dd739e4e927c",
      "name": "Compara Get Memory",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4440,
        260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $('Get Memory 2').item.json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8d75b75a-7ef1-419d-a06a-726616c0e6a0",
      "name": "Edit Redis Memory",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4260,
        260
      ]
    },
    {
      "parameters": {},
      "id": "1c65c248-0cd4-4952-a80b-5ba6e2777f89",
      "name": "Wait 5 seg",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3940,
        260
      ],
      "webhookId": "52441967-5a76-464a-98fd-c5f7e5d90e8a"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 6
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        3040,
        860
      ],
      "id": "78d19723-a4cc-4986-87f7-f458c7c26509",
      "name": "Schedule Trigger",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT *\nFROM vaapty_leads\nWHERE \n    status = 'QUALIFICACAO'\nAND (\n    (follow_up_times = 0 AND last_msg <= NOW() - INTERVAL '24 hours' AND last_msg > NOW() - INTERVAL '72 hours')\n    OR\n    (follow_up_times = 1 AND last_msg <= NOW() - INTERVAL '72 hours')\n    OR\n    (follow_up_times = 2 AND last_msg <= NOW() - INTERVAL '96 hours')\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3220,
        860
      ],
      "id": "38a19d38-5534-4f58-ba6a-9bff33733438",
      "name": "postgres-get-lead-follow-up",
      "credentials": {
        "postgres": {
          "id": "5ZF1HPtlbBIacazg",
          "name": "Postgres account Vaapty"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3660,
        660
      ],
      "id": "6f0a432a-d862-4ddb-a1a5-94b91bc29095",
      "name": "Não faz nada - FIM"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "vaapty_leads",
          "mode": "list",
          "cachedResultName": "vaapty_leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Loop Over Items1').item.json.id }}",
            "follow_up_times": "={{ $('Loop Over Items1').item.json.follow_up_times.toNumber() + 1 }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_msg",
              "displayName": "last_msg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "follow_up_times",
              "displayName": "follow_up_times",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3140,
        1100
      ],
      "id": "1390f85e-6243-4158-9d79-88fce206bb09",
      "name": "postgres-update-lead-follow-up",
      "credentials": {
        "postgres": {
          "id": "5ZF1HPtlbBIacazg",
          "name": "Postgres account Vaapty"
        }
      }
    },
    {
      "parameters": {
        "content": "## Follow-UP",
        "height": 860,
        "width": 1680,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2960,
        560
      ],
      "typeVersion": 1,
      "id": "4dd7a53e-8b44-4393-85e0-f8f15467c7e9",
      "name": "Sticky Note3",
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.id }}_vaal_1_chat_memory",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4120,
        1180
      ],
      "id": "e45c9c7f-6656-4063-bd54-542d9123de80",
      "name": "Postgres Chat Memory FollowUP",
      "credentials": {
        "postgres": {
          "id": "5ZF1HPtlbBIacazg",
          "name": "Postgres account Vaapty"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-nano",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3960,
        1180
      ],
      "id": "da7ff5db-f4bb-4378-a30a-63408f8fd839",
      "name": "OpenAI Chat Model FollowUP",
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Este é um follow-up para o cliente {{ $json.clientName }}, que demonstrou interesse, mas ainda não concluiu o agendamento.  \nO cliente está na **tentativa número {{ $json.tentativa }}**.  \nAdapte a abordagem de acordo com a etapa do follow-up.  \nSe houver informações de agendamento já fornecidas, continue a partir delas.  \nSe o cliente estiver indeciso, quebre as objeções e reforce os benefícios da Vaapty.  \nEvite repetir perguntas que já foram respondidas.  \nSe o cliente responder, siga com o fluxo normal.\n",
        "options": {
          "systemMessage": "=<instrucoes>\nNome do cliente é {{ $json.clientName }}.\nHoje é {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n\nEste cliente está em um processo de follow-up. Dependendo da tentativa atual, adapte sua abordagem:\n\n🔹 **Primeira tentativa (follow_up_times = 0):**\n   - O cliente demonstrou interesse recentemente (há cerca de 30 minutos), mas ainda não finalizou o agendamento.\n   - Seja leve e direto, lembrando-o da oportunidade, exemplo de mensagem:\n     **\"Oi {{ $json.clientName }}, vi que você mostrou interesse na avaliação do seu carro, mas ainda não finalizamos. Podemos concluir isso agora?\"**\n\n🔹 **Segunda tentativa (follow_up_times = 1):**\n   - O cliente não respondeu ao primeiro follow-up (passaram 24 horas).\n   - Destaque a importância de agendar o quanto antes, exemplo de mensagem:\n     **\"Oi {{ $json.clientName }}, espero que esteja bem! Tentamos falar sobre sua avaliação na Vaapty. Você ainda tem interesse? Posso te ajudar com alguma dúvida?\"**\n   - Se houver objeções, use a ferramenta [get_vaapty_info] para responder com segurança.\n\n🔹 **Terceira tentativa (follow_up_times = 2) - Última tentativa:**\n   - O cliente ignorou duas tentativas anteriores e passaram 72 horas.\n   - Tente um fechamento direto, exemplo de mensagem:\n     **\"Oi {{ $json.clientName }}, Caso ainda tenha interesse na avaliação do seu carro, podemos reservar um horário para você. Se precisar de mais informações, estou aqui para ajudar!\"**\n\nObs.: Os exemplos de mensagem não precisam ser seguidos, adapte a mensagem ao cliente, com suas informações.\n\n🔹 **Regras Importantes:**\n- **Se houver informações de agendamento já fornecidas**, continue a partir delas.\n- **Não repita perguntas desnecessárias.** Sempre consulte o histórico antes de perguntar.\n- **Se o cliente quiser informações sobre a Vaapty**, use [get_vaapty_info].\n- **Se o cliente responder, siga para o fluxo normal.**\n</instrucoes>\n\n<objetivo>\nSeu objetivo é reativar a conversa com o cliente e incentivá-lo a concluir o agendamento, sem ser insistente.\n</objetivo>\n\n<persona>\nVocê é a Vaal, assistente da Vaapty. Seu tom deve ser:\n- Amigável e humanizado.\n- Profissional, mas sem parecer robótico.\n- Confiante e persuasivo.\n- Direto ao ponto, sem insistir desnecessariamente.\n</persona>\n"
        }
      },
      "id": "6cadf627-a634-4fec-9f85-e634a70889d9",
      "name": "vaal-agente-follow-up",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        4120,
        920
      ]
    },
    {
      "parameters": {
        "name": "agenda_sheet_tool",
        "description": "Chame essa tool para realizando o agendamento, sempre usando padrão pt-BR e America/Sao_Paulo",
        "workflowId": {
          "__rl": true,
          "value": "ZpOvo8AmQzyVONiS",
          "mode": "list",
          "cachedResultName": "Vaal-AI | Agenda Sheet"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "telefone": "={{ $json.id }}",
            "dia": "={{ $fromAI('dia', `dia do agendamento | format('dd/MM/yyyy')`, 'string') }}",
            "hora": "={{ $fromAI('hora', `hora do agendamento | format('HH:mm') `, 'string') }}",
            "dia_semana": "={{ $fromAI('dia_semana', `dia da semana do agendamento | format('EEE') `, 'string') }}",
            "cliente": "={{ $json.name }}",
            "carro": "={{ $fromAI('carro', `carro do cliente que será avaliado`, 'string') || \"\" }}",
            "unidade": "={{ $fromAI('unidade', `unidade escolhida pelo  cliente para o agendamento`, 'string') || \"\" }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "dia",
              "displayName": "dia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "hora",
              "displayName": "hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "dia_semana",
              "displayName": "dia_semana",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "cliente",
              "displayName": "cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "carro",
              "displayName": "carro",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "unidade",
              "displayName": "unidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        4300,
        1180
      ],
      "id": "f2a81df5-2d97-41bd-8968-9b9244541d6d",
      "name": "Call n8n Workflow - FollowUp"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bdab41ed-7b55-4da9-a3c7-e0c00d23dd81",
              "leftValue": "={{ $json.follow_up_times.toNumber() }}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3660,
        1000
      ],
      "id": "dbc8ea07-a365-41aa-a4d5-e67c8372f37a",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "vaapty_leads",
          "mode": "list",
          "cachedResultName": "vaapty_leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Loop Over Items1').item.json.id }}",
            "status": "SEM_INTERESSE"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_msg",
              "displayName": "last_msg",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "follow_up_times",
              "displayName": "follow_up_times",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3860,
        820
      ],
      "id": "529b1d1b-0659-44aa-a40c-2b8b6222503d",
      "name": "postgres-update-status-lead-follow",
      "credentials": {
        "postgres": {
          "id": "5ZF1HPtlbBIacazg",
          "name": "Postgres account Vaapty"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "TELEFONE": "={{ $('postgres-get-lead-follow-up').item.json.id }}",
            "STATUS": "SEM_INTERESSE"
          },
          "matchingColumns": [
            "TELEFONE"
          ],
          "schema": [
            {
              "id": "DATA_PRIMEIRO_CONTATO",
              "displayName": "DATA_PRIMEIRO_CONTATO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA_PRIMEIRO_CONTATO",
              "displayName": "HORA_PRIMEIRO_CONTATO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA",
              "displayName": "DIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA",
              "displayName": "HORA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA_SEMANA",
              "displayName": "DIA_SEMANA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRE_VENDA",
              "displayName": "PRE_VENDA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CLIENTE",
              "displayName": "CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CARRO",
              "displayName": "CARRO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "TELEFONE",
              "displayName": "TELEFONE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ORIGEM",
              "displayName": "ORIGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "OBSERVACAO",
              "displayName": "OBSERVACAO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "UNIDADE",
              "displayName": "UNIDADE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "VEIO",
              "displayName": "VEIO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DESFECHO",
              "displayName": "DESFECHO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "MOTIVO",
              "displayName": "MOTIVO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4120,
        620
      ],
      "id": "efbb576a-4285-4df1-aeab-d4410105d3e6",
      "name": "google-sheets-update-status-lead",
      "credentials": {
        "googleApi": {
          "id": "bxp0F5u0sPfGs6wB",
          "name": "Google Sheets account - Service Account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3420,
        860
      ],
      "id": "8d6b5fbb-8e1c-4aa2-82ce-0db390df2d5f",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "28cbec4d-2c89-4336-bf5f-0539beddbf66",
              "name": "clientName",
              "value": "={{ $('Loop Over Items1').item.json.name.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "2a7d1d5a-f25a-41bf-aa3f-e35273f2f37a",
              "name": "tentativa",
              "value": "={{ $('Loop Over Items1').item.json.follow_up_times }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3860,
        1000
      ],
      "id": "6ef78194-1e5b-4ed1-8509-4fc69c9183bf",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "vaal_1",
        "remoteJid": "={{ $('Loop Over Items1').item.json.id }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 2000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4460,
        1200
      ],
      "id": "7559d0cb-bdaf-4543-b934-ac1c84a0b395",
      "name": "Evolution API1",
      "credentials": {
        "evolutionApi": {
          "id": "yF1mcU14BypsoPiB",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "## R.A.G",
        "height": 320,
        "width": 740
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4680,
        760
      ],
      "typeVersion": 1,
      "id": "e6a50f72-f12d-424b-9154-912e8a9e91ae",
      "name": "Sticky Note5",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        5260,
        940
      ],
      "id": "b09597e6-2a3a-4b92-91c1-1226d857bc37",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "get_vaapty_info",
        "toolDescription": "Use essa ferramenta para explicar ao cliente como a Vaapty funciona CASO ele questione ou solicite informações do processo.",
        "tableName": {
          "__rl": true,
          "value": "vaapty_documents",
          "mode": "list",
          "cachedResultName": "vaapty_documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        5120,
        800
      ],
      "id": "4b354493-1095-4a00-866a-36e63d0d8bee",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "Aypne3pGbGP17JRv",
          "name": "Supabase account Vaapty"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4780,
        360
      ],
      "id": "ce1d193f-e011-4456-bb16-8b3f2a576ded",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_chat_memory",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4940,
        360
      ],
      "id": "700f7955-7649-40e8-8597-5a9d8a9843aa",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "5ZF1HPtlbBIacazg",
          "name": "Postgres account Vaapty"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "TELEFONE",
              "lookupValue": "={{ $('payload_handler').item.json.contact.phone }}"
            },
            {
              "lookupColumn": "STATUS",
              "lookupValue": "AGENDADO"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        5140,
        560
      ],
      "id": "ce2fa7c5-c594-4383-8ca8-098b2f73d7fa",
      "name": "consulta_agendamentos",
      "credentials": {
        "googleApi": {
          "id": "bxp0F5u0sPfGs6wB",
          "name": "Google Sheets account - Service Account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI",
          "mode": "list",
          "cachedResultName": "Agendamentos Vaapty",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1983382654,
          "mode": "list",
          "cachedResultName": "LEADS - IA VAAL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1GriSpRzGDi_wRWBuaULvxJF8RxLD1tGAWAJiM_B1fvI/edit#gid=1983382654"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "TELEFONE": "={{ $('payload_handler').item.json.contact.phone }}",
            "STATUS": "CANCELADO_LEAD"
          },
          "matchingColumns": [
            "TELEFONE"
          ],
          "schema": [
            {
              "id": "DATA_PRIMEIRO_CONTATO",
              "displayName": "DATA_PRIMEIRO_CONTATO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA_PRIMEIRO_CONTATO",
              "displayName": "HORA_PRIMEIRO_CONTATO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA",
              "displayName": "DIA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "HORA",
              "displayName": "HORA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DIA_SEMANA",
              "displayName": "DIA_SEMANA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "PRE_VENDA",
              "displayName": "PRE_VENDA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CLIENTE",
              "displayName": "CLIENTE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CARRO",
              "displayName": "CARRO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "TELEFONE",
              "displayName": "TELEFONE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ORIGEM",
              "displayName": "ORIGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "OBSERVACAO",
              "displayName": "OBSERVACAO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "UNIDADE",
              "displayName": "UNIDADE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "VEIO",
              "displayName": "VEIO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "DESFECHO",
              "displayName": "DESFECHO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "MOTIVO",
              "displayName": "MOTIVO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        5320,
        560
      ],
      "id": "87c5af95-0f85-4910-9d97-4a2092902cd9",
      "name": "cancelar_agendamentos",
      "credentials": {
        "googleApi": {
          "id": "bxp0F5u0sPfGs6wB",
          "name": "Google Sheets account - Service Account"
        }
      }
    },
    {
      "parameters": {
        "name": "getWeekDay",
        "description": "Use essa tool para consultar o dia da semana.\nForneça como paramentro uma data no formato dd/mm/yyyy",
        "jsCode": "const [day, month, year] = query.split('/').map(Number);\nconst date = new Date(year, month - 1, day);\nreturn date.toLocaleDateString('pt-BR', { weekday: 'long' });"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [
        5460,
        560
      ],
      "id": "6a4304b9-b591-4cfa-a14f-0ea1ae06793a",
      "name": "getWeekDay"
    },
    {
      "parameters": {
        "name": "validateDate",
        "description": "Use esta tool para validar se a data e hora escolhidas pelo cliente são válidas.\nParâmetro: data no formato 'DD/MM/YYYY HH:mm'\nRetorna um objeto com 'isValid' (booleano) e 'reason' (string explicativa)",
        "jsCode": "const [day, month, year, hour, minute] = query.split(/[/ :]/).map(Number);\nconst inputDate = new Date(year, month - 1, day, hour || 0, minute || 0);\nconst currentDate = new Date();\n\n// Verifica se a data é válida\nif (isNaN(inputDate.getTime())) {\n  return \"invalid date\";\n}\n\n// Verifica se a data já passou\nif (inputDate < currentDate) {\n  return \"invalid - retroactive date\";\n}\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado)\nconst dayOfWeek = inputDate.getDay();\nconst hours = inputDate.getHours();\n\n// Validação para dias de semana (Segunda a Sexta)\nif (dayOfWeek >= 1 && dayOfWeek <= 5) {\n  if (hours >= 9 && hours < 18) {\n    return \"valid date - inside working hours\";\n  } else {\n    return \"invalid date - outside working hours\";\n  }\n}\n\n// Validação para sábados\nif (dayOfWeek === 6) {\n  if (hours >= 9 && hours < 13) {\n    return \"valid date - inside working hours\";\n  } else {\n    return \"invalid date - outside working hours\";\n  }\n}\n\n// Domingos e outros dias não permitidos\nreturn \"invalid date - sunday\";"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [
        5580,
        560
      ],
      "id": "6cba27a8-0a27-4830-9732-d55e9bc2eb51",
      "name": "validateDate"
    },
    {
      "parameters": {
        "name": "validateInfos",
        "description": "Use esta tool para validar se todas as informações necessárias para o agendamento foram preenchidas corretamente.\nParâmetro: objeto JSON em formato string com os campos [data, hora, diaSemana, cliente, unidade]\nRetorna uma string:\n- Se estiver tudo preenchido: \"ok - todos os campos presentes\"\n- Se faltar algo: \"faltando - [lista de campos faltantes separada por ;]\"\n\n\n\nEssa função valida se os campos obrigatórios para concluir um agendamento estão preenchidos corretamente. Caso algum campo esteja ausente ou vazio, a função retorna quais campos ainda estão faltando.\nCampos obrigatórios:\n\nParâmetro: data (DIA, formato: YYYY-MM-DD), hora (formato HH:mm), diaSemana (SEG, TER, QUA, etc)\n\nRetorna uma lista de campos faltante\n\n",
        "jsCode": "let data;\ntry {\n  data = JSON.parse(query);\n} catch (e) {\n  return \"invalid input - not a valid JSON\";\n}\n\nconst requiredFields = {\n  data: \"data\",\n  hora: \"hora\",\n  diaSemana: \"diaSemana\",\n  unidade: \"unidade\"\n};\n\nconst missing = [];\n\nfor (const key in requiredFields) {\n  const value = data[key];\n  if (!value || typeof value !== 'string' || value.trim() === '') {\n    missing.push(requiredFields[key]);\n  }\n}\n\nif (missing.length === 0) {\n  return \"ok - todos os campos presentes\";\n} else {\n  return `faltando - ${missing.join(\"; \")}`;\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [
        5500,
        300
      ],
      "id": "84d9631d-fe38-48cb-b369-c16c6bdbefca",
      "name": "validateInfos"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of $input.all()) {\n  const data = item.json[\"Redis2\"];\n  let array = Array.isArray(data) ? data : JSON.parse(data);\n  const mensagem_completa = array.join(\" \");\n  results.push({ json: { mensagem_completa } });\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4780,
        160
      ],
      "id": "61a2894b-41e5-4d88-9daf-45e94df603fc",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "## Atendente Vaal",
        "height": 640,
        "width": 1020,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4680,
        80
      ],
      "typeVersion": 1,
      "id": "128be403-d697-4b2a-83a1-62e0092d8597",
      "name": "Sticky Note4",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6874b729-a2ba-4596-8011-62440f186a59",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        5700,
        400
      ],
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "id": "77c36d30-9b09-4c75-a577-7bca8d8c4d72",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6640,
        320
      ],
      "webhookId": "2cc53c9a-b7bd-4844-a9c1-76dc1365a0a9"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=message to be splitted: {{ $json.output }}{{ $('vaal-agente-principal').item.json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n\n```json\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n```\n\nAs mensagens devem ser divididas de forma natural e legível, considerando que estamos nos comunicando com um humano.\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo colchetes, aspas e a formatação do texto.\n\nRegras de Formatação:\n  Negrito: Use *palavra* em vez de **palavra**.\n  Tachado: Para indicar texto excluído ou alterado.\n  Itálico: Utilize apenas em casos extremamente raros.\n  link: Sempre usar essa formatação para todos os links.\n\nRegras para separação das mensagens:\nMensagem de introdução: Deve ser uma mensagem separada.\nDetalhes do agendamento: Devem ser mantidos juntos em uma única mensagem, usando \\n para quebras de linha.\nMensagem final de suporte: Deve ser separada.\n\nExemplo de saída esperada:\n```json\n{\n  \"messages\": [\n    \"João, eu verifiquei as informações e você já tem um agendamento confirmado para a avaliação do seu veículo.\",\n    \"*Aqui estão os detalhes:*\\n\\n📅 *Data:* 03/03/2025\\n⏰ *Hora:* 09:00\\n📍 *Unidade:* São Paulo (Santana)\\n🚗 *Veículo:* Cobalt\",\n    \"Se precisar de mais alguma coisa ou desejar alterar algum detalhe, é só me avisar! 😊\"\n  ]\n}\n```"
            }
          ]
        }
      },
      "id": "0b949ed2-48fe-4031-8a66-4486f0fff8b4",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        5700,
        220
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Webhook').item.json.body.body.instance }}_msg_buffer"
      },
      "id": "f9109169-bc7b-49ea-a81b-77ff94799835",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        6440,
        160
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "e96e8af4-6a6b-4cef-80b9-f5a548e0d6da",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        5860,
        400
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "b1acc085-598a-4d40-b160-bb98dbeb6adb",
      "name": "Segmento de Msgs",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        6020,
        220
      ]
    },
    {
      "parameters": {
        "content": "## Resposta humanizada",
        "height": 460,
        "width": 1180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5660,
        80
      ],
      "typeVersion": 1,
      "id": "b4a1fe7f-205b-4c44-af85-84204ca285fa",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code').item.json.mensagem_completa }}",
        "options": {
          "systemMessage": "=<instrucoes>\nNome do cliente é {{ $('payload_handler').item.json.contact.firstName }}\nHoje é dia {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n\n- Toda avaliação é feita **exclusivamente** em uma das unidades da Vaapty.\n- Se o cliente sugerir fazer a avaliação em outro endereço, como na própria casa ou local alternativo, a VAAL deve responder gentilmente explicando que **não oferecemos atendimento externo**, apenas presencial nas lojas.\n- Mesmo que o cliente insista ou diga que o carro está parado, a VAAL deve orientar que o ideal é providenciar guincho ou tentar uma forma de levar até uma das unidades e caso questionado, a Vaapty não arca com os custos do guincho.\n\n- SUA OBRIGAÇÃO MAIOR É SEMPRE BUSCAR INFORMAÇÕES DA VAAPTY OU SOBRE SEU PROCESSO NA TOOL [get_vaapty_info] SEMPRE QUE FOR QUESTIONA OU SOLICITADA EXPLICAÇÃO DO PROCESSO OU DÚVIDAS.\n\n- **OBRIGATORIAMENTE** DEVE IR ENVIANDO AS INFORMAÇÕES DO AGENDAMENTO PARA A TOOL [agenda_sheet_tool] A MEDIDA QUE O CLIENTE FOR INFORMANDO, PARA EVITAR SALVAR TD NO FINAL.\n\n- *SEMPRE* QUE FOR UM NOVO AGENDAMENTO PARA O MESMO CLIENTE, CONSIDERE A NOVA DATA QUE ELE ESCOLHER COM BASE NA DATA ATUAL E NÃO NA DO AGENDAMENTO OU CONVERSA ANTERIOR.\n\nNUNCA DEDUZA NENHUMA INFORMAÇÃO DE DIA, HORA OU DIA DA SEMANA, SEMPRE ESPERE O CLIENTE DEFINIR E NÃO USE O DIA DE HOJE COMO DATA PARA O AGENDAMENTO A NÃO SER QUE O CLIENTE ESCOLHA.\n\nSEMPRE QUE FOR TRABALHAR COM DATAS USE OBRIGATORIAMENTE a tool [validate_date] para verificar se é uma data válida e para consultar o dia da semana use a tool [getWeekDay] e sempre usar padrão pt-BR e America/Sao_Paulo\n\nSEMPRE USE A TOOL [validate_date] combinada com a tool [getWeekDay] para sempre explicar para o cliente(caso data inválida) o porque a data é inválida, considerando a regra abaixo:\n\n - CASO A DATA ESCOLHIDA SEJA DIA DA SEMANA DE SEGUNDA A SEXTA FEIRA, SÓ PERMITA AGENDAMENTOS ENTRE 09:00 DA MANHÃ ATÉ AS 18:00 DA TARDE.\n\n - CASO A DATA ESCOLHIDA SEJA SÁBADO, SÓ PERMITA AGENDAMENTOS ENTRE 09:00 DA MANHÃ ATÉ AS 13:00 DA TARDE.\n\n - NUNCA AGENDE PARA DOMINGOS.\n\n<validacao_e_formatacao>\n1 **Hora**: Sempre no formato `HH:mm` (24 horas).  \n   - Exemplos:  \n     - \"11h\" → \"11:00\"  \n     - \"3 PM\" → \"15:00\"  \n     - \"9:30 AM\" → \"09:30\"  \n\n2 **Unidade**: Sempre no formato `\"Cidade (Bairro)\"`.  \n\t- Se for **\"Guarulhos Vila Galvão\"**, salve como `\"Guarulhos (Vila Galvão)\"`.  \n\t- Se for **\"São Paulo Santana\"**, salve como `\"São Paulo (Santana)\"`.  \n\n3 **Dia da Semana**: Sempre no formato abreviado.  \n\t- \"Segunda-feira\" → \"SEG\"\n\t- \"Terça-feira\" → \"TER\"\n\t- \"Quarta-feira\" → \"QUA\"\n\t- \"Quinta-feira\" → \"QUI\"\n\t- \"Sexta-feira\" → \"SEX\"\n\t- \"Sábado\" → \"SAB\"\n\t- \"Domingo\" → \"DOM\"\n</validacao_e_formatacao>\n\n\nSEMPRE QUE O CLIENTE QUISER CONSULTAR AGENDAMENTOS USE a tool [consulta_agendamentos] para retornar as informações.\n\nSEMPRE QUE O CLIENTE QUISER CANCELAR AGENDAMENTOS USE a tool [cancelar_agendamentos] para alterar o status do agendamento para CANCELADO_LEAD.\n\nSEMPRE QUE O CLIENTE TIVER DÚVIDAS OU QUISER INFORMAÇÕES DE COMO A VAAPTY FUNCIONA OU DÚVIDAS FREQUENTES USE OBRIGATORIAMENTE a TOOL [get_vaapty_info].\n\nSEMPRE QUE O CLIENTE QUESTIONAR SOBRE VALORES, CUSTOS, SOBRE DOCUMENTAÇÃO, SEMPRE FALE SOBRE A COMISSÃO DE \"4.2% + custo da perícia cautelar\" QUE ESTÁ DETALHADA NA TOOL [get_vaapty_info]\n\nSOBRE VISTORIA CAUTELAR EXPLIQUE QUE TEM O CUSTO PARA O CLIENTE OU PODE SER BRINDE DEPENDENDO DA NEGOCIAÇÃO, MAS MESMO NÃO SENDO APROVADA A VISTORIA O CLIENTE É QUEM DEVE PAGAR.\n\nLEVANDO EM CONSIDERAÇÃO AS INFORMAÇÕES DA TOOL [get_vaapty_info] leve essa ordem dos processo em consideração \"após aceitar proposta é chamada a cautelar \ne os documentos seram recolhidos para dar início a produção da documentação. Depois que a cautelar é aprovada mandamos os documentos para o cartório para reconhecer firma da documentação. assim que os documentos chegarem até nós e estando tudo finalizado, pagamos os débitos que tiver no carro e depois o pagamento ao cliente. \n\"\n\nCASO O CLIENTE QUESTIONE SOBRE  COMO FUNCIONA SE ELE DESISTIR DA VENDA APÓS A VISTORIA APROVADA, EXPLIQUE QUE CASO ISSO ACONTECER O CLIENTE TERÁ QUE PAGAR O VALOR DA CAUTELAR + UMA MULTA DE 10%.\n\nCASO O CLIENTE QUESTIONE SOBRE QUAIS TIPOS DE CARROS ESTÃO APTOS, EXPLIQUE QUE A VAAPTY ACEITA QUALQUER TIPO DE CARRO, POIS TEMOS TODOS OS TIPOS DE COMPRADORES E QUE INCLUSIVE TBM VENDEMOS MOTOS E DEIXE CLARO QUE VENDEMOS TODO TIPO DE VEÍCULO, VAN, CAMINHÃO, MASTER.\n\nCASO HAJA DÚVIDAS SOBRE O DUT, TRABALHAMOS DE DUAS FORMAS, PROCURAÇÃO OU DUT, DEPENDE DA NEGOCIAÇÃO COM QUEM COMPROU O CARRO.\n\nCASO SEJA DÚVIDAS SOBRE MULTAS APARECEREM DEPOIS DA VENDA, EXPLIQUE QUE EXISTEM DUAS SITUAÇÕES, SE AS MULTAS QUE SURGIREM FOREM DE *ANTES* DA VENDA, AS MULTAS SÃO DE REPONSÁBILIDADE DO ANTIGO PROPIETÁRIO, CASO AS MULTAS SURGIREM *DEPOIS* DA VENDA, DEVEM SER COMUNICADAS A VAAPTY PARA QUE ENTREMOS EM CONTATO COM O NOVO PROPRIETÁRIO.\n</instrucoes>\n\n<objetivo>\nO seu principal objetivo é agendar uma avaliação do carro do cliente. Sua missão é quebrar todas as objeções consultando todas as informações sobre a Vaapty na tool [get_vaapty_info] e garantir que o cliente veja valor no serviço .\n</objetivo>\n\n<persona>\nVocê é a Vaal, a assistente especializada nos processos da Vaapty. Seu papel é guiar os clientes de maneira natural, fornecendo informações precisas e incentivando-os a concluir o agendamento. Seu tom deve ser:\n- Amigável e humanizado, como uma amiga dando uma recomendação personalizada.\n- Profissional, mas sem parecer robótico.\n- Confiante e persuasivo para quebrar objeções.\n- Simples e direto ao ponto, evitando jargões técnicos.\n- Sempre personalize a conversa com base nas informações fornecidas pelo cliente, reforçando confiança no processo.\n- **Se perceber que o cliente está demorando para responder ou demonstrar dificuldade em digitar, ofereça a opção de enviar um áudio.**  \n  - Exemplo: *\"Ah, e pode ficar à vontade! Se for mais fácil, me manda um áudio que eu entendo também. 🎙️😊\"*\n\n- Se o cliente pedir para agendar fora da unidade (como na casa dele), explique com empatia que **todas as avaliações são presenciais e feitas nas lojas da Vaapty**. Sugira que ele providencie um guincho, ou veja com alguém da família para ajudar a levar o carro.\n- **Nunca confirme agendamento fora das lojas.**\n</persona>\n\n<fluxo_de_atendimento>\n1.Abertura e conexão\n- Cumprimente o cliente pelo primeiro nome e estimule sua curiosidade perguntando se ele sabe como a Vaapty funciona.\n- Sempre que necessário explique de forma simples e amigável o processo da Vaapty.\n- Caso detecte insegurança, reforce que o processo é seguro e transparente.\n- **Se quiser, pode me mandar um áudio também! Assim, eu entendo direitinho e fica mais fácil para você. 🎙️😊\"**\n\n2. Validação das informações antes do agendamento\n- SEMPRE que o cliente fornecer uma nova informação (data, hora, unidade ou carro), atualize imediatamente a planilha usando a tool [agenda_sheet_tool]. Nunca aguarde o final da conversa para registrar os dados.\n- Após obter cada nova informação, chame a tool [agenda_sheet_tool] para salvar o dado. evitamos assim perda de informações e garantimos que o agendamento estará sempre atualizado.\n- Se o cliente alterar alguma informação já coletada, atualize imediatamente o registro no com a tool [agenda_sheet_tool] para evitar inconsistências.\"\n- **Se perceber que o cliente está demorando para responder ou se mostrando inseguro para digitar, incentive o uso de áudios:**  \n  - *\"Se for mais fácil, pode me mandar um áudio explicando! Assim, eu já pego todos os detalhes rapidinho. 🚀🎧\"*\n- Quando todos os dados forem coletados, use a tool [validateInfos] para confirmar que todas as informações estão presentes.\n  - Se faltar algum dado, informe ao cliente:  \n    *\"Ótimo! Mas ainda preciso de [dados faltantes] para finalizar seu agendamento. Me passa esses detalhes por favor? 🙏🚗\"*\n  - Quando estiver tudo certo, confirme com o cliente e finalize o agendamento.\n\n3. Negociação e quebra de objeções\n- Se o cliente pronto para agendar, siga normalmente.\n- Se ele tiver dúvidas ou objeções, consulte as informações com a tool [get_vaapty_info] e forneça informações claras e persuasivas.\n- Sempre finalize suas respostas com uma pergunta de conversão, por exemplo:\n\t- \"Podemos finalizar seu agendamento? Assim, você já garante sua avaliação sem compromisso.\"\n\n4. Fechamento\n- Se o horario escolhido pelo cliente, estiver dentro dos horario de atendimento das lojas de acordo com [dados_das_unidades], confirme exatamente como foi solicitado pelo cliente.\n- Se o horário solicitado não estiver dentro dos horarios de atendimento das lojas de acordo com [dados_das_unidades], sugira o mais próximo dia e horarios válidos.\n- Informe que os documentos do carro e o do cliente são obrigatórios e é mt importante caso tenha chave reserva e manual é levar para ajuda na negociação.\n</fluxo_de_atendimento>\n\n\n\n<dados_das_unidades>\n📌 Guarulhos (Vila Galvão)\n📍 Endereço: Av. Dr. Timóteo Penteado, 4043 - Vila Galvão, Guarulhos - SP, 07061-002\n📞 Telefone: (11) 99622-0483\n🌍 Site: vaaptyguarulhosvilagalvao.com\n📷 Instagram: @vaaptyguarulhos.vilagalvao\n📘 Facebook: @vaaptyguarulhosvilagalvao\nlink de avaliações no google: https://goo.su/U05DpZb\nhorários de atendimento: de segunda a Sexta: 09:00 até 18:00, sábados: de 09:00 até 13h00 e domingos: fechados\n</dados_das_unidades>\n\n<regras para agendamento>\n- O agendamento pode ser feito em qualquer horário dentro do intervalo de atendimento, sem restrição a horários redondos.\n- Se o horário solicitado pelo cliente estiver dentro do horário de atendimento, CONFIRME SEM ALTERAÇÕES.\n- NUNCA ajuste automaticamente ou obrigue a escolha do cliente ser para horários redondos.\n- **Antes de confirmar qualquer horário, valide se ele está dentro do horário permitido para aquele dia da semana, conforme os horários de atendimento da unidade escolhida.**\n</regras para agendamento>\n\n<formatacao_de_mensagens>\nSempre que enviar mensagens ao cliente, utilize emojis Unicode para tornar a comunicação mais clara e visual. Diretrizes formato de mensagens:\n\nEndereços → 📍\nTelefones → 📞\nSites → 🌍\nInstagram → 📷\nFacebook → 📘\nHorários de atendimento → ⏰\nDatas e calendário → 📅\nCarros e veículos → 🚗\nDúvidas e informações → ❓\nConfirmações → ✅\nAlertas ou restrições → ⚠️\n\n**Exemplo de mensagem formatada corretamente:**  \n📌 **Endereço da unidade:** 📍 Av. Dr. Timóteo Penteado, 4043 - Vila Galvão, Guarulhos - SP.  \n📞 **Contato:** (11) 99622-0483  \n🌍 **Site:** [vaaptyguarulhosvilagalvao.com](https://vaaptyguarulhosvilagalvao.com)  \n📅 **Data do agendamento:** Segunda-feira, 11 de Março de 2025.  \n⏰ **Horário:** 10:30 da manhã.  \n🚗 **Veículo:** Honda Civic 2019 - Prata  \n✅ **Status:** Agendamento confirmado.  \n⚠️ **Importante:** Não se esqueça de levar os documentos do carro e chave reserva.  \n\nSempre use esse padrão para tornar as mensagens mais organizadas e profissionais.\n</formatacao_de_mensagens>\n\n<regras_obrigatorias>\n1. Antes de responder perguntas sobre como a Vaapty funciona ou fornecer qualquer informação ao usuário, **você deve obrigatoriamente consultar os dados no RAG**. Use a tool [get_vaapty_info] para recuperar informações caso o cliente manifeste interesse em entender sobre a Vaapty.  \n2. Se a consulta ao RAG não retornar informações úteis, peça mais detalhes ao usuário antes de responder.  \n3. **Nunca faça suposições ou gere respostas sem validar primeiro com a ferramenta.**  \n4. Sempre adapte a resposta com base nas informações recuperadas, garantindo que o cliente perceba o valor do serviço.  \n5. Consulte o dia da semana para a data solicitada, valide se está dentro dos dias e horarios de funcionamento das lojas.\n6. SEMPRE antes de confirmar o agendamento para o cliente, use a tool [validateInfos] passando os dados atuais do agendamento.  \n   - Se a tool retornar \"ok - todos os campos presentes\", prossiga com a confirmação do agendamento.  \n   - Se retornar \"faltando - [campos]\", informe o cliente que ainda faltam esses dados e solicite que ele os envie para concluir o agendamento.\n</regras_obrigatorias>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        5020,
        120
      ],
      "id": "8b1969ed-45c2-4632-b324-2d3da269ed2d",
      "name": "vaal-agente-principal"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1771f030-2e2c-49aa-9183-2ce785b0a74e",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        6220,
        220
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "vaal_1",
        "remoteJid": "={{ $('payload_handler').item.json.contact.phone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 2000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        6440,
        320
      ],
      "id": "57db3bb0-f406-41bd-a4df-dc7ed8a15bc8",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "yF1mcU14BypsoPiB",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "name": "agenda_sheet_tool",
        "description": "Chame essa tool para realizando o agendamento, sempre usando padrão pt-BR e America/Sao_Paulo",
        "workflowId": {
          "__rl": true,
          "value": "ZpOvo8AmQzyVONiS",
          "mode": "list",
          "cachedResultName": "Vaal-AI | Agenda Sheet"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "telefone": "={{ $('payload_handler').item.json.contact.phone }}",
            "dia": "={{ $fromAI('dia', `dia do agendamento | format('dd/MM/yyyy')`, 'string') }}",
            "hora": "={{ $fromAI('hora', `hora do agendamento | format('HH:mm') `, 'string') }}",
            "dia_semana": "={{ $fromAI('dia_semana', `dia da semana do agendamento | format('EEE') `, 'string') }}",
            "cliente": "={{ $('payload_handler').item.json.contact.fullName }}",
            "carro": "={{ $fromAI('carro', `carro do cliente que será avaliado`, 'string') || \"\" }}",
            "unidade": "={{ $fromAI('unidade', `unidade escolhida pelo  cliente para o agendamento`, 'string') || \"\" }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "dia",
              "displayName": "dia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "hora",
              "displayName": "hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "dia_semana",
              "displayName": "dia_semana",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "cliente",
              "displayName": "cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "carro",
              "displayName": "carro",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "unidade",
              "displayName": "unidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        5080,
        360
      ],
      "id": "70aa594e-b542-4ffe-ba39-af6b622494ee",
      "name": "Call n8n Workflow"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "vaal-ai-sdr",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        120,
        160
      ],
      "id": "b1abbfcc-58c7-4657-91fe-102659f9711c",
      "name": "Webhook",
      "webhookId": "17e1268a-2679-4bd2-a362-377c2b3bcab2"
    },
    {
      "parameters": {
        "resource": "chat-api",
        "operation": "get-media-base64",
        "instanceName": "vaal_1",
        "messageId": "={{ $('Webhook').item.json.body.body.data.key.id }}",
        "convertToMp4": true
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2780,
        360
      ],
      "id": "028598ff-540d-4858-8e20-6bdeeb1a643b",
      "name": "Evolution API2",
      "credentials": {
        "evolutionApi": {
          "id": "yF1mcU14BypsoPiB",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
              "name": "base64",
              "value": "={{ $json.data.base64 }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2940,
        360
      ],
      "id": "ba85e3b7-e1c9-4b9a-9f13-f3dc8f6c4f08",
      "name": "Adapter"
    }
  ],
  "connections": {
    "Date & Time1": {
      "main": [
        [
          {
            "node": "payload_handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "google-sheets-discart-lead": {
      "main": [
        [
          {
            "node": "supabase-atualiza-agendamento1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "block-lead": {
      "main": [
        [
          {
            "node": "google-sheets-discart-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch-msg-from": {
      "main": [
        [
          {
            "node": "block-lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "verifica-intervencao-humana",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "payload_handler": {
      "main": [
        [
          {
            "node": "switch-msg-from",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-create-lead": {
      "main": [
        [
          {
            "node": "google-sheets-create-update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if-existing-lead": {
      "main": [
        [
          {
            "node": "supabase-update-last-msg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "supabase-create-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-get-lead": {
      "main": [
        [
          {
            "node": "if-existing-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch-block-ai": {
      "main": [
        [
          {
            "node": "supabase-get-lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - AI Pausada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "google-sheets-create-update": {
      "main": [
        [
          {
            "node": "supabase-update-last-msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "verifica-intervencao-humana": {
      "main": [
        [
          {
            "node": "switch-block-ai",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "openai-transcribe-audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message-type": {
      "main": [
        [
          {
            "node": "Text Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-update-last-msg": {
      "main": [
        [
          {
            "node": "message-type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Redis Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait 5 seg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Redis Memory": {
      "main": [
        [
          {
            "node": "Compara Get Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5 seg": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "openai-transcribe-audio": {
      "main": [
        [
          {
            "node": "Audio Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "postgres-get-lead-follow-up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "postgres-get-lead-follow-up": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "postgres-update-lead-follow-up": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory FollowUP": {
      "ai_memory": [
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model FollowUP": {
      "ai_languageModel": [
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "vaal-agente-follow-up": {
      "main": [
        [
          {
            "node": "Evolution API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call n8n Workflow - FollowUp": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "postgres-update-status-lead-follow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "postgres-update-status-lead-follow": {
      "main": [
        [
          {
            "node": "google-sheets-update-status-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "google-sheets-update-status-lead": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Não faz nada - FIM",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API1": {
      "main": [
        [
          {
            "node": "postgres-update-lead-follow-up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-follow-up",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "consulta_agendamentos": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "cancelar_agendamentos": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "getWeekDay": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "validateDate": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "validateInfos": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmento de Msgs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Segmento de Msgs": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "vaal-agente-principal": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call n8n Workflow": {
      "ai_tool": [
        [
          {
            "node": "vaal-agente-principal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API2": {
      "main": [
        [
          {
            "node": "Adapter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adapter": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": [
        0
      ]
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "ad47b136-3fb7-4e24-b311-0e87e6389f1a",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-05-19T13:21:56.336Z",
      "updatedAt": "2025-05-19T13:21:56.336Z",
      "id": "GjahXidmM3aj0M5l",
      "name": "vaal-ai"
    }
  ]
}