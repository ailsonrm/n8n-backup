{
  "createdAt": "2025-04-20T13:20:32.990Z",
  "updatedAt": "2025-04-22T18:12:17.352Z",
  "id": "PeJfZp2koIll5H8n",
  "name": "Project | Sindney-AI | CXA",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "content": "## Pausa para Atendimento Humano",
        "height": 440,
        "width": 1240,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        280,
        740
      ],
      "typeVersion": 1,
      "id": "08c4ad7b-78b5-47df-9904-03d45f539fdf",
      "name": "Sticky Note29",
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sindney-ai-cxa",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        340,
        840
      ],
      "id": "04d93115-e18b-4d88-b6bd-1f4c12017518",
      "name": "Webhook",
      "webhookId": "153099f1-d1d2-4777-be6d-aeaa613f245f",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Registro de Cliente no Supabase",
        "height": 440,
        "width": 600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1560,
        740
      ],
      "typeVersion": 1,
      "id": "ddfd8b5d-4c40-45fb-8192-306f7f70f902",
      "name": "Sticky Note22",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Classifica Mensagens",
        "height": 440,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2200,
        740
      ],
      "typeVersion": 1,
      "id": "f496ceba-4f39-4170-be99-2d0bfbf110f0",
      "name": "Sticky Note28",
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5babf18b-3925-426c-b907-e8f3e7936ffc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d8c1d47a-0014-4d4c-8c43-c68df3a99df2",
                    "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2260,
        800
      ],
      "id": "df0639ea-61ca-4d6b-b975-f6465758db16",
      "name": "message-type"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "pt"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2720,
        1020
      ],
      "id": "64858768-3fc5-4269-a574-c8b6c2553800",
      "name": "openai-transcribe-audio",
      "credentials": {
        "openAiApi": {
          "id": "di9H6klhz4rejAkz",
          "name": "conn-open-ai-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer",
        "messageData": "={{ $('payload_handler').item.json.message.text.conversation }}",
        "tail": true
      },
      "id": "8feb1faf-0ce2-4a09-9b34-7560c0714ff1",
      "name": "Text Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3000,
        820
      ],
      "credentials": {
        "redis": {
          "id": "Aqtr3gkXAZLLjpXT",
          "name": "conn-redis-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer",
        "messageData": "={{ $('openai-transcribe-audio').item.json.text }}",
        "tail": true
      },
      "id": "a50e747e-f2fe-4f45-b17e-7fa63520930e",
      "name": "Audio Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3000,
        980
      ],
      "credentials": {
        "redis": {
          "id": "Aqtr3gkXAZLLjpXT",
          "name": "conn-redis-codai"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $item(0).$node[\"Compara Get Memory\"].json[\"Redis2\"]; // Obtém o valor de Redis2 do nó \"If\"\n\n// Verifica se o dado é uma string que representa um array, e converte se necessário\nlet array = Array.isArray(data) ? data : JSON.parse(data);\n\n// Junta os elementos do array com um espaço entre eles\nconst mensagem_completa = array.join(\" \");\n\n// Retorna o resultado com o nome da variável \"mensagem_completa\"\nreturn [{ json: { mensagem_completa } }];\n"
      },
      "id": "1d4c7b32-960c-4787-bc86-df616400931e",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3940,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer",
        "options": {}
      },
      "id": "fc154b0c-8794-442e-82eb-8ca509aeaa62",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3560,
        900
      ],
      "credentials": {
        "redis": {
          "id": "Aqtr3gkXAZLLjpXT",
          "name": "conn-redis-codai"
        }
      }
    },
    {
      "parameters": {
        "content": "## Mensagem Picotada",
        "height": 440,
        "width": 1180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2940,
        740
      ],
      "typeVersion": 1,
      "id": "b0557e05-fd1b-4216-aa32-5f32f00d96b8",
      "name": "Sticky Note24",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer",
        "options": {}
      },
      "id": "ee6cdb0a-8d2e-406d-824d-80da9c1c7b9f",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3220,
        900
      ],
      "credentials": {
        "redis": {
          "id": "Aqtr3gkXAZLLjpXT",
          "name": "conn-redis-codai"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $('Edit Redis Memory').item.json.Redis2 }}",
              "rightValue": "={{ $('Edit Redis Memory').item.json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6c17df08-1208-4a5d-b488-d36c160aee1d",
      "name": "Compara Get Memory",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3900,
        900
      ]
    },
    {
      "parameters": {
        "content": "## Síndney.AI",
        "height": 440,
        "width": 560,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4140,
        740
      ],
      "typeVersion": 1,
      "id": "824a417a-d81d-4d4e-84cf-e8fa3402bf94",
      "name": "Sticky Note4",
      "disabled": true
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4300,
        1040
      ],
      "id": "593cdb3c-9486-44c3-932b-dfc59af390d0",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "di9H6klhz4rejAkz",
          "name": "conn-open-ai-codai"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=5511967362820_chat_memory_{{ $('Get Organization SETUP').item.json.name }}",
        "tableName": "={{ $('Get Organization SETUP').item.json.chat_table_name }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4460,
        1040
      ],
      "id": "30d1f7b5-1f02-416e-aa46-82c613a4dff1",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "a4YeNQrErL6fIk72",
          "name": "conn-postgres -codai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "53a26bd3-29a1-4cc0-89a9-f41b28dfe47f",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4840,
        1000
      ],
      "credentials": {
        "openAiApi": {
          "id": "di9H6klhz4rejAkz",
          "name": "conn-open-ai-codai"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "426b6a32-0efa-4d86-8b7e-d4cac79274e5",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5760,
        960
      ],
      "webhookId": "b780c57e-4665-46f9-af6a-5c4c735086d2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=message to be splitted: {{ $('sindnei-agent-ai').item.json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n\n```json\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n```\n\nAs mensagens devem ser divididas de forma natural e legível, considerando que estamos nos comunicando com um humano.\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo colchetes, aspas e a formatação do texto.\n\nRegras de Formatação:\n  Negrito: Use *palavra* em vez de **palavra**.\n  Tachado: Para indicar texto excluído ou alterado.\n  Itálico: Utilize apenas em casos extremamente raros.\n  link: Sempre usar essa formatação para todos os links.\n\nRegras para separação das mensagens:\nMensagem de introdução: Deve ser uma mensagem separada.\nDetalhes do agendamento: Devem ser mantidos juntos em uma única mensagem, usando \\n para quebras de linha.\nMensagem final de suporte: Deve ser separada."
            }
          ]
        }
      },
      "id": "bc395231-1ba2-49ea-8153-2c7dc4f7f7a1",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        4840,
        820
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer"
      },
      "id": "2c933c93-1fcf-469f-b311-3aa856ce1065",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5760,
        780
      ],
      "credentials": {
        "redis": {
          "id": "Aqtr3gkXAZLLjpXT",
          "name": "conn-redis-codai"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $('supabase-get-lead').item.json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1760,
        820
      ],
      "id": "9299c348-d7dd-4f8e-b0a0-de6a5b30ca06",
      "name": "if-existing-lead"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "={{ $('Get Organization SETUP').item.json.resident_table }}",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $('payload_handler').item.json.contact.phone.toNumber() }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1600,
        820
      ],
      "id": "cec41e76-3602-4590-8885-f86e3646f989",
      "name": "supabase-get-lead",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "sWvNgamwZJ7hL1fO",
          "name": "conn-supabase-codai-2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## R.A.G",
        "height": 420,
        "width": 560
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4160,
        1220
      ],
      "typeVersion": 1,
      "id": "c6fa4b92-b755-4df8-9379-babb5b9ca82b",
      "name": "Sticky Note5",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1320,
        1040
      ],
      "id": "a688bccf-589a-4b2f-9e43-5037d9074315",
      "name": "Não faz nada - Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $('Get Memory 2').item.json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0a20a012-26b4-4997-b536-76fd38e004ea",
      "name": "Edit Redis Memory",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3720,
        900
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "3036f6ff-dca5-4dfd-a5e3-ca5e429d7b95",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        5000,
        1000
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "995881b3-2f80-4b5e-94d8-693e6c800342",
      "name": "Segmento de Msgs",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        5160,
        820
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4a2249a6-2e60-493e-833f-46340cf08f91",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        5360,
        820
      ]
    },
    {
      "parameters": {
        "name": "get_rag_vector_infos",
        "description": "Documentos internos, use para responder os moradores, com base nos documentos, tire as dúvidas e questionamentos sobre o condomínio e tbm sobre serviços do condomínio, como o Modulocker, serviço de armários inteligentes",
        "topK": 5
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        4420,
        1240
      ],
      "id": "7d0a45f3-a7fc-4200-869a-dfac2788499e",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4520,
        1380
      ],
      "id": "1452f262-fca7-4890-9417-3475f7c134d7",
      "name": "OpenAI Chat Model RAG",
      "credentials": {
        "openAiApi": {
          "id": "di9H6klhz4rejAkz",
          "name": "conn-open-ai-codai"
        }
      }
    },
    {
      "parameters": {
        "content": "## Scan Google Drive para o Banco de Dados Vetorial.",
        "height": 620,
        "width": 2620,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        280,
        1220
      ],
      "typeVersion": 1,
      "id": "d5f710c3-0d1f-43a1-96f5-09a05d572d54",
      "name": "Sticky Note6",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2200,
        1480
      ],
      "id": "36101f59-96d7-47c7-8dc2-76c2048fa545",
      "name": "Embeddings OpenAI3",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        920,
        1400
      ],
      "id": "96b92a82-a707-4955-b093-d8576471726d",
      "name": "loop-files",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1100,
        1300
      ],
      "id": "7b208c9d-6ada-4670-8504-f8dc88676cb7",
      "name": "The End",
      "disabled": true
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "={{ $('Get Organization SETUP - RAG').item.json.vector_rag_table }}",
          "mode": "id"
        },
        "options": {
          "queryName": "={{ $('Get Organization SETUP - RAG').item.json.match_function }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2260,
        1300
      ],
      "id": "d2ec9a23-5269-4f47-ae9b-6111eebbfd53",
      "name": "insert-doc-into-vector-store",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": ">>>",
      "typeVersion": 1,
      "position": [
        2700,
        1640
      ],
      "id": "b501d6cd-a0c2-4165-90a8-4b06e5839aaa",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Resposta humanizada\n",
        "height": 440,
        "width": 1180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4760,
        740
      ],
      "typeVersion": 1,
      "id": "8354b53b-228c-45ab-898c-6de84b614035",
      "name": "Sticky Note2",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        320,
        1400
      ],
      "id": "5d7368d7-955f-47bb-a1e8-7ae605ef3f88",
      "name": "When clicking ‘Test workflow’",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now.setLocale('pt-BR').setZone(\"America/Sao_Paulo\") }}",
        "format": "custom",
        "customFormat": "EEEE, dd 'de' MMMM 'de' yyyy 'às' HH:mm",
        "outputFieldName": "=formattedDate",
        "options": {
          "includeInputFields": false,
          "timezone": true
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        720,
        840
      ],
      "id": "204a7281-9f32-4b97-b6dc-db3bed9a701a",
      "name": "Date & Time",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                    "rightValue": "fromClient",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    },
                    "id": "8d7d84f4-ab9f-4e1f-9b9a-e83cc4e9bc03"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "User"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4bee2c7b-e8fa-420c-9d5e-6140002eca91",
                    "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                    "rightValue": "eventN8n",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Me"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "40fbb4c3-f89c-4eab-8cbd-5ad683f756c6",
                    "leftValue": "={{ $('payload_handler').item.json.message.isGroup }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Group"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1120,
        840
      ],
      "id": "ddfd7ea2-ee9d-4e95-994d-3fb3a087b7f7",
      "name": "switch-msg-from"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0d409c70-6488-4f4f-8681-5bb552563957",
              "name": "evolution.serverUrl",
              "value": "={{ $('Webhook').item.json.body.body.server_url }}",
              "type": "string"
            },
            {
              "id": "4ae67c6f-3fba-45c0-ade2-1fa3731b93e8",
              "name": "evolution.phone",
              "value": "={{ $('Webhook').item.json.body.body.sender.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "6e253dad-0fbf-4a74-b6a4-618c79bb3460",
              "name": "evolution.apiKey",
              "value": "={{ $('Webhook').item.json.body.body.apikey }}",
              "type": "string"
            },
            {
              "id": "5e3e579f-f9dd-4fb0-9c4b-d2c56b151c55",
              "name": "contact.phone",
              "value": "={{ $('Webhook').item.json.body.body.data.key.remoteJid.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "877887ea-c7df-4c1e-b6a9-4ec573256127",
              "name": "contact.firstName",
              "value": "={{ $('Webhook').item.json.body.body.data.pushName.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "ecc3073f-8c25-41bb-abfe-402c385c6031",
              "name": "contact.fullName",
              "value": "={{ $('Webhook').item.json.body.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "d4768288-0024-47c6-b9c6-3dcc9e18c2e0",
              "name": "message.type",
              "value": "={{ !!$('Webhook').item.json.body.body.data.message.conversation && 'text' || \n   !!$('Webhook').item.json.body.body.data.message.audioMessage && 'audio'\n}}",
              "type": "string"
            },
            {
              "id": "20a86b71-c77f-4b4e-9db9-b9964276e67f",
              "name": "message.text.conversation",
              "value": "={{ $('Webhook').item.json.body.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
              "name": "message.audio.base64",
              "value": "={{ $('Webhook').item.json.body.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "3c159587-cd22-45df-aac7-82add1c9992e",
              "name": "message.status",
              "value": "={{ $('Webhook').item.json.body.body.data.status }}",
              "type": "string"
            },
            {
              "id": "cc95a725-d953-433d-a8ee-aa903f515ca5",
              "name": "message.timestamp",
              "value": "={{ DateTime.fromMillis($('Webhook').item.json.body.body.data.messageTimestamp) }}",
              "type": "string"
            },
            {
              "id": "d65f9d80-5f16-4c29-965b-fc8832fe13eb",
              "name": "message.fromMe",
              "value": "={{ $('Webhook').item.json.body.body.data.key.fromMe }}",
              "type": "boolean"
            },
            {
              "id": "44cce600-ebb8-4242-8008-5da0951d16c5",
              "name": "message.isGroup",
              "value": "={{ $('Webhook').item.json.body.body.event != 'messages.upsert' }}",
              "type": "boolean"
            },
            {
              "id": "c3d798ea-378e-4f39-a764-82ff9733e36a",
              "name": "message.id",
              "value": "={{ $('Webhook').item.json.body.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        920,
        840
      ],
      "id": "9a8e68a5-ee77-4c0f-b868-2425780e97f9",
      "name": "payload_handler"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "=file_{{ $now.format('yyyyMMdd_HHmmss') }}.ogg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2520,
        1020
      ],
      "id": "28fe1c2f-71b8-4fa4-a771-85dd23436cd5",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
              "name": "base64",
              "value": "={{ $('payload_handler').item.json.message.audio.base64 }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2300,
        1020
      ],
      "id": "f36f52dd-c6ae-41e9-a9a2-3c7e092417ac",
      "name": "Adapter"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "={{ $json.instrucao }}"
        }
      },
      "id": "bdc517d4-e03f-45f1-814c-2763b2a62a36",
      "name": "sindnei-agent-ai",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        4380,
        840
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "={{ $('Get Organization SETUP').item.json.vector_rag_table }}",
          "mode": "id"
        },
        "options": {
          "queryName": "={{ $('Get Organization SETUP').item.json.match_function }}",
          "metadata": {
            "metadataValues": [
              {
                "name": "organization",
                "value": "={{ $('Get Organization SETUP').item.json.name }}"
              },
              {
                "name": "bucket",
                "value": "={{ $('Get Organization SETUP').item.json.bucket }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        4180,
        1360
      ],
      "id": "a429416b-499d-4ae0-b868-0bdb5c408c35",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "sWvNgamwZJ7hL1fO",
          "name": "conn-supabase-codai-2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        4340,
        1500
      ],
      "id": "387912b7-8f76-403c-b08a-7b902fb620f9",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "di9H6klhz4rejAkz",
          "name": "conn-open-ai-codai"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "qLGtnQwfSmjupFe0",
          "mode": "list",
          "cachedResultName": "OCR EdenAI"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "file_name": "={{ $('loop-files').item.json.name }}",
            "bucket_id": "={{ $('Get Organization SETUP - RAG').item.json.bucket }}",
            "project_id": "={{ $('Get Organization SETUP - RAG').item.json.project_id }}"
          },
          "matchingColumns": [
            "file_name"
          ],
          "schema": [
            {
              "id": "file_name",
              "displayName": "file_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "bucket_id",
              "displayName": "bucket_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "project_id",
              "displayName": "project_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1780,
        1460
      ],
      "id": "86fae071-d493-402c-b85a-cf76975f2cb6",
      "name": "Execute Workflow",
      "disabled": true
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "organization",
                "value": "={{ $('Get Organization SETUP - RAG').item.json.name }}"
              },
              {
                "name": "=bucket",
                "value": "={{ $('Get Organization SETUP - RAG').item.json.bucket }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2340,
        1480
      ],
      "id": "5288c883-c53b-4480-a03f-101a48d59b2b",
      "name": "Default Data Loader",
      "disabled": true
    },
    {
      "parameters": {
        "chunkSize": 10000,
        "chunkOverlap": 1000,
        "options": {
          "splitCode": "markdown"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2440,
        1620
      ],
      "id": "36cba490-30b9-4e5a-ab07-72901d55020c",
      "name": "Recursive Character Text Splitter",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1a361e3f-e955-4846-a3fd-068df085fdec",
              "name": "=clean_text",
              "value": "={{ $json.data[0].text || $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1980,
        1460
      ],
      "id": "becf888f-15ce-401e-81df-1641e6c334b4",
      "name": "Edit Fields",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT name FROM storage.objects WHERE bucket_id = '{{ $('Get Organization SETUP - RAG').item.json.bucket }}' AND name NOT LIKE '.%'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        720,
        1400
      ],
      "id": "d562739c-ab63-4d1a-9cd0-2b8be2cb65b4",
      "name": "Postgres",
      "executeOnce": true,
      "disabled": true
    },
    {
      "parameters": {
        "tableId": "={{ $('Get Organization SETUP - RAG').item.json.file_sync_table }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "file_name",
              "fieldValue": "={{ $('loop-files').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1600,
        1460
      ],
      "id": "0fb62472-3514-46ad-aab0-f00ec9cf560f",
      "name": "Supabase",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "={{ $('Get Organization SETUP - RAG').item.json.file_sync_table}}",
        "filters": {
          "conditions": [
            {
              "keyName": "file_name",
              "condition": "eq",
              "keyValue": "={{ $('loop-files').item.json.name }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "processed",
              "fieldValue": "=true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        760,
        1620
      ],
      "id": "3f377ef6-8f87-48f7-a896-55c5e840ca19",
      "name": "Supabase1",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "={{ $('Get Organization SETUP - RAG').item.json.file_sync_table}}",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "file_name",
              "condition": "eq",
              "keyValue": "={{ $json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1100,
        1480
      ],
      "id": "b7201526-8800-4d26-b055-467921bb8faf",
      "name": "Supabase2",
      "alwaysOutputData": true,
      "executeOnce": true,
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cf9547e2-4c1c-463c-843c-de801a6fd47e",
                    "leftValue": "={{ $json.processed }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Não Processado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.processed }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "7389f352-bf07-431d-bff1-e33b2f142e5d"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Processado"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1300,
        1480
      ],
      "id": "51a81599-76b7-4b5f-9a68-5d1b1a18abe2",
      "name": "Switch",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1480,
        1620
      ],
      "id": "8fbeeb71-81d9-4624-a3b8-54e1146cc2cd",
      "name": "Próximo",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "organization",
        "filters": {
          "conditions": [
            {
              "keyName": "name",
              "keyValue": "=sindney_0"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        520,
        840
      ],
      "id": "d39f6c9e-190d-4c12-ab3d-34d6abc49851",
      "name": "Get Organization SETUP",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "sWvNgamwZJ7hL1fO",
          "name": "conn-supabase-codai-2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "organization",
        "filters": {
          "conditions": [
            {
              "keyName": "name",
              "keyValue": "=sindney-0"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        520,
        1400
      ],
      "id": "f4f0214a-b752-4361-b31c-06f2d526f141",
      "name": "Get Organization SETUP - RAG",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "={{ $('Get Organization SETUP').item.json.resident_table }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "id",
              "fieldValue": "={{ $('payload_handler').item.json.contact.phone.toNumber() }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $('payload_handler').item.json.contact.fullName }}"
            },
            {
              "fieldId": "organization",
              "fieldValue": "={{ $('Get Organization SETUP').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1940,
        980
      ],
      "id": "6bac1bba-7a1a-4c7a-b631-7634f07f1f49",
      "name": "supabase-create-resident",
      "credentials": {
        "supabaseApi": {
          "id": "sWvNgamwZJ7hL1fO",
          "name": "conn-supabase-codai-2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "8cce77e1-cb28-409a-b522-3b6d8450f4c7",
      "name": "Wait 2 seg",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3400,
        900
      ],
      "webhookId": "52441967-5a76-464a-98fd-c5f7e5d90e8a"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "garage_sindney",
        "filters": {
          "conditions": [
            {
              "keyName": "garage_number",
              "keyValue": "={{ $fromAI('garage_number', `parking space number`, 'string') }}"
            },
            {
              "keyName": "organization",
              "keyValue": "={{ $('Get Organization SETUP').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        4940,
        1240
      ],
      "id": "c1da51a9-5509-4239-8f74-70fd2367ff92",
      "name": "get_apto_by_garage_number",
      "credentials": {
        "supabaseApi": {
          "id": "sWvNgamwZJ7hL1fO",
          "name": "conn-supabase-codai-2"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "garage_sindney",
        "filters": {
          "conditions": [
            {
              "keyName": "apto",
              "keyValue": "={{ $fromAI('apto_number', `apartment number`, 'string') }}"
            },
            {
              "keyName": "organization",
              "keyValue": "={{ $('Get Organization SETUP').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        5140,
        1260
      ],
      "id": "390080bf-9cc0-46cc-8c55-b8e82d85839d",
      "name": "get_garage_by_apto_number",
      "credentials": {
        "supabaseApi": {
          "id": "sWvNgamwZJ7hL1fO",
          "name": "conn-supabase-codai-2"
        }
      }
    },
    {
      "parameters": {
        "inputText": "={{ $('When chat message received').item.json.chatInput }}",
        "categories": {
          "categories": [
            {
              "category": "duvidas_condominio",
              "description": "Quando a pessoa perguntar coisas relacionadas ao condominio, regras, atas, cargos, regulamentos e vagas de garagem"
            },
            {
              "category": "duvidas_modulocker",
              "description": "Quando a pessoa perguntar coisas relacionadas ao MODULOCKER, solução de smart locker (armário intelignete), recebimento,\nretirada e armazenamento seguro de encomendas e pertences\ndos usuários."
            }
          ]
        },
        "options": {
          "fallback": "other"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        3840,
        360
      ],
      "id": "0f86db3e-6a82-4ad8-83b3-1989cea57533",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3960,
        620
      ],
      "id": "fdb7e450-a2cf-435f-8361-f957e85ce784",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "di9H6klhz4rejAkz",
          "name": "conn-open-ai-codai"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06bad7d3-190c-4501-97b9-206621389438",
              "name": "instrucao",
              "value": "=<instruction>SEMPRE busque informações na tool[get_rag_vector_infos] e responda dúvidas sobre o condomínio que estão na base de dados RAG com  a tool[get_rag_vector_infos]/instruction>\n\n<setup>\nNome do morador: Ailson\nHoje é dia {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n</setup>\n\n{{ $('Get Organization SETUP').item.json.prompt }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4200,
        280
      ],
      "id": "fa7c30bf-fe8e-4c17-831d-7b320812bf2c",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06bad7d3-190c-4501-97b9-206621389438",
              "name": "instrucao",
              "value": "=<instruction>SEMPRE busque informações na tool[get_rag_vector_infos] e responda dúvidas sobre a solução Modulocker, smart locker que estão na base de dados RAG</instruction>\n\n<setup>\nNome do morador: Ailson\nHoje é dia {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n</setup>\n\nVocê é um especialista no Modulocker, para obter informações sobre, SEMPRE busque as informações com a tool []",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4200,
        440
      ],
      "id": "2e75711e-aab6-40d2-9878-fa884aba1474",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06bad7d3-190c-4501-97b9-206621389438",
              "name": "instrucao",
              "value": "<instruction>\nSiga a conversa normalmente\n</instruction>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4200,
        600
      ],
      "id": "82e44370-136f-42d5-9b8b-bcfae8fa62e8",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Get Organization SETUP').item.json.evolution_instance }}",
        "remoteJid": "={{ $('payload_handler').item.json.contact.phone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        5580,
        920
      ],
      "id": "14d72b8f-d964-4e6d-a5a8-a3f5ff3d65c2",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "g7dMaKxLCwuLESJx",
          "name": "conn-evolution-codai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        380,
        340
      ],
      "id": "cd6352f9-c8ed-49ad-877c-4fa30c237c9e",
      "name": "When chat message received",
      "webhookId": "99d55b2c-b4f5-489d-a63f-be6150b0706e"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        []
      ]
    },
    "message-type": {
      "main": [
        [
          {
            "node": "Text Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Adapter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "openai-transcribe-audio": {
      "main": [
        [
          {
            "node": "Audio Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        []
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Redis Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait 2 seg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmento de Msgs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if-existing-lead": {
      "main": [
        [
          {
            "node": "message-type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "supabase-create-resident",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-get-lead": {
      "main": [
        [
          {
            "node": "if-existing-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Redis Memory": {
      "main": [
        [
          {
            "node": "Compara Get Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Segmento de Msgs": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model RAG": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI3": {
      "ai_embedding": [
        [
          {
            "node": "insert-doc-into-vector-store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "loop-files": {
      "main": [
        [
          {
            "node": "The End",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert-doc-into-vector-store": {
      "main": [
        [
          {
            "node": ">>>",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    ">>>": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get Organization SETUP - RAG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "payload_handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch-msg-from": {
      "main": [
        [
          {
            "node": "supabase-get-lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "payload_handler": {
      "main": [
        [
          {
            "node": "switch-msg-from",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adapter": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "openai-transcribe-audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sindnei-agent-ai": {
      "main": [
        []
      ]
    },
    "Supabase Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "insert-doc-into-vector-store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "insert-doc-into-vector-store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "loop-files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Próximo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Próximo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Próximo": {
      "main": [
        [
          {
            "node": "loop-files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Organization SETUP": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Organization SETUP - RAG": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-create-resident": {
      "main": [
        [
          {
            "node": "message-type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 seg": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_apto_by_garage_number": {
      "ai_tool": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_garage_by_apto_number": {
      "ai_tool": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Get Organization SETUP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "69fc7c2b-c170-45df-adc2-8b56acccdc33",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-04-20T13:18:50.314Z",
      "updatedAt": "2025-04-20T13:18:50.314Z",
      "id": "6KEPqx90w7A0maJs",
      "name": "sindney-ai"
    }
  ]
}