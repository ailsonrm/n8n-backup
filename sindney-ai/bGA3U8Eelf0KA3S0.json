{
  "createdAt": "2025-03-30T03:14:07.600Z",
  "updatedAt": "2025-04-19T13:20:44.822Z",
  "id": "bGA3U8Eelf0KA3S0",
  "name": "Project | Sindney-AI | CXA",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "content": "## Pausa para Atendimento Humano",
        "height": 440,
        "width": 1240,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        840
      ],
      "typeVersion": 1,
      "id": "bd0dd800-2f15-4534-bcdc-0dfcff224157",
      "name": "Sticky Note29",
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sindney-ai-cxa",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -260,
        180
      ],
      "id": "30c21d0f-94f5-4946-905a-63a11e319484",
      "name": "Webhook",
      "webhookId": "153099f1-d1d2-4777-be6d-aeaa613f245f"
    },
    {
      "parameters": {
        "content": "## Registro de Cliente no Supabase",
        "height": 440,
        "width": 600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1260,
        820
      ],
      "typeVersion": 1,
      "id": "93fc3884-c1d0-4989-8243-6bebf4c1e8bd",
      "name": "Sticky Note22",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Classifica Mensagens",
        "height": 440,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1900,
        820
      ],
      "typeVersion": 1,
      "id": "74790b41-1d2a-45cb-b944-bd69f1be2d6e",
      "name": "Sticky Note28",
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5babf18b-3925-426c-b907-e8f3e7936ffc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d8c1d47a-0014-4d4c-8c43-c68df3a99df2",
                    "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1960,
        880
      ],
      "id": "9e4f6772-b2b6-43cd-aec7-de15a28e3c9a",
      "name": "message-type"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "pt"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2420,
        1100
      ],
      "id": "d1cb7159-73ee-401d-80a2-2bb923885f3f",
      "name": "openai-transcribe-audio",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer",
        "messageData": "={{ $('payload_handler').item.json.message.text.conversation }}",
        "tail": true
      },
      "id": "4404e51a-9aee-4a3d-af33-66798498ebb1",
      "name": "Text Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2700,
        900
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer",
        "messageData": "={{ $('openai-transcribe-audio').item.json.text }}",
        "tail": true
      },
      "id": "9ede7aef-b0ba-44e4-924c-9d62bead567e",
      "name": "Audio Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2700,
        1060
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $item(0).$node[\"Compara Get Memory\"].json[\"Redis2\"]; // Obtém o valor de Redis2 do nó \"If\"\n\n// Verifica se o dado é uma string que representa um array, e converte se necessário\nlet array = Array.isArray(data) ? data : JSON.parse(data);\n\n// Junta os elementos do array com um espaço entre eles\nconst mensagem_completa = array.join(\" \");\n\n// Retorna o resultado com o nome da variável \"mensagem_completa\"\nreturn [{ json: { mensagem_completa } }];\n"
      },
      "id": "ed903d0d-a597-4f9a-a71a-22b8d3e9fb90",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        880
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer",
        "options": {}
      },
      "id": "199939c6-f0a5-453a-9a55-6377993f4114",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3260,
        980
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "content": "## Mensagem Picotada",
        "height": 440,
        "width": 1180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2640,
        820
      ],
      "typeVersion": 1,
      "id": "fdab60e6-aa30-40c5-8c52-f2a8eadb07e9",
      "name": "Sticky Note24",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer",
        "options": {}
      },
      "id": "1e9ca98e-e7b3-47d9-9111-27c8e211f540",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2920,
        980
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $('Edit Redis Memory').item.json.Redis2 }}",
              "rightValue": "={{ $('Edit Redis Memory').item.json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ecfc6aa1-58d0-4a03-921e-fab14a1b345a",
      "name": "Compara Get Memory",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3600,
        980
      ]
    },
    {
      "parameters": {
        "content": "## Síndney.AI",
        "height": 440,
        "width": 560,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3860,
        820
      ],
      "typeVersion": 1,
      "id": "a9174d20-dc0b-4ff4-94b1-3c63fa974a36",
      "name": "Sticky Note4",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4000,
        1120
      ],
      "id": "cec7803c-f199-4b98-b269-f8b49f167b89",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('payload_handler').item.json.contact.phone }}_chat_memory_{{ $('Get Organization SETUP').item.json.name }}",
        "tableName": "={{ $('Get Organization SETUP').item.json.chat_table_name }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4160,
        1120
      ],
      "id": "6b9a194a-7edf-4fbd-ad8c-b9b916524727",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "cz2rcBLkiWj3LOLr",
          "name": "conn-postgres-codai-geral"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "11d1612a-4d3d-4678-9c62-873cc94defbd",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4540,
        1080
      ],
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "fba47186-c516-4588-855b-f7481d92d196",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5480,
        1000
      ],
      "webhookId": "b780c57e-4665-46f9-af6a-5c4c735086d2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=message to be splitted: {{ $('sindnei-agent-ai').item.json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n\n```json\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n```\n\nAs mensagens devem ser divididas de forma natural e legível, considerando que estamos nos comunicando com um humano.\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo colchetes, aspas e a formatação do texto.\n\nRegras de Formatação:\n  Negrito: Use *palavra* em vez de **palavra**.\n  Tachado: Para indicar texto excluído ou alterado.\n  Itálico: Utilize apenas em casos extremamente raros.\n  link: Sempre usar essa formatação para todos os links.\n\nRegras para separação das mensagens:\nMensagem de introdução: Deve ser uma mensagem separada.\nDetalhes do agendamento: Devem ser mantidos juntos em uma única mensagem, usando \\n para quebras de linha.\nMensagem final de suporte: Deve ser separada."
            }
          ]
        }
      },
      "id": "fc224531-08ba-4511-ad6d-5ad4e51e95dd",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        4540,
        900
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.name }}_msg_buffer"
      },
      "id": "aad49b16-fe74-4a86-a94e-a74e366f6761",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5280,
        860
      ],
      "credentials": {
        "redis": {
          "id": "V7I628KPjYoW7zjF",
          "name": "conn-redis-server-codai"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $('supabase-get-lead').item.json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1460,
        900
      ],
      "id": "220bd2ee-9d1b-4e2d-afe1-74ae18a782eb",
      "name": "if-existing-lead"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "={{ $('Get Organization SETUP').item.json.resident_table }}",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $('payload_handler').item.json.contact.phone.toNumber() }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1300,
        900
      ],
      "id": "2456edbb-1e57-45b4-b135-19067686a5d2",
      "name": "supabase-get-lead",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## R.A.G",
        "height": 420,
        "width": 560
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3860,
        1300
      ],
      "typeVersion": 1,
      "id": "7a37f4d0-57e1-4236-aa08-4f4a763362b8",
      "name": "Sticky Note5",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1020,
        1120
      ],
      "id": "d28438e7-937a-49c3-a253-1c2ce607bddb",
      "name": "Não faz nada - Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $('Get Memory 2').item.json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "03f67f5c-89df-4458-9db3-860ba10dbfe1",
      "name": "Edit Redis Memory",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3420,
        980
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "ff08935e-1d79-429e-acf3-81265964211f",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        4700,
        1080
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "eefc17ff-a01f-4f7d-ace4-139c542a17ac",
      "name": "Segmento de Msgs",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        4860,
        900
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "361c737b-c06c-4726-bfb1-93aefb60bc43",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        5060,
        900
      ]
    },
    {
      "parameters": {
        "name": "get_rag_vector_infos",
        "description": "Documentos internos, use para responder os moradores, com base nos documentos, tire as dúvidas e questionamentos sobre o condomínio.",
        "topK": 2
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        4120,
        1320
      ],
      "id": "191e3fc7-f549-4095-8908-11ecf89a977e",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4220,
        1460
      ],
      "id": "efef0d8a-b61d-4d7a-9e91-5dae866b53e7",
      "name": "OpenAI Chat Model RAG",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "content": "## Scan Google Drive para o Banco de Dados Vetorial.",
        "height": 620,
        "width": 2620,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        1300
      ],
      "typeVersion": 1,
      "id": "bc32fec8-8e66-40e9-832c-a49da8ff521f",
      "name": "Sticky Note6",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1900,
        1560
      ],
      "id": "87fb0c59-3a80-4dd4-91b5-f1a7269853cc",
      "name": "Embeddings OpenAI3",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        620,
        1480
      ],
      "id": "aff7a5df-5df8-44b1-a29c-1de87604f85d",
      "name": "loop-files",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        800,
        1380
      ],
      "id": "84959db2-d5a7-4e06-b3e5-1b1f8ce53bb4",
      "name": "The End",
      "disabled": true
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "={{ $('Get Organization SETUP - RAG').item.json.vector_rag_table }}",
          "mode": "id"
        },
        "options": {
          "queryName": "={{ $('Get Organization SETUP - RAG').item.json.match_function }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1960,
        1380
      ],
      "id": "fd32a87d-2a46-4e4b-8399-638d5dfe344e",
      "name": "insert-doc-into-vector-store",
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": ">>>",
      "typeVersion": 1,
      "position": [
        2400,
        1720
      ],
      "id": "0ceb65f0-05a4-4686-b98a-05616d635375",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Resposta humanizada\n",
        "height": 440,
        "width": 1180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4460,
        820
      ],
      "typeVersion": 1,
      "id": "a0a54ec3-bba1-45ea-b796-6dd43ef8e804",
      "name": "Sticky Note2",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        20,
        1480
      ],
      "id": "326e8acc-feda-4d80-8981-8809d3a71534",
      "name": "When clicking ‘Test workflow’",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now.setLocale('pt-BR').setZone(\"America/Sao_Paulo\") }}",
        "format": "custom",
        "customFormat": "EEEE, dd 'de' MMMM 'de' yyyy 'às' HH:mm",
        "outputFieldName": "=formattedDate",
        "options": {
          "includeInputFields": false,
          "timezone": true
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        420,
        920
      ],
      "id": "a67475fd-ead9-45b7-8af6-61dc60ab9692",
      "name": "Date & Time",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                    "rightValue": "fromClient",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    },
                    "id": "8d7d84f4-ab9f-4e1f-9b9a-e83cc4e9bc03"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "User"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4bee2c7b-e8fa-420c-9d5e-6140002eca91",
                    "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                    "rightValue": "eventN8n",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Me"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "40fbb4c3-f89c-4eab-8cbd-5ad683f756c6",
                    "leftValue": "={{ $('payload_handler').item.json.message.isGroup }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Group"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        820,
        920
      ],
      "id": "6aee8630-7e90-41a9-8648-ac5e0fd9a45e",
      "name": "switch-msg-from"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0d409c70-6488-4f4f-8681-5bb552563957",
              "name": "evolution.serverUrl",
              "value": "={{ $('Webhook').item.json.body.body.server_url }}",
              "type": "string"
            },
            {
              "id": "4ae67c6f-3fba-45c0-ade2-1fa3731b93e8",
              "name": "evolution.phone",
              "value": "={{ $('Webhook').item.json.body.body.sender.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "6e253dad-0fbf-4a74-b6a4-618c79bb3460",
              "name": "evolution.apiKey",
              "value": "={{ $('Webhook').item.json.body.body.apikey }}",
              "type": "string"
            },
            {
              "id": "5e3e579f-f9dd-4fb0-9c4b-d2c56b151c55",
              "name": "contact.phone",
              "value": "={{ $('Webhook').item.json.body.body.data.key.remoteJid.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "877887ea-c7df-4c1e-b6a9-4ec573256127",
              "name": "contact.firstName",
              "value": "={{ $('Webhook').item.json.body.body.data.pushName.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "ecc3073f-8c25-41bb-abfe-402c385c6031",
              "name": "contact.fullName",
              "value": "={{ $('Webhook').item.json.body.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "d4768288-0024-47c6-b9c6-3dcc9e18c2e0",
              "name": "message.type",
              "value": "={{ !!$('Webhook').item.json.body.body.data.message.conversation && 'text' || \n   !!$('Webhook').item.json.body.body.data.message.audioMessage && 'audio'\n}}",
              "type": "string"
            },
            {
              "id": "20a86b71-c77f-4b4e-9db9-b9964276e67f",
              "name": "message.text.conversation",
              "value": "={{ $('Webhook').item.json.body.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
              "name": "message.audio.base64",
              "value": "={{ $('Webhook').item.json.body.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "3c159587-cd22-45df-aac7-82add1c9992e",
              "name": "message.status",
              "value": "={{ $('Webhook').item.json.body.body.data.status }}",
              "type": "string"
            },
            {
              "id": "cc95a725-d953-433d-a8ee-aa903f515ca5",
              "name": "message.timestamp",
              "value": "={{ DateTime.fromMillis($('Webhook').item.json.body.body.data.messageTimestamp) }}",
              "type": "string"
            },
            {
              "id": "d65f9d80-5f16-4c29-965b-fc8832fe13eb",
              "name": "message.fromMe",
              "value": "={{ $('Webhook').item.json.body.body.data.key.fromMe }}",
              "type": "boolean"
            },
            {
              "id": "44cce600-ebb8-4242-8008-5da0951d16c5",
              "name": "message.isGroup",
              "value": "={{ $('Webhook').item.json.body.body.event != 'messages.upsert' }}",
              "type": "boolean"
            },
            {
              "id": "c3d798ea-378e-4f39-a764-82ff9733e36a",
              "name": "message.id",
              "value": "={{ $('Webhook').item.json.body.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        920
      ],
      "id": "4dc8e981-5e08-4afd-8b37-07095c1b8a5b",
      "name": "payload_handler"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "=file_{{ $now.format('yyyyMMdd_HHmmss') }}.ogg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2220,
        1100
      ],
      "id": "061f0e10-a353-4a8a-b63c-592a7e680f05",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
              "name": "base64",
              "value": "={{ $('payload_handler').item.json.message.audio.base64 }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2000,
        1100
      ],
      "id": "a9816a3a-f091-4f8b-a849-690deca34235",
      "name": "Adapter"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagem_completa }}",
        "options": {
          "systemMessage": "=<setup>\nNome do morador: {{ $('payload_handler').item.json.contact.firstName }}  \nHoje é dia {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n</setup>\n\n{{ $('Get Organization SETUP').item.json.prompt }}"
        }
      },
      "id": "a2862133-1224-418c-bd3a-4638eef2d1e9",
      "name": "sindnei-agent-ai",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        4120,
        960
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Get Organization SETUP').item.json.evolution_instance }}",
        "remoteJid": "={{ $('payload_handler').item.json.contact.phone }}",
        "messageText": "={{ $('Loop Over Items1').item.json.output }}",
        "options_message": {
          "delay": 2000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        5280,
        1020
      ],
      "id": "de21e9b5-0afc-4d42-a5ad-246b2407b184",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "AFA66zDXLVtbWuS0",
          "name": "conn-evolution-sindnei"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "={{ $('Get Organization SETUP').item.json.vector_rag_table }}",
          "mode": "id"
        },
        "options": {
          "queryName": "={{ $('Get Organization SETUP').item.json.match_function }}",
          "metadata": {
            "metadataValues": [
              {
                "name": "organization",
                "value": "={{ $('Get Organization SETUP').item.json.name }}"
              },
              {
                "name": "bucket",
                "value": "={{ $('Get Organization SETUP').item.json.bucket }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        3900,
        1440
      ],
      "id": "0511b72b-97a2-4a9c-a839-ca86501a10a6",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        4040,
        1580
      ],
      "id": "35823d2b-da24-4e78-9465-b5f9eab16d17",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "01FjxP3nXBoPqAZI",
          "name": "conn-openai-codai"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "qLGtnQwfSmjupFe0",
          "mode": "list",
          "cachedResultName": "OCR EdenAI"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "file_name": "={{ $('loop-files').item.json.name }}",
            "bucket_id": "={{ $('Get Organization SETUP - RAG').item.json.bucket }}",
            "project_id": "={{ $('Get Organization SETUP - RAG').item.json.project_id }}"
          },
          "matchingColumns": [
            "file_name"
          ],
          "schema": [
            {
              "id": "file_name",
              "displayName": "file_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "bucket_id",
              "displayName": "bucket_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "project_id",
              "displayName": "project_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1480,
        1540
      ],
      "id": "bfaab7df-7394-4f1d-a89f-1b77147bf3a0",
      "name": "Execute Workflow",
      "disabled": true
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "organization",
                "value": "={{ $('Get Organization SETUP - RAG').item.json.name }}"
              },
              {
                "name": "=bucket",
                "value": "={{ $('Get Organization SETUP - RAG').item.json.bucket }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2040,
        1560
      ],
      "id": "d79f3062-2b83-4f2e-9a6a-bacdb359bbe6",
      "name": "Default Data Loader",
      "disabled": true
    },
    {
      "parameters": {
        "chunkSize": 10000,
        "chunkOverlap": 1000,
        "options": {
          "splitCode": "markdown"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2140,
        1700
      ],
      "id": "61c13468-7460-4c82-9dfe-097993485b4c",
      "name": "Recursive Character Text Splitter",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1a361e3f-e955-4846-a3fd-068df085fdec",
              "name": "=clean_text",
              "value": "={{ $json.data[0].text || $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        1540
      ],
      "id": "19afc71c-d44f-4792-b9b9-8077cb3b843b",
      "name": "Edit Fields",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT name FROM storage.objects WHERE bucket_id = '{{ $('Get Organization SETUP - RAG').item.json.bucket }}' AND name NOT LIKE '.%'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        420,
        1480
      ],
      "id": "74688b65-bd57-4263-8618-dc80d8938799",
      "name": "Postgres",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "cz2rcBLkiWj3LOLr",
          "name": "conn-postgres-codai-geral"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "tableId": "={{ $('Get Organization SETUP - RAG').item.json.file_sync_table }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "file_name",
              "fieldValue": "={{ $('loop-files').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1300,
        1540
      ],
      "id": "3f0952db-522b-4ae6-ba85-5cbbc13c715c",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "={{ $('Get Organization SETUP - RAG').item.json.file_sync_table}}",
        "filters": {
          "conditions": [
            {
              "keyName": "file_name",
              "condition": "eq",
              "keyValue": "={{ $('loop-files').item.json.name }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "processed",
              "fieldValue": "=true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        460,
        1700
      ],
      "id": "a08b82c3-34bf-47d1-a04c-821422e498e4",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "={{ $('Get Organization SETUP - RAG').item.json.file_sync_table}}",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "file_name",
              "condition": "eq",
              "keyValue": "={{ $json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        800,
        1560
      ],
      "id": "8b475a3c-109d-46e7-9666-f76ca4d9b77b",
      "name": "Supabase2",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cf9547e2-4c1c-463c-843c-de801a6fd47e",
                    "leftValue": "={{ $json.processed }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Não Processado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.processed }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "7389f352-bf07-431d-bff1-e33b2f142e5d"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Processado"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1000,
        1560
      ],
      "id": "c509d126-d123-4bb6-88ce-9b6a4452ca7b",
      "name": "Switch",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1180,
        1700
      ],
      "id": "d81449ef-3442-4655-a6a5-47dfcbb2959c",
      "name": "Próximo",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "organization",
        "filters": {
          "conditions": [
            {
              "keyName": "name",
              "keyValue": "={{ $json.body.body.instance }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        220,
        920
      ],
      "id": "1d69fd04-7e06-4946-867d-7e5ab5ede5cf",
      "name": "Get Organization SETUP",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "organization",
        "filters": {
          "conditions": [
            {
              "keyName": "name",
              "keyValue": "=sindney-0"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        220,
        1480
      ],
      "id": "65a142ff-4a2c-44de-8649-af3bfef8c2f0",
      "name": "Get Organization SETUP - RAG",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      },
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "={{ $('Get Organization SETUP').item.json.resident_table }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "id",
              "fieldValue": "={{ $('payload_handler').item.json.contact.phone.toNumber() }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $('payload_handler').item.json.contact.fullName }}"
            },
            {
              "fieldId": "organization",
              "fieldValue": "={{ $('Get Organization SETUP').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1640,
        1060
      ],
      "id": "dc161ae5-5487-4aa6-8e73-42147a91e5d1",
      "name": "supabase-create-resident",
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "c83b38ff-c06c-4c71-8542-597a21cbb017",
      "name": "Wait 2 seg",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3100,
        980
      ],
      "webhookId": "52441967-5a76-464a-98fd-c5f7e5d90e8a"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "garage_sindney",
        "filters": {
          "conditions": [
            {
              "keyName": "garage_number",
              "keyValue": "={{ $fromAI('garage_number', `parking space number`, 'string') }}"
            },
            {
              "keyName": "organization",
              "keyValue": "={{ $('Get Organization SETUP').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        4520,
        1320
      ],
      "id": "f589dc92-3d5f-4025-8dfe-72c218890dd8",
      "name": "get_apto_by_garage_number",
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "garage_sindney",
        "filters": {
          "conditions": [
            {
              "keyName": "apto",
              "keyValue": "={{ $fromAI('apto_number', `apartment number`, 'string') }}"
            },
            {
              "keyName": "organization",
              "keyValue": "={{ $('Get Organization SETUP').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        4700,
        1320
      ],
      "id": "229cd911-54db-4c9a-8124-4ad3ad78de9c",
      "name": "get_garage_by_apto_number",
      "credentials": {
        "supabaseApi": {
          "id": "tBGW7m5fVrkdNlgE",
          "name": "conn-supabase-codai-geral"
        }
      }
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        []
      ]
    },
    "message-type": {
      "main": [
        [
          {
            "node": "Text Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Adapter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "openai-transcribe-audio": {
      "main": [
        [
          {
            "node": "Audio Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Redis Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait 2 seg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmento de Msgs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if-existing-lead": {
      "main": [
        [
          {
            "node": "message-type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "supabase-create-resident",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-get-lead": {
      "main": [
        [
          {
            "node": "if-existing-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Redis Memory": {
      "main": [
        [
          {
            "node": "Compara Get Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Segmento de Msgs": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model RAG": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI3": {
      "ai_embedding": [
        [
          {
            "node": "insert-doc-into-vector-store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "loop-files": {
      "main": [
        [
          {
            "node": "The End",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert-doc-into-vector-store": {
      "main": [
        [
          {
            "node": ">>>",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    ">>>": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get Organization SETUP - RAG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "payload_handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch-msg-from": {
      "main": [
        [
          {
            "node": "supabase-get-lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "payload_handler": {
      "main": [
        [
          {
            "node": "switch-msg-from",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adapter": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "openai-transcribe-audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sindnei-agent-ai": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "insert-doc-into-vector-store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "insert-doc-into-vector-store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "loop-files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Próximo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Próximo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Próximo": {
      "main": [
        [
          {
            "node": "loop-files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Organization SETUP": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Organization SETUP - RAG": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-create-resident": {
      "main": [
        [
          {
            "node": "message-type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 seg": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_apto_by_garage_number": {
      "ai_tool": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_garage_by_apto_number": {
      "ai_tool": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "b1f94c2e-2e5a-40b5-8815-3253afb868cf",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-03-30T03:14:37.966Z",
      "updatedAt": "2025-04-03T20:26:13.650Z",
      "id": "NnEsEtAiQ495JCTT",
      "name": "sindney-ai"
    }
  ]
}