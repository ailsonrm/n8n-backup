{
  "createdAt": "2025-05-13T00:43:19.869Z",
  "updatedAt": "2025-06-27T16:58:33.122Z",
  "id": "XqG9B4k1QHL7Dzov",
  "name": "Sindney-AI | CXA",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "content": "## Pausa para Atendimento Humano",
        "height": 440,
        "width": 1240,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        560,
        -60
      ],
      "typeVersion": 1,
      "id": "dbe976be-67ff-4160-aa43-05f377d0e818",
      "name": "Sticky Note29",
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sindney-ai-cxa",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        600,
        40
      ],
      "id": "027e8f3c-e4f8-4114-a08e-1718d5fb0b82",
      "name": "Webhook",
      "webhookId": "153099f1-d1d2-4777-be6d-aeaa613f245f"
    },
    {
      "parameters": {
        "content": "## Registro de Cliente no Supabase",
        "height": 440,
        "width": 600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1840,
        -60
      ],
      "typeVersion": 1,
      "id": "d86c719e-0c50-4aa5-9b13-8463311fb55c",
      "name": "Sticky Note22",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $('supabase-get-lead').item.json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2040,
        20
      ],
      "id": "73745091-0bc2-4f60-a185-6965bd38ba41",
      "name": "if-existing-lead"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "={{ $('Get Organization SETUP').item.json.resident_table }}",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $('payload_handler').item.json.contact.phone.toNumber() }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1880,
        20
      ],
      "id": "8dee3527-12ad-4e8a-b06a-42bbe725673d",
      "name": "supabase-get-lead",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "k2x4f9crOBMYvhPM",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1600,
        220
      ],
      "id": "e480a5b1-06c8-43c9-adae-b5d2c2ef865d",
      "name": "Não faz nada - Workflow"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now.setLocale('pt-BR').setZone(\"America/Sao_Paulo\") }}",
        "format": "custom",
        "customFormat": "EEEE, dd 'de' MMMM 'de' yyyy 'às' HH:mm",
        "outputFieldName": "=formattedDate",
        "options": {
          "includeInputFields": false,
          "timezone": true
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1000,
        40
      ],
      "id": "b7f7ce48-8ab2-4021-bad6-ed88f76dc320",
      "name": "Date & Time",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                    "rightValue": "fromClient",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    },
                    "id": "8d7d84f4-ab9f-4e1f-9b9a-e83cc4e9bc03"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "User"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4bee2c7b-e8fa-420c-9d5e-6140002eca91",
                    "leftValue": "={{ $('payload_handler').item.json.message.fromMe }}",
                    "rightValue": "eventN8n",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Me"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "40fbb4c3-f89c-4eab-8cbd-5ad683f756c6",
                    "leftValue": "={{ $('payload_handler').item.json.message.isGroup }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Group"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1400,
        40
      ],
      "id": "2cd8652b-3ce0-4135-a1d9-a3a7a14f45e5",
      "name": "switch-msg-from"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0d409c70-6488-4f4f-8681-5bb552563957",
              "name": "evolution.serverUrl",
              "value": "={{ $('Webhook').item.json.body.body.server_url }}",
              "type": "string"
            },
            {
              "id": "4ae67c6f-3fba-45c0-ade2-1fa3731b93e8",
              "name": "evolution.phone",
              "value": "={{ $('Webhook').item.json.body.body.sender.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "6e253dad-0fbf-4a74-b6a4-618c79bb3460",
              "name": "evolution.apiKey",
              "value": "={{ $('Webhook').item.json.body.body.apikey }}",
              "type": "string"
            },
            {
              "id": "5e3e579f-f9dd-4fb0-9c4b-d2c56b151c55",
              "name": "contact.phone",
              "value": "={{ $('Webhook').item.json.body.body.data.key.remoteJid.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "877887ea-c7df-4c1e-b6a9-4ec573256127",
              "name": "contact.firstName",
              "value": "={{ $('Webhook').item.json.body.body.data.pushName.split(' ')[0] }}",
              "type": "string"
            },
            {
              "id": "ecc3073f-8c25-41bb-abfe-402c385c6031",
              "name": "contact.fullName",
              "value": "={{ $('Webhook').item.json.body.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "d4768288-0024-47c6-b9c6-3dcc9e18c2e0",
              "name": "message.type",
              "value": "={{ !!$('Webhook').item.json.body.body.data.message.conversation && 'text' || \n   !!$('Webhook').item.json.body.body.data.message.audioMessage && 'audio'\n}}",
              "type": "string"
            },
            {
              "id": "20a86b71-c77f-4b4e-9db9-b9964276e67f",
              "name": "message.text.conversation",
              "value": "={{ $('Webhook').item.json.body.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
              "name": "message.audio.base64",
              "value": "={{ $('Webhook').item.json.body.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "3c159587-cd22-45df-aac7-82add1c9992e",
              "name": "message.status",
              "value": "={{ $('Webhook').item.json.body.body.data.status }}",
              "type": "string"
            },
            {
              "id": "cc95a725-d953-433d-a8ee-aa903f515ca5",
              "name": "message.timestamp",
              "value": "={{ DateTime.fromMillis($('Webhook').item.json.body.body.data.messageTimestamp) }}",
              "type": "string"
            },
            {
              "id": "d65f9d80-5f16-4c29-965b-fc8832fe13eb",
              "name": "message.fromMe",
              "value": "={{ $('Webhook').item.json.body.body.data.key.fromMe }}",
              "type": "boolean"
            },
            {
              "id": "44cce600-ebb8-4242-8008-5da0951d16c5",
              "name": "message.isGroup",
              "value": "={{ $('Webhook').item.json.body.body.event != 'messages.upsert' }}",
              "type": "boolean"
            },
            {
              "id": "c3d798ea-378e-4f39-a764-82ff9733e36a",
              "name": "message.id",
              "value": "={{ $('Webhook').item.json.body.body.data.key.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1200,
        40
      ],
      "id": "e6384dba-505c-425b-aeb6-aa3757589129",
      "name": "payload_handler"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "organizations",
        "filters": {
          "conditions": [
            {
              "keyName": "evolution_instance",
              "keyValue": "={{ $json.body.body.instance }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        800,
        40
      ],
      "id": "365fa363-1189-4b7b-9bc9-c06d8b250310",
      "name": "Get Organization SETUP",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "k2x4f9crOBMYvhPM",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "={{ $('Get Organization SETUP').item.json.resident_table }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "id",
              "fieldValue": "={{ $('payload_handler').item.json.contact.phone.toNumber() }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $('payload_handler').item.json.contact.fullName }}"
            },
            {
              "fieldId": "organization",
              "fieldValue": "={{ $('Get Organization SETUP').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2220,
        220
      ],
      "id": "0d926573-a607-434d-879d-fae6449970ee",
      "name": "supabase-create-resident",
      "credentials": {
        "supabaseApi": {
          "id": "k2x4f9crOBMYvhPM",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Classifica Mensagens",
        "height": 440,
        "width": 1000,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2480,
        -60
      ],
      "typeVersion": 1,
      "id": "940205a4-5e3e-4a7f-8274-d2c4577a7684",
      "name": "Sticky Note28",
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5babf18b-3925-426c-b907-e8f3e7936ffc"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d8c1d47a-0014-4d4c-8c43-c68df3a99df2",
                    "leftValue": "={{ $('payload_handler').item.json.message.type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2540,
        0
      ],
      "id": "28b96732-1537-4f27-a7a5-6ab052166237",
      "name": "message-type"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.evolution_instance }}_msg_buffer",
        "messageData": "={{ $('payload_handler').item.json.message.text.conversation }}",
        "tail": true
      },
      "id": "d749cd30-3578-48d0-a7ea-77158966aae1",
      "name": "Text Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3580,
        20
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.evolution_instance }}_msg_buffer",
        "messageData": "={{ $('openai-transcribe-audio').item.json.text }}",
        "tail": true
      },
      "id": "0bb3dc5e-d3e9-4519-abb9-3df4763fb59b",
      "name": "Audio Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3580,
        220
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.evolution_instance }}_msg_buffer",
        "options": {}
      },
      "id": "ba7e4fba-858e-4bce-8d2c-b99686d5bc97",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4140,
        120
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Mensagem Picotada",
        "height": 440,
        "width": 1180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3520,
        -60
      ],
      "typeVersion": 1,
      "id": "3d6b8085-8a57-40f9-bb76-53e628742950",
      "name": "Sticky Note24",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.evolution_instance }}_msg_buffer",
        "options": {}
      },
      "id": "d1800a49-04bd-4117-a489-9f3663a31457",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3800,
        120
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $('Edit Redis Memory').item.json.Redis2 }}",
              "rightValue": "={{ $('Edit Redis Memory').item.json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a176440b-f3e1-41a2-a261-9a5e2a416403",
      "name": "Compara Get Memory",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4480,
        120
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $('Get Memory 2').item.json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ccf9c804-06ce-4a11-bc24-946475a06721",
      "name": "Edit Redis Memory",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4300,
        120
      ]
    },
    {
      "parameters": {},
      "id": "c6cf2cfe-9563-42fd-b150-5fbf4b3dfc19",
      "name": "Wait 2 seg",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3980,
        120
      ],
      "webhookId": "52441967-5a76-464a-98fd-c5f7e5d90e8a"
    },
    {
      "parameters": {
        "inputText": "={{ $('Code').item.json.mensagem_completa }}",
        "categories": {
          "categories": [
            {
              "category": "SINDICANCIA",
              "description": "Detecta textos com dúvidas, informações ou reclamações sobre a rotina do condomínio. Palavras-chave: portaria, síndico, regras, barulho, encomenda, área comum, visitante, garagem, assembleia, vizinho, taxa condominial, manutenção, pets, regras do prédio, horários, reserva de espaço."
            },
            {
              "category": "MODULOCKER",
              "description": "Detecta textos relacionados à solução de armários inteligentes da Easytech, como lockers para condomínios, hotéis, lojas e eventos. Palavras-chave: modulocker, smart locker, guarda-volumes, QR Code, box térmico, armário modular, retirada de encomendas, locker autônomo, integração via app ou WhatsApp."
            }
          ]
        },
        "options": {
          "fallback": "other"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        4980,
        0
      ],
      "id": "9517b66e-ec51-4523-a70b-2fb389f69f49",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4900,
        200
      ],
      "id": "fbd90e91-0c13-420c-8823-aaaf7a4133da",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06bad7d3-190c-4501-97b9-206621389438",
              "name": "instruction",
              "value": "=<instruction>\nSEMPRE busque informações na tool[get_rag_vector_infos] e responda dúvidas sobre o condomínio que estão na base de dados RAG use a tool [get_rag_vector_infos].</instruction>\n\n<setup>\nNome do morador: {{ $('payload_handler').item.json.contact.firstName }}\nHoje é dia {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n</setup>\n\n<prompt>\n{{ $('Get Organization SETUP').item.json.prompt }}\n</prompt>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5400,
        -40
      ],
      "id": "7a11cdfd-7436-4db2-aa8a-6e052e7f32e5",
      "name": "Instruções para Sindicância"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06bad7d3-190c-4501-97b9-206621389438",
              "name": "instruction",
              "value": "=<instruction>\nSeu nome é Sindney, o síndico assistente virtual 24h do condomínio Residencial Sindney, no seu condomínio está implantado o Modulocker, caso o morador questione, tenha dúvidas, SEMPRE busque informações na tool [get_rag_vector_infos] que é uma base de dados RAG, para que você responda dúvidas sobre a solução Modulocker\n</instruction>\n\n<setup>\nNome do morador: {{ $('payload_handler').item.json.contact.firstName }}\nHoje é dia {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n</setup>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5400,
        120
      ],
      "id": "8e75cc23-eaaf-4ee3-aa2c-12cb3b9d101a",
      "name": "Instruções para Modulocker"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06bad7d3-190c-4501-97b9-206621389438",
              "name": "instruction",
              "value": "=<instruction>\nSiga a conversa normalmente\n</instruction>\n\n<setup>\nNome do morador: {{ $('payload_handler').item.json.contact.firstName }}\nHoje é dia {{ $now.setLocale('pt-BR').format(\"EEEE, dd 'de' MMMM 'de' yyyy - HH:mm:ss\") }}.\n</setup>\n\n<prompt>\n{{ $('Get Organization SETUP').item.json.prompt }}\n</prompt>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5120,
        220
      ],
      "id": "d5ec678d-9065-4ffe-aa87-bce146b409a6",
      "name": "Sem Instruções"
    },
    {
      "parameters": {
        "content": "## R.A.G",
        "height": 440,
        "width": 1080
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4740,
        -60
      ],
      "typeVersion": 1,
      "id": "eeaf0e0b-b1d3-4696-9dc8-d9a5d1420aea",
      "name": "Sticky Note",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a5e0a8b6-cffe-4f8a-9df9-a315951e390c",
              "name": "instruction",
              "value": "={{ $json.instruction }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5640,
        220
      ],
      "id": "6c42be48-1e8c-48e7-8682-21547f57e55f",
      "name": "Define Instruction"
    },
    {
      "parameters": {
        "content": "## Síndney.AI",
        "height": 460,
        "width": 560,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5860,
        -60
      ],
      "typeVersion": 1,
      "id": "6ec19847-1691-4eb0-8d22-dc47958606a6",
      "name": "Sticky Note4",
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('payload_handler').item.json.contact.phone }}_chat_memory_{{ $('Get Organization SETUP').item.json.evolution_instance }}",
        "tableName": "={{ $('Get Organization SETUP').item.json.chat_table_name }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        6080,
        220
      ],
      "id": "40da6129-3b37-4719-b964-d124fe9d496b",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "RixygZ7IsX3GFxXR",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code').item.json.mensagem_completa }}",
        "options": {
          "systemMessage": "={{ $('Define Instruction').item.json.instruction }}"
        }
      },
      "id": "512d2e1b-4a29-419b-8190-c67c82532c21",
      "name": "sindnei-agent-ai",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        6000,
        20
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "03b21e82-d2ad-4839-b799-265ca83f23eb",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        6540,
        200
      ],
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=message to be splitted: {{ $('sindnei-agent-ai').item.json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída exatamente no seguinte formato JSON:\n\n{\n  \"messages\": [\n    \"splittedMessage\",\n    \"splittedMessage\",\n    \"splittedMessage\",\n    \"splittedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural e fluida, como se estivessem sendo lidas por uma pessoa. Evite cortes abruptos ou divisões artificiais de frases.\n\n📌 Regras de Formatação (compatíveis com WhatsApp):\n\nNegrito: utilize *palavra* (não **palavra**)\n\nTachado: utilize apenas quando necessário.\n\nItálico: evite, use só em casos muito específicos.\n\nLinks: insira a URL diretamente (ex: https://abcd.com) — evite [texto](link) no WhatsApp.\n\n\n✂️ Regras para separação das mensagens:\nMensagem de introdução: deve ser separada das demais.\n\nDetalhes de agendamento ou instruções contínuas: devem estar em uma única mensagem, usando \\n para quebras de linha internas.\n\nMensagem final ou de suporte: deve ser separada em outra mensagem.\n\nImportante:\nA estrutura JSON deve conter a chave \"messages\" com uma lista de uma ou mais mensagens, de acordo com a divisão feita. Mantenha a sintaxe JSON válida, com colchetes, aspas e vírgulas corretamente posicionadas."
            }
          ]
        }
      },
      "id": "aeca1da2-7780-4281-8ea9-810adf1fa5b3",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        6540,
        20
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('payload_handler').item.json.contact.phone }}_{{ $('Get Organization SETUP').item.json.evolution_instance }}_msg_buffer"
      },
      "id": "54c5d961-7ded-416a-b58e-75be09f7e5c6",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        7400,
        -20
      ],
      "credentials": {
        "redis": {
          "id": "TaZC13ehzqYrWltc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "44005708-56f4-4120-8d26-5cb6ca13ba92",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        6700,
        200
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "f52572a7-bc53-45a4-8ca2-0c875c6baed1",
      "name": "Segmento de Msgs",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        6860,
        20
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0de54eb6-7f55-43c4-a118-08a907828668",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        7060,
        20
      ]
    },
    {
      "parameters": {
        "content": "## Resposta humanizada\n",
        "height": 440,
        "width": 1180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6480,
        -80
      ],
      "typeVersion": 1,
      "id": "2fe026e7-c177-4851-8b19-ffd457f87b91",
      "name": "Sticky Note2",
      "disabled": true
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Get Organization SETUP').item.json.evolution_instance }}",
        "remoteJid": "={{ $('payload_handler').item.json.contact.phone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 2000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        7400,
        180
      ],
      "id": "11b4963b-eb10-4fe6-9b66-6f8109900e54",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "yF1mcU14BypsoPiB",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "## R.A.G",
        "height": 300,
        "width": 560
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5860,
        420
      ],
      "typeVersion": 1,
      "id": "af0b8e39-93b0-4861-b195-defe7febd192",
      "name": "Sticky Note5",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "garage_sindney",
        "filters": {
          "conditions": [
            {
              "keyName": "garage_number",
              "keyValue": "={{ $fromAI('garage_number', `parking space number`, 'string') }}"
            },
            {
              "keyName": "organization",
              "keyValue": "={{ $('Get Organization SETUP').item.json.evolution_instance}}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        6520,
        580
      ],
      "id": "5aad5e06-9000-42c7-b78a-d1b7e44ce01d",
      "name": "get_apto_by_garage_number",
      "credentials": {
        "supabaseApi": {
          "id": "k2x4f9crOBMYvhPM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "garage_sindney",
        "filters": {
          "conditions": [
            {
              "keyName": "apto",
              "keyValue": "={{ $fromAI('apto_number', `apartment number`, 'string') }}"
            },
            {
              "keyName": "organization",
              "keyValue": "={{ $('Get Organization SETUP').item.json.evolution_instance }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        6700,
        580
      ],
      "id": "36a409fd-6dd1-49c8-bdf2-b5b9897c63ad",
      "name": "get_garage_by_apto_number",
      "credentials": {
        "supabaseApi": {
          "id": "k2x4f9crOBMYvhPM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of $input.all()) {\n  const data = item.json[\"Redis2\"];\n  let array = Array.isArray(data) ? data : JSON.parse(data);\n  const mensagem_completa = array.join(\" \");\n  results.push({ json: { mensagem_completa } });\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4780,
        0
      ],
      "id": "ae5f5a8f-dc04-44f8-8ecd-bc45b12355b8",
      "name": "Code"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "=get_rag_vector_infos",
        "toolDescription": "Documentos internos, use para responder os moradores, com base nesses documentos, tire as dúvidas e questionamentos sobre o condomínio e tbm sobre serviços que estão implantados no condomínio.",
        "tableName": {
          "__rl": true,
          "value": "={{ $('Get Organization SETUP').item.json.vector_rag_table }}",
          "mode": "id"
        },
        "options": {
          "queryName": "={{ $('Get Organization SETUP').item.json.match_function }}",
          "metadata": {
            "metadataValues": [
              {
                "name": "organization",
                "value": "={{ $('Get Organization SETUP').item.json.name }}"
              },
              {
                "name": "bucket",
                "value": "={{ $('Get Organization SETUP').item.json.bucket }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        5960,
        440
      ],
      "id": "dbec64c8-9669-47f8-8532-b5c2f2c49085",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "k2x4f9crOBMYvhPM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        6240,
        600
      ],
      "id": "b776d8c3-d7de-4300-bc34-93f2ee66d140",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "chat-api",
        "operation": "get-media-base64",
        "instanceName": "sindney_0",
        "messageId": "={{ $('Webhook').item.json.body.body.data.key.id }}",
        "convertToMp4": true
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2800,
        220
      ],
      "id": "9844e78b-6f74-463e-8e9a-f6f4c378de3f",
      "name": "Evolution API2",
      "credentials": {
        "evolutionApi": {
          "id": "yF1mcU14BypsoPiB",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "pt"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        3320,
        180
      ],
      "id": "9a89f760-7b88-4ac8-87bc-7ccceb970d58",
      "name": "openai-transcribe-audio",
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "=file_{{ $now.format('yyyyMMdd_HHmmss') }}.ogg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        3160,
        100
      ],
      "id": "9e82fd75-1d02-4742-ba07-3b125f9b236c",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5920,
        220
      ],
      "id": "cab91212-b9b3-416c-8777-e5ce481f0529",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "d0EynPkHQLqSswaA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
              "name": "base64",
              "value": "={{ $('Webhook').item.json.body.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2800,
        60
      ],
      "id": "0d68dea3-fa69-4c22-ac8c-d79fe9f470b6",
      "name": "Adapter Origin Base64"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64a79a38-696d-4383-a1a7-527a3ef3a4d4",
              "name": "base64",
              "value": "={{ $json.data.base64 }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2980,
        220
      ],
      "id": "8879e398-66b7-4db6-90ef-972a87cadf65",
      "name": "Adapter Get Base64"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bb505f99-c216-41b3-b588-696eb2f16593",
              "leftValue": "={{ $('Webhook').item.json.body.body.data.message.base64 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2560,
        240
      ],
      "id": "302461b7-0363-4b42-ae26-ed99b38ab623",
      "name": "If"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Get Organization SETUP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if-existing-lead": {
      "main": [
        [
          {
            "node": "message-type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "supabase-create-resident",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-get-lead": {
      "main": [
        [
          {
            "node": "if-existing-lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "payload_handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch-msg-from": {
      "main": [
        [
          {
            "node": "supabase-get-lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Não faz nada - Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "payload_handler": {
      "main": [
        [
          {
            "node": "switch-msg-from",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Organization SETUP": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "supabase-create-resident": {
      "main": [
        [
          {
            "node": "message-type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message-type": {
      "main": [
        [
          {
            "node": "Text Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Redis Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait 2 seg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Redis Memory": {
      "main": [
        [
          {
            "node": "Compara Get Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 seg": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Instruções para Sindicância",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Instruções para Modulocker",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sem Instruções",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Instruções para Sindicância": {
      "main": [
        [
          {
            "node": "Define Instruction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instruções para Modulocker": {
      "main": [
        [
          {
            "node": "Define Instruction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sem Instruções": {
      "main": [
        [
          {
            "node": "Define Instruction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define Instruction": {
      "main": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "sindnei-agent-ai": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmento de Msgs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Segmento de Msgs": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_apto_by_garage_number": {
      "ai_tool": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_garage_by_apto_number": {
      "ai_tool": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API2": {
      "main": [
        [
          {
            "node": "Adapter Get Base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "openai-transcribe-audio": {
      "main": [
        [
          {
            "node": "Audio Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "openai-transcribe-audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "sindnei-agent-ai",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Adapter Origin Base64": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adapter Get Base64": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Adapter Origin Base64",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.web.v3.codai.dev.br",
            "user-agent": "axios/1.8.3",
            "content-length": "8096",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.30.1.1",
            "x-forwarded-host": "n8n.web.v3.codai.dev.br",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "32f1b48cdbb4",
            "x-real-ip": "172.30.1.1"
          },
          "params": {},
          "query": {},
          "body": {
            "headers": {
              "host": "n8n.web.v3.codai.dev.br",
              "user-agent": "axios/1.7.9",
              "content-length": "7594",
              "accept-encoding": "gzip, compress, deflate, br",
              "content-type": "application/json",
              "x-forwarded-for": "172.30.1.1",
              "x-forwarded-host": "n8n.web.v3.codai.dev.br",
              "x-forwarded-port": "443",
              "x-forwarded-proto": "https",
              "x-forwarded-server": "32f1b48cdbb4",
              "x-real-ip": "172.30.1.1"
            },
            "params": {},
            "query": {},
            "body": {
              "event": "messages.upsert",
              "instance": "sindney_0",
              "data": {
                "key": {
                  "remoteJid": "5511967362820@s.whatsapp.net",
                  "fromMe": false,
                  "id": "3EB0AD18D2D878DBFCDE98"
                },
                "pushName": "Ailson </>",
                "status": "DELIVERY_ACK",
                "message": {
                  "audioMessage": {
                    "url": "https://mmg.whatsapp.net/v/t62.7117-24/29751552_1737574963511354_4456139168868980405_n.enc?ccb=11-4&oh=01_Q5Aa1wEMRrZUwvUOZLRF4NKNgfcJ0Wtm1-x9PDeB7BnhPs1nLw&oe=688654F2&_nc_sid=5e03e0&mms3=true",
                    "mimetype": "audio/ogg; codecs=opus",
                    "fileSha256": "bl8CSFiLJtY/d4XCVVCaCn75aiREJzqwXWTTYZCpBNM=",
                    "fileLength": "4230",
                    "seconds": 2,
                    "ptt": true,
                    "mediaKey": "Jo2zI6BUARGJ0l/URYC9BQx6Qvsj78vtKDi1PaNKa5E=",
                    "fileEncSha256": "Ci83Xn0r/oXt/i5tJmcgojDLbEcEASmM8LtrfWoy2bk=",
                    "directPath": "/v/t62.7117-24/29751552_1737574963511354_4456139168868980405_n.enc?ccb=11-4&oh=01_Q5Aa1wEMRrZUwvUOZLRF4NKNgfcJ0Wtm1-x9PDeB7BnhPs1nLw&oe=688654F2&_nc_sid=5e03e0",
                    "mediaKeyTimestamp": "1751042429",
                    "contextInfo": {
                      "ephemeralSettingTimestamp": "1744758087",
                      "disappearingMode": {
                        "initiator": "CHANGED_IN_CHAT"
                      }
                    },
                    "waveform": "IiAfHhwWEAsHERwnLy8vLzAyNDY4ODk6Ojs7PDw8PT0+P0BBPjk0Ly0tLCwsLCwsLzM2OjcyLSglIR4aFA0GAA==",
                    "viewOnce": false
                  },
                  "messageContextInfo": {
                    "deviceListMetadata": {
                      "senderKeyHash": "k+QP2qpbCiuJfQ==",
                      "senderTimestamp": "1751033304",
                      "senderAccountType": "E2EE",
                      "receiverAccountType": "E2EE",
                      "recipientKeyHash": "OjXQJH8EkZJhxg==",
                      "recipientTimestamp": "1751033327"
                    },
                    "deviceListMetadataVersion": 2,
                    "messageSecret": "uza6txx+0vmmK5/YUI43SIuN8kQqsGM29y/XKqqueYQ="
                  },
                  "base64": "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"
                },
                "contextInfo": {
                  "ephemeralSettingTimestamp": "1744758087",
                  "disappearingMode": {
                    "initiator": "CHANGED_IN_CHAT"
                  }
                },
                "messageType": "audioMessage",
                "messageTimestamp": 1751042431,
                "instanceId": "5ec24e7d-1ca5-4880-b2d7-3c99e3c3a49a",
                "source": "web"
              },
              "destination": "https://n8n.web.v3.codai.dev.br/webhook/sindney-ai-router",
              "date_time": "2025-06-27T13:40:32.476Z",
              "sender": "551151925747@s.whatsapp.net",
              "server_url": "https://api.evo.v3.codai.dev.br",
              "apikey": "3AF120F45AAC-4A6B-B579-78F3770A81F2"
            },
            "webhookUrl": "https://n8n.web.v3.codai.dev.br/webhook/sindney-ai-router",
            "executionMode": "production"
          },
          "webhookUrl": "https://n8n.web.v3.codai.dev.br/webhook/sindney-ai-cxa",
          "executionMode": "production"
        }
      }
    ]
  },
  "versionId": "3d03612f-1a8f-437c-a1ab-3783e0660676",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-05-13T00:41:46.576Z",
      "updatedAt": "2025-05-13T00:41:46.576Z",
      "id": "6ZfltSxWklBuq3kX",
      "name": "sindney-ai"
    }
  ]
}